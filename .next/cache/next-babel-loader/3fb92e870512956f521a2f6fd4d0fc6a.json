{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/stephen/Desktop/Taras web app/frontend-nextjs/components/Map.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Component } from 'react';\nimport ReactMapGL, { Popup } from 'react-map-gl';\n\nvar Map = /*#__PURE__*/function (_Component) {\n  _inherits(Map, _Component);\n\n  var _super = _createSuper(Map);\n\n  function Map() {\n    var _this;\n\n    _classCallCheck(this, Map);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      viewport: {\n        width: '100vw',\n        height: '100vh',\n        latitude: 38.89628315907695,\n        longitude: -77.02367155674042,\n        zoom: 11\n      },\n      geojson: {},\n      showPopup: true\n    });\n\n    return _this;\n  }\n\n  _createClass(Map, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var map = this.reactMap.getMap();\n      map.on('load', function () {\n        console.log(\"Starting to pull data!\");\n\n        _this2.pullNewData(0);\n      });\n      var popup = new ReactMapGL.Popup({\n        closeButton: false,\n        closeOnClick: false\n      });\n      map.on('mouseenter', 'places', function (e) {\n        // Change the cursor style as a UI indicator.\n        map.getCanvas().style.cursor = 'pointer';\n      });\n    }\n  }, {\n    key: \"pullNewData\",\n    value: function pullNewData(chunk) {\n      var _this3 = this;\n\n      console.log(\"pulling more data...\");\n      var url = 'http://192.168.86.34:3001/crash/coordinates/geojson?chunk=' + chunk;\n      fetch(url).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        return _this3.displayDataOnMap(data.data, chunk);\n      });\n    }\n  }, {\n    key: \"displayDataOnMap\",\n    value: function displayDataOnMap(geojson, chunk) {\n      var map = this.reactMap.getMap(); // add initial chunk of data\n\n      if (chunk == 0) {\n        this.state.geojson = geojson;\n        map.addSource('crash-data', this.state.geojson);\n        map.addLayer({\n          'id': 'crash-heat',\n          'type': 'heatmap',\n          'source': 'crash-data'\n        });\n        map.addLayer({\n          'id': 'points',\n          'type': 'circle',\n          'source': 'crash-data',\n          'paint': {\n            // make circles larger as the user zooms from z12 to z22\n            'circle-radius': {\n              'base': 1.75,\n              'stops': [[2, 2], [22, 22]]\n            }\n          },\n          'layout': {}\n        });\n      } else {\n        if (geojson.data.features.length == 0) {\n          console.log(\"All crashes loaded in!\");\n          return;\n        }\n\n        Array.prototype.push.apply(this.state.geojson.data.features, geojson.data.features);\n        map.getSource('crash-data').setData(this.state.geojson.data);\n      }\n\n      this.pullNewData(chunk + 1);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var showPopup = this.state.showPopup;\n      return __jsx(ReactMapGL, _extends({\n        ref: function ref(reactMap) {\n          return _this4.reactMap = reactMap;\n        },\n        mapStyle: \"mapbox://styles/mapbox/streets-v9\",\n        mapboxApiAccessToken: \"pk.eyJ1IjoieW9tYW40NyIsImEiOiJjampxM2g3YjUyMzFyM3ZvMXNjZ2R3d2ZtIn0.r0zXd8hAqa1haG3lkjlDwA\",\n        onViewportChange: function onViewportChange(viewport) {\n          return _this4.setState({\n            viewport: viewport\n          });\n        }\n      }, this.state.viewport, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 7\n        }\n      }), showPopup && __jsx(Popup, {\n        latitude: 37.78,\n        longitude: -122.41,\n        closeButton: true,\n        closeOnClick: false,\n        onClose: function onClose() {\n          return _this4.setState({\n            showPopup: false\n          });\n        },\n        anchor: \"top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }\n      }, \"You are here\")));\n    }\n  }]);\n\n  return Map;\n}(Component);\n\nexport default Map;","map":{"version":3,"sources":["/home/stephen/Desktop/Taras web app/frontend-nextjs/components/Map.js"],"names":["Component","ReactMapGL","Popup","Map","viewport","width","height","latitude","longitude","zoom","geojson","showPopup","map","reactMap","getMap","on","console","log","pullNewData","popup","closeButton","closeOnClick","e","getCanvas","style","cursor","chunk","url","fetch","then","res","json","data","displayDataOnMap","state","addSource","addLayer","features","length","Array","prototype","push","apply","getSource","setData","setState"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport ReactMapGL, {Popup} from 'react-map-gl';\n\nclass Map extends Component {\n\n  state = {\n    viewport: {\n      width: '100vw',\n      height: '100vh',\n      latitude: 38.89628315907695,\n      longitude: -77.02367155674042,\n      zoom: 11,\n    },\n    geojson: {},\n    showPopup: true\n  };\n\n  componentDidMount() {\n    const map = this.reactMap.getMap(); \n\n    map.on('load', () => {\n      console.log(\"Starting to pull data!\")\n      this.pullNewData(0);\n  })\n\n  var popup = new ReactMapGL.Popup({\n    closeButton: false,\n    closeOnClick: false\n    });\n\n    map.on('mouseenter', 'places', function(e) {\n      // Change the cursor style as a UI indicator.\n      map.getCanvas().style.cursor = 'pointer';\n    });\n    \n  }\n\n  pullNewData(chunk){\n\n    console.log(\"pulling more data...\");\n\n    let url = 'http://192.168.86.34:3001/crash/coordinates/geojson?chunk=' + chunk;\n\n      fetch(url)\n      .then(res => res.json())\n      .then(data => this.displayDataOnMap(data.data,chunk));\n\n  }\n\n  displayDataOnMap(geojson,chunk){\n\n    const map = this.reactMap.getMap(); \n\n    // add initial chunk of data\n    if(chunk == 0){\n\n      this.state.geojson = geojson;\n\n      map.addSource('crash-data',this.state.geojson)\n\n      map.addLayer(\n        {\n        'id': 'crash-heat',\n        'type': 'heatmap',\n        'source': 'crash-data',\n        });\n\n      map.addLayer({\n          'id': 'points',\n          'type': 'circle',\n          'source': 'crash-data',\n          'paint': {\n            // make circles larger as the user zooms from z12 to z22\n            'circle-radius': {\n            'base': 1.75,\n            'stops': [\n            [2, 2],\n            [22, 22]\n            ]\n            }},\n          'layout': {}});\n    } else {\n\n      if(geojson.data.features.length==0){\n        console.log(\"All crashes loaded in!\");\n        return;\n      }\n\n      Array.prototype.push.apply(this.state.geojson.data.features, geojson.data.features);\n\n      map.getSource('crash-data').setData(this.state.geojson.data)\n\n      \n    }\n\n    this.pullNewData(chunk+1);\n\n  }\n\n  render() {\n    const {showPopup} = this.state;\n    return (\n      <ReactMapGL\n        ref={(reactMap) => this.reactMap = reactMap}\n        mapStyle=\"mapbox://styles/mapbox/streets-v9\"\n        mapboxApiAccessToken=\"pk.eyJ1IjoieW9tYW40NyIsImEiOiJjampxM2g3YjUyMzFyM3ZvMXNjZ2R3d2ZtIn0.r0zXd8hAqa1haG3lkjlDwA\"\n        onViewportChange={(viewport) => this.setState({ viewport })}\n        {...this.state.viewport}\n      >\n          {showPopup && <Popup\n          latitude={37.78}\n          longitude={-122.41}\n          closeButton={true}\n          closeOnClick={false}\n          onClose={() => this.setState({showPopup: false})}\n          anchor=\"top\" >\n          <div>You are here</div>\n        </Popup>}\n      </ReactMapGL>\n    );\n  }\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}