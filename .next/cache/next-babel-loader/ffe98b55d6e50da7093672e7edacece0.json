{"ast":null,"code":"var _jsxFileName = \"/home/stephen/Desktop/BFBB_Client/bfbb-site/pages/strats/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport fetch from 'node-fetch';\nimport { DropdownButton, Dropdown, Button, Container, Image, Badge, Card, Accordion } from 'react-bootstrap';\nimport PageLayout from '../../components/PageLayout.js';\nimport Area from '../../components/Area.js';\nimport BACKEND_URL from '../../components/backendurl.js';\nimport ScrollAnimation from 'react-animate-on-scroll';\nimport InformationContainer from '../../components/InformationContainer.js';\n\nconst replace_text = text => {\n  var matches = text.match(/{link;(.*);(.*)}/g);\n  matches.forEach((match, index) => {\n    var split = match.split(\";\");\n    text = text.replace(match, `<a href=\"` + split[1] + `\">` + split[2].substring(0, split[2].length - 1) + `</a>`);\n  });\n  return text;\n};\n\nexport default class Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      level: null,\n      area: null,\n      strat: null\n    };\n  }\n\n  static getInitialProps({\n    query\n  }) {\n    return {\n      query\n    };\n  }\n\n  componentDidMount() {\n    this.getLevelData();\n  }\n\n  getLevelData() {\n    fetch(BACKEND_URL + 'bfbb-site/strat/' + this.props.query.id).then(res => res.json()).then(data => {\n      if (data.success == true && data.info.length > 0) {\n        this.setState({\n          strat: data.info[0]\n        });\n        console.log(\"Got strat, getting area \" + data.info[0].area);\n        fetch(BACKEND_URL + 'bfbb-site/area/' + data.info[0].area).then(res => res.json()).then(data2 => {\n          if (data2.success == true && data2.info.length > 0) {\n            this.setState({\n              area: data2.info[0]\n            });\n            console.log(\"Got area, getting level...\");\n            fetch(BACKEND_URL + 'bfbb-site/level/' + this.state.area.level).then(res => res.json()).then(data => {\n              if (data.success == true && data.info.length > 0) {\n                this.setState({\n                  level: data.info[0]\n                });\n                console.log(\"Got level, done!\");\n              } //fail here\n\n            });\n          } //fail here\n\n        });\n      } //fail here\n\n    });\n    fetch(BACKEND_URL + 'bfbb-site/level/' + this.props.query.id).then(res => res.json()).then(data => {\n      if (data.success == true && data.info.length > 0) this.setState({\n        level: data.info[0]\n      });\n    });\n    fetch(BACKEND_URL + 'bfbb-site/level/areas/' + this.props.query.id).then(res => res.json()).then(data => {\n      if (data.success == true && data.info.length > 0) {\n        this.setState({\n          areas: data.info\n        });\n        this.getStrats(data.info);\n      }\n    });\n  }\n\n  render() {\n    if (this.state.level == null) return __jsx(\"div\", {\n      style: {\n        color: \"#aabfff\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 49\n      }\n    }, \"Loading Strat...\"), \"Loading strat \", this.props.query.id, \"...\");\n    return __jsx(PageLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, \"Strat | \", this.state.strat.name), __jsx(\"div\", {\n      class: \"bg-image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }), __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, __jsx(Image, {\n      style: {\n        borderRadius: 50,\n        filter: \"drop-shadow(0 0 0.75rem black)\",\n        marginTop: 50,\n        marginBottom: 10\n      },\n      src: \"/level-banners/\" + this.state.level.name + \".png\",\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }), __jsx(ScrollAnimation, {\n      animateIn: \"zoomIn\",\n      animateOnce: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, __jsx(InformationContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }, this.state.strat.name, __jsx(\"span\", {\n      class: \"badge badge-dark\",\n      style: {\n        marginLeft: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 42\n      }\n    }, this.state.area.internal_name)), __jsx(\"p\", {\n      dangerouslySetInnerHTML: {\n        __html: replace_text(this.state.strat.description)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    }), __jsx(Accordion, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }, this.state.strat.methods.map(method => __jsx(Card, {\n      bg: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }\n    }, __jsx(Accordion.Toggle, {\n      as: Card.Header,\n      eventKey: method.name,\n      style: {\n        cursor: \"pointer\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, __jsx(\"span\", {\n      style: {\n        fontSize: 26\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 23\n      }\n    }, method.name)), __jsx(Accordion.Collapse, {\n      eventKey: method.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }, __jsx(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 23\n      }\n    }, method.description, __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }), method.videos.map(video => __jsx(\"a\", {\n      href: video,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 53\n      }\n    }, \"Video example\")))))))))), __jsx(\"style\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }, `\n\n          .bg-image{\n\n            background-image: url(\"/level-backgrounds/` + this.state.level.name + `.png\");\n\n            filter: blur(8px);\n            -webkit-filter: blur(8px);\n\n            height: 100%;\n\n            /* Center and scale the image nicely */\n            background-position: center;\n            background-repeat: no-repeat;\n            background-size: cover;\n            position: fixed;\n            left: 0;\n            right: 0;\n            z-index: -10;\n\n          }\n        `));\n  }\n\n}","map":{"version":3,"sources":["/home/stephen/Desktop/BFBB_Client/bfbb-site/pages/strats/[id].js"],"names":["useRouter","fetch","DropdownButton","Dropdown","Button","Container","Image","Badge","Card","Accordion","PageLayout","Area","BACKEND_URL","ScrollAnimation","InformationContainer","replace_text","text","matches","match","forEach","index","split","replace","substring","length","Index","React","Component","constructor","props","state","level","area","strat","getInitialProps","query","componentDidMount","getLevelData","id","then","res","json","data","success","info","setState","console","log","data2","areas","getStrats","render","color","name","borderRadius","filter","marginTop","marginBottom","marginLeft","internal_name","__html","description","methods","map","method","Header","cursor","fontSize","videos","video"],"mappings":"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","sourcesContent":["import { useRouter } from 'next/router'\nimport fetch from 'node-fetch'\nimport { DropdownButton, Dropdown, Button, Container, Image, Badge, Card, Accordion } from 'react-bootstrap'\nimport PageLayout from '../../components/PageLayout.js'\nimport Area from '../../components/Area.js'\nimport BACKEND_URL from '../../components/backendurl.js'\nimport ScrollAnimation from 'react-animate-on-scroll';\nimport InformationContainer from '../../components/InformationContainer.js'\n\nconst replace_text = (text) => {\n\n  var matches = text.match(/{link;(.*);(.*)}/g);\n\n  matches.forEach((match, index) => {\n    var split = match.split(\";\");\n    text = text.replace(match,\n      `<a href=\"` + split[1] + `\">` + split[2].substring(0,split[2].length-1) + `</a>`\n    )\n  }\n  )\n  return text;\n}\n\nexport default class Index extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      level: null,\n      area: null,\n      strat: null,\n    }\n\n  }\n\n  static getInitialProps({ query }) {\n    return { query }\n  }\n\n  componentDidMount() {\n\n    this.getLevelData();\n\n  }\n\n  getLevelData() {\n\n\n    fetch(BACKEND_URL + 'bfbb-site/strat/' + this.props.query.id)\n      .then(res => res.json())\n      .then(data => {\n        if (data.success == true && data.info.length > 0) {\n          this.setState({ strat: data.info[0] })\n          console.log(\"Got strat, getting area \" + data.info[0].area)\n          fetch(BACKEND_URL + 'bfbb-site/area/' + data.info[0].area)\n            .then(res => res.json())\n            .then(data2 => {\n              if (data2.success == true && data2.info.length > 0) {\n                this.setState({ area: data2.info[0] })\n                console.log(\"Got area, getting level...\")\n                fetch(BACKEND_URL + 'bfbb-site/level/' + this.state.area.level)\n                  .then(res => res.json())\n                  .then(data => {\n                    if (data.success == true && data.info.length > 0) {\n                      this.setState({ level: data.info[0] })\n                      console.log(\"Got level, done!\")\n                    }//fail here\n                  });\n              } //fail here\n            });\n        } //fail here\n      });\n\n    fetch(BACKEND_URL + 'bfbb-site/level/' + this.props.query.id)\n      .then(res => res.json())\n      .then(data => {\n        if (data.success == true && data.info.length > 0)\n          this.setState({ level: data.info[0] })\n      });\n\n    fetch(BACKEND_URL + 'bfbb-site/level/areas/' + this.props.query.id)\n      .then(res => res.json())\n      .then(data => {\n        if (data.success == true && data.info.length > 0) {\n          this.setState({ areas: data.info })\n          this.getStrats(data.info);\n        }\n      });\n  }\n\n\n  render() {\n    if (this.state.level == null)\n      return (<div style={{ color: \"#aabfff\" }}><title>Loading Strat...</title>Loading strat {this.props.query.id}...</div>)\n\n    return (\n      <PageLayout>\n\n        <title>Strat | {this.state.strat.name}</title>\n        <div class=\"bg-image\">\n        </div>\n\n        <Container>\n\n          <Image style={{ borderRadius: 50, filter: \"drop-shadow(0 0 0.75rem black)\", marginTop: 50, marginBottom: 10 }} src={\"/level-banners/\" + this.state.level.name + \".png\"} fluid></Image>\n\n          <ScrollAnimation animateIn=\"zoomIn\" animateOnce=\"true\">\n            <InformationContainer>\n              <h1>{this.state.strat.name}<span class=\"badge badge-dark\" style={{ marginLeft: 10 }}>{this.state.area.internal_name}</span></h1>\n              <p dangerouslySetInnerHTML={{ __html: replace_text(this.state.strat.description) }}></p>\n              <Accordion>\n                {this.state.strat.methods.map(method =>\n                  <Card bg=\"dark\">\n                    <Accordion.Toggle as={Card.Header} eventKey={method.name} style={{ cursor: \"pointer\" }}>\n                      <span style={{ fontSize: 26 }}>{method.name}</span>\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey={method.name}>\n                      <Card.Body>\n                        {method.description}\n                        <br></br>\n                        {method.videos.map(video => <a href={video}>Video example</a>)}\n                      </Card.Body>\n                    </Accordion.Collapse>\n                  </Card>\n                )}\n              </Accordion>\n\n            </InformationContainer>\n          </ScrollAnimation>\n\n        </Container>\n\n\n\n        <style>{`\n\n          .bg-image{\n\n            background-image: url(\"/level-backgrounds/`+ this.state.level.name + `.png\");\n\n            filter: blur(8px);\n            -webkit-filter: blur(8px);\n\n            height: 100%;\n\n            /* Center and scale the image nicely */\n            background-position: center;\n            background-repeat: no-repeat;\n            background-size: cover;\n            position: fixed;\n            left: 0;\n            right: 0;\n            z-index: -10;\n\n          }\n        `}</style>\n      </PageLayout>\n    )\n  }\n\n}"]},"metadata":{},"sourceType":"module"}