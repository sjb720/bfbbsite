{"ast":null,"code":"var _jsxFileName = \"/home/stephen/Desktop/BFBB_Client/bfbb-site/pages/admin.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport axios from 'axios';\nimport PageLayout from '../components/PageLayout.js';\nimport { Button, InputGroup, FormControl, Container, Col, Row, Image, Table } from 'react-bootstrap';\nimport BACKEND_URL from '../components/backendurl.js';\nconst information_container = {\n  backgroundColor: \"#111111aa\",\n  borderRadius: 20,\n  filter: \"drop-shadow(0 0 0.75rem black)\",\n  padding: 20,\n  paddingBottom: 10,\n  marginTop: 10\n};\nconst button_style = {\n  width: \"100%\",\n  marginTop: 20\n};\nexport default class Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      authorized: false,\n      username: \"\",\n      password: \"\",\n      token: \"\",\n      levels: [],\n      areas: [],\n      strats: []\n    };\n  }\n\n  componentDidMount() {}\n\n  login() {\n    let data = {\n      username: this.state.username,\n      password: this.state.password\n    };\n    let options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    };\n    fetch(BACKEND_URL + 'bfbb-site/login', options).then(res => res.json()).then(data => {\n      if (data.success) {\n        this.setState({\n          authorized: true,\n          token: data.token\n        });\n      } else {\n        console.log(data.error);\n      }\n    });\n  }\n\n  render() {\n    return __jsx(PageLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, \"\\uD83D\\uDEA8Admin Console\\uD83D\\uDEA8\"), __jsx(Container, {\n      style: {\n        textAlign: \"Center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, !this.state.authorized ? __jsx(\"div\", {\n      style: information_container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }, \"Prove you belong here.\"), __jsx(FormControl, {\n      onChange: e => this.setState({\n        username: e.target.value\n      }),\n      placeholder: \"Username\",\n      \"aria-label\": \"Username\",\n      \"aria-describedby\": \"basic-addon1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }), __jsx(FormControl, {\n      onChange: e => this.setState({\n        password: e.target.value\n      }),\n      placeholder: \"Password\",\n      \"aria-label\": \"Password\",\n      \"aria-describedby\": \"basic-addon1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }), __jsx(Button, {\n      onClick: () => this.login(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, \"Verify Me\")) : __jsx(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    })), __jsx(\"style\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, `body{\n        background-image: url(\"police.png\");\n        background-repeat: no-repeat;\n        background-attachment: fixed;\n      }`));\n  }\n\n}","map":{"version":3,"sources":["/home/stephen/Desktop/BFBB_Client/bfbb-site/pages/admin.js"],"names":["React","axios","PageLayout","Button","InputGroup","FormControl","Container","Col","Row","Image","Table","BACKEND_URL","information_container","backgroundColor","borderRadius","filter","padding","paddingBottom","marginTop","button_style","width","Index","Component","constructor","props","state","authorized","username","password","token","levels","areas","strats","componentDidMount","login","data","options","method","headers","body","JSON","stringify","fetch","then","res","json","success","setState","console","log","error","render","textAlign","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport PageLayout from '../components/PageLayout.js'\nimport { Button, InputGroup, FormControl, Container, Col, Row, Image, Table } from 'react-bootstrap'\nimport BACKEND_URL from '../components/backendurl.js'\n\nconst information_container = { backgroundColor: \"#111111aa\", borderRadius: 20, filter: \"drop-shadow(0 0 0.75rem black)\", padding: 20, paddingBottom: 10, marginTop: 10 }\n\nconst button_style = {\n  width: \"100%\",\n  marginTop: 20\n}\n\nexport default class Index extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      authorized: false,\n      username:\"\",\n      password:\"\",\n      token:\"\",\n      levels:[],\n      areas:[],\n      strats:[],\n    }\n  }\n\n  componentDidMount() {\n\n  }\n\n  login(){\n    let data = { username : this.state.username, password : this.state.password }\n\n    let options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    }\n\n\n    fetch(BACKEND_URL + 'bfbb-site/login', options)\n      .then(res => res.json())\n      .then(data => {\n        if(data.success){\n          this.setState({authorized:true, token:data.token})\n        } else {\n          console.log(data.error)\n        }\n      });\n  }\n\n\n  render() {\n    return (\n      <PageLayout>\n        <title>&#128680;Admin Console&#128680;</title>\n\n\n        <Container style={{ textAlign: \"Center\" }}>\n\n          {!this.state.authorized ?\n            <div style={information_container}>\n              <h1>\n              Prove you belong here.\n              </h1>\n              <FormControl\n                onChange={(e)=>this.setState({username: e.target.value})}\n                placeholder=\"Username\"\n                aria-label=\"Username\"\n                aria-describedby=\"basic-addon1\"\n              />\n              <FormControl\n              onChange={(e)=>this.setState({password: e.target.value})}\n                placeholder=\"Password\"\n                aria-label=\"Password\"\n                aria-describedby=\"basic-addon1\"\n              />\n              <Button onClick={()=>this.login()}>Verify Me</Button>\n            </div>\n\n            :\n\n            <Table></Table>\n          }\n\n\n        </Container>\n\n\n        <style>{`body{\n        background-image: url(\"police.png\");\n        background-repeat: no-repeat;\n        background-attachment: fixed;\n      }`}</style>\n      </PageLayout>\n\n\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}