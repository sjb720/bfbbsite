{"ast":null,"code":"var _jsxFileName = \"/home/stephen/Desktop/BFBB_Client/frontend-nextjs/pages/spectate/blitz/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport fetch from 'node-fetch';\nimport { DropdownButton, Dropdown, Button, Image } from 'react-bootstrap';\nimport data from '../../../../bfbb-backend/routes/data.js';\nimport BlitzBoard from '../../../components/BlitzBoard.js'; //const BACKEND_IP = \"https://bfbbhub.herokuapp.com\";\n\nconst BACKEND_IP = \"http://172.16.127.245:3001\";\nexport default class Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      room: null,\n      errorLoading: false\n    };\n  }\n\n  static getInitialProps({\n    query\n  }) {\n    return {\n      query\n    };\n  }\n\n  componentDidMount() {\n    fetch(BACKEND_IP + '/blitz/getroom/' + this.props.query.id).then(res => res.json()).then(data => {\n      if (data.success == true) this.setState({\n        room: data.room\n      });else this.setState({\n        errorLoading: true\n      });\n    });\n  }\n\n  render() {\n    if (this.state.room == null) return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, this.state.errorLoading == false ? __jsx(\"div\", {\n      style: {\n        color: \"#aabfff\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 43\n      }\n    }, \"Loading room \", this.props.query.id, \"...\") : __jsx(\"div\", {\n      style: {\n        textAlign: \"center\",\n        position: \"relative\",\n        top: \"25vh\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, __jsx(Image, {\n      src: \"/error.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 74\n      }\n    }), __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 106\n      }\n    }, \"This room does not exist.\")));\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, \"BfBB Blitz: Spectating\"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }), __jsx(BlitzBoard, {\n      pid: \"lol\",\n      room: this.state.room,\n      collect_function: e => {\n        console.log(\"nope\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/stephen/Desktop/BFBB_Client/frontend-nextjs/pages/spectate/blitz/[id].js"],"names":["useRouter","fetch","DropdownButton","Dropdown","Button","Image","data","BlitzBoard","BACKEND_IP","Index","React","Component","constructor","props","state","room","errorLoading","getInitialProps","query","componentDidMount","id","then","res","json","success","setState","render","color","textAlign","position","top","e","console","log"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SAASC,cAAT,EAAyBC,QAAzB,EAAmCC,MAAnC,EAA0CC,KAA1C,QAAuD,iBAAvD;AACA,OAAOC,IAAP,MAAiB,yCAAjB;AACA,OAAOC,UAAP,MAAuB,mCAAvB,C,CAEA;;AACA,MAAMC,UAAU,GAAG,4BAAnB;AAEA,eAAe,MAAMC,KAAN,SAAoBC,KAAK,CAACC,SAA1B,CAAoC;AAEjDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAC,IADM;AAEXC,MAAAA,YAAY,EAAC;AAFF,KAAb;AAKD;;AAED,SAAOC,eAAP,CAAuB;AAAEC,IAAAA;AAAF,GAAvB,EAAkC;AAChC,WAAO;AAAEA,MAAAA;AAAF,KAAP;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAGlBlB,IAAAA,KAAK,CAACO,UAAU,GAAC,iBAAX,GAA+B,KAAKK,KAAL,CAAWK,KAAX,CAAiBE,EAAjD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQf,IAAI,IAAI;AACZ,UAAGA,IAAI,CAACkB,OAAL,IAAc,IAAjB,EACE,KAAKC,QAAL,CAAc;AAACV,QAAAA,IAAI,EAACT,IAAI,CAACS;AAAX,OAAd,EADF,KAGE,KAAKU,QAAL,CAAc;AAACT,QAAAA,YAAY,EAAC;AAAd,OAAd;AACH,KAPH;AASD;;AAGDU,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKZ,KAAL,CAAWC,IAAX,IAAmB,IAAvB,EACE,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKD,KAAL,CAAWE,YAAX,IAAyB,KAAzB,GAAiC;AAAK,MAAA,KAAK,EAAE;AAAEW,QAAAA,KAAK,EAAE;AAAT,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAgD,KAAKd,KAAL,CAAWK,KAAX,CAAiBE,EAAjE,QAAjC,GAED;AAAK,MAAA,KAAK,EAAE;AAACQ,QAAAA,SAAS,EAAC,QAAX;AAAoBC,QAAAA,QAAQ,EAAC,UAA7B;AAAwCC,QAAAA,GAAG,EAAC;AAA5C,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiE,MAAC,KAAD;AAAO,MAAA,GAAG,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjE,EAAiG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAjG,CAHF,CADA;AAOF,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGM,MAAC,UAAD;AAAY,MAAA,GAAG,EAAC,KAAhB;AAAsB,MAAA,IAAI,EAAE,KAAKhB,KAAL,CAAWC,IAAvC;AAA6C,MAAA,gBAAgB,EAAGgB,CAAD,IAAK;AAACC,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAAoB,OAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHN,CADF;AAQD;;AA/CgD","sourcesContent":["import { useRouter } from 'next/router'\nimport fetch from 'node-fetch'\nimport { DropdownButton, Dropdown, Button,Image } from 'react-bootstrap'\nimport data from '../../../../bfbb-backend/routes/data.js';\nimport BlitzBoard from '../../../components/BlitzBoard.js'\n\n//const BACKEND_IP = \"https://bfbbhub.herokuapp.com\";\nconst BACKEND_IP = \"http://172.16.127.245:3001\";\n\nexport default class Index extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      room:null,\n      errorLoading:false,\n    }\n\n  }\n\n  static getInitialProps({ query }) {\n    return { query }\n  }\n\n  componentDidMount() {\n\n    \n    fetch(BACKEND_IP+'/blitz/getroom/' + this.props.query.id)\n      .then(res => res.json())\n      .then(data => {\n        if(data.success==true)\n          this.setState({room:data.room})\n        else\n          this.setState({errorLoading:true})\n      });\n\n  }\n\n\n  render() {\n    if (this.state.room == null)\n      return (\n      <div>\n        {this.state.errorLoading==false ? <div style={{ color: \"#aabfff\" }}>Loading room {this.props.query.id}...</div> : \n        \n        <div style={{textAlign:\"center\",position:\"relative\",top:\"25vh\"}}><Image src=\"/error.png\"></Image><h1>This room does not exist.</h1></div>}\n      </div>)\n\n    return (\n      <div>\n        <title>BfBB Blitz: Spectating</title>\n        <br></br>\n            <BlitzBoard pid=\"lol\" room={this.state.room} collect_function={(e)=>{console.log(\"nope\")}}></BlitzBoard>\n\n          </div>\n    )\n  }\n\n}"]},"metadata":{},"sourceType":"module"}