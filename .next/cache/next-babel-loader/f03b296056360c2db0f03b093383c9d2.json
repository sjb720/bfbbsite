{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/stephen/Desktop/BFBB_Client/frontend-nextjs/pages/spectate/blitz/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { useRouter } from 'next/router';\nimport fetch from 'node-fetch';\nimport { DropdownButton, Dropdown, Button } from 'react-bootstrap';\nimport data from '../../../../bfbb-backend/routes/data.js';\nimport BlitzBoard from '../../../components/BlitzBoard.js'; //const BACKEND_IP = \"https://bfbbhub.herokuapp.com\";\n\nvar BACKEND_IP = \"http://172.16.127.245:3001\";\n\nvar Index = /*#__PURE__*/function (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  var _super = _createSuper(Index);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      room: null\n    };\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(BACKEND_IP + '/blitz/getroom/' + this.props.query.id).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        _this2.setState({\n          room: data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.room == null) return __jsx(\"div\", {\n        style: {\n          color: \"#aabfff\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }\n      }, \"Loading room \", this.props.query.id, \"...\");\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }\n      }, __jsx(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }, \"BfBB Blitz: Spectating\"), __jsx(BlitzBoard, {\n        pid: this.state.player_id,\n        room: this.state.room,\n        collect_function: this.collect,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var query = _ref.query;\n      return {\n        query: query\n      };\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n\nexport { Index as default };","map":{"version":3,"sources":["/home/stephen/Desktop/BFBB_Client/frontend-nextjs/pages/spectate/blitz/[id].js"],"names":["useRouter","fetch","DropdownButton","Dropdown","Button","data","BlitzBoard","BACKEND_IP","Index","props","state","room","query","id","then","res","json","setState","color","player_id","collect","React","Component"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SAASC,cAAT,EAAyBC,QAAzB,EAAmCC,MAAnC,QAAiD,iBAAjD;AACA,OAAOC,IAAP,MAAiB,yCAAjB;AACA,OAAOC,UAAP,MAAuB,mCAAvB,C,CAEA;;AACA,IAAMC,UAAU,GAAG,4BAAnB;;IAEqBC,K;;;;;AAEnB,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAC;AADM,KAAb;AAFiB;AAMlB;;;;wCAMmB;AAAA;;AAGlBV,MAAAA,KAAK,CAACM,UAAU,GAAC,iBAAX,GAA+B,KAAKE,KAAL,CAAWG,KAAX,CAAiBC,EAAjD,CAAL,CACGC,IADH,CACQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADX,EAEGF,IAFH,CAEQ,UAAAT,IAAI,EAAI;AACZ,QAAA,MAAI,CAACY,QAAL,CAAc;AAACN,UAAAA,IAAI,EAACN;AAAN,SAAd;AACD,OAJH;AAMD;;;6BAGQ;AACP,UAAI,KAAKK,KAAL,CAAWC,IAAX,IAAmB,IAAvB,EACE,OAAQ;AAAK,QAAA,KAAK,EAAE;AAAEO,UAAAA,KAAK,EAAE;AAAT,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAgD,KAAKT,KAAL,CAAWG,KAAX,CAAiBC,EAAjE,QAAR;AAEF,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAEM,MAAC,UAAD;AAAY,QAAA,GAAG,EAAE,KAAKH,KAAL,CAAWS,SAA5B;AAAuC,QAAA,IAAI,EAAE,KAAKT,KAAL,CAAWC,IAAxD;AAA8D,QAAA,gBAAgB,EAAE,KAAKS,OAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFN,CADF;AAOD;;;0CA3BiC;AAAA,UAATR,KAAS,QAATA,KAAS;AAChC,aAAO;AAAEA,QAAAA,KAAK,EAALA;AAAF,OAAP;AACD;;;;EAZgCS,KAAK,CAACC,S;;SAApBd,K","sourcesContent":["import { useRouter } from 'next/router'\nimport fetch from 'node-fetch'\nimport { DropdownButton, Dropdown, Button } from 'react-bootstrap'\nimport data from '../../../../bfbb-backend/routes/data.js';\nimport BlitzBoard from '../../../components/BlitzBoard.js'\n\n//const BACKEND_IP = \"https://bfbbhub.herokuapp.com\";\nconst BACKEND_IP = \"http://172.16.127.245:3001\";\n\nexport default class Index extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      room:null,\n    }\n\n  }\n\n  static getInitialProps({ query }) {\n    return { query }\n  }\n\n  componentDidMount() {\n\n    \n    fetch(BACKEND_IP+'/blitz/getroom/' + this.props.query.id)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({room:data})\n      });\n\n  }\n\n\n  render() {\n    if (this.state.room == null)\n      return (<div style={{ color: \"#aabfff\" }}>Loading room {this.props.query.id}...</div>)\n\n    return (\n      <div>\n        <title>BfBB Blitz: Spectating</title>\n            <BlitzBoard pid={this.state.player_id} room={this.state.room} collect_function={this.collect}></BlitzBoard>\n\n          </div>\n    )\n  }\n\n}"]},"metadata":{},"sourceType":"module"}