{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Layout from '../components/PageLayout';\nimport { CardGroup, Card, Image, Button, Carousel, Container, Row, Col } from 'react-bootstrap';\nimport { TwitchEmbed, TwitchChat, TwitchClip, TwitchPlayer } from 'react-twitch-embed';\nimport { TwitterTimelineEmbed, TwitterShareButton, TwitterFollowButton, TwitterHashtagButton, TwitterMentionButton, TwitterTweetEmbed, TwitterMomentShare, TwitterDMButton, TwitterVideoEmbed, TwitterOnAirButton } from 'react-twitter-embed';\nimport ScrollAnimation from 'react-animate-on-scroll';\nimport React from 'react';\nimport ReactPlayer from 'react-player';\nimport axios from 'axios';\nimport youtube from '../components/Youtube';\nimport VideoThumbnail from '../components/VideoThumbnail';\nexport default class Index extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"playlistSearch\", '');\n\n    _defineProperty(this, \"topVideos\", 'https://www.googleapis.com/youtube/v3/search?part=snippet&type=video&order=date&channelId=UC9Y0uUKJ5y78QbhHbntAyFQ&key=AIzaSyB_Viw1L-bRdhRKizRpIyEvud4RWU2zsWs');\n\n    _defineProperty(this, \"changeVideo\", newUrl => {\n      this.setState({\n        url: newUrl,\n        playing: true\n      });\n    });\n\n    _defineProperty(this, \"handleSubmit\", async () => {\n      const response = await axios.get(this.topVideos);\n      this.setState({\n        videos: response.data.items\n      });\n    });\n\n    _defineProperty(this, \"handleEnded\", () => {\n      this.load(\"https://twitch.tv/shift\");\n    });\n\n    _defineProperty(this, \"load\", url => {\n      this.setState({\n        url\n      });\n    });\n\n    this.state = {\n      url: \"https://player.twitch.tv/shift\",\n      playing: true,\n      videos: []\n    };\n    this.changeVideo = this.changeVideo.bind(this);\n  }\n\n  componentDidMount() {\n    this.handleSubmit();\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(\"title\", null, \"Shift: Live 8pm EST!\"), __jsx(\"div\", {\n      style: {\n        paddingRight: 15,\n        paddingLeft: 15\n      }\n    }, __jsx(\"div\", {\n      class: \"row\",\n      style: {\n        height: 600\n      }\n    }, __jsx(\"div\", {\n      class: \"column\",\n      style: {\n        width: \"15%\"\n      }\n    }, __jsx(ScrollAnimation, {\n      animateIn: \"fadeInLeft\",\n      animateOnce: \"true\",\n      offset: \"50\",\n      delay: \"500\"\n    }, __jsx(TwitterTimelineEmbed, {\n      sourceType: \"profile\",\n      screenName: \"shiftposting\",\n      theme: \"dark\",\n      options: {\n        height: 600\n      }\n    }))), __jsx(\"div\", {\n      class: \"column\",\n      style: {\n        width: \"65%\"\n      }\n    }, __jsx(ScrollAnimation, {\n      animateIn: \"fadeInDown\",\n      animateOnce: \"true\",\n      offset: \"50\",\n      delay: \"1000\"\n    }, __jsx(\"div\", {\n      className: \"player-wrapper\"\n    }, __jsx(ReactPlayer, {\n      className: \"react-player\",\n      url: this.state.url,\n      width: \"100%\",\n      height: \"600px\",\n      controls: \"true\",\n      playing: this.state.playing,\n      onEnded: this.handleEnded\n    })))), __jsx(\"div\", {\n      class: \"column\",\n      style: {\n        width: \"20%\"\n      }\n    }, __jsx(ScrollAnimation, {\n      animateIn: \"fadeInRight\",\n      animateOnce: \"true\",\n      offset: \"50\",\n      delay: \"500\"\n    }, __jsx(TwitchChat, {\n      channel: \"shift\",\n      width: \"100%\",\n      height: \"600px\",\n      theme: \"dark\",\n      parent: ['localhost'],\n      style: {\n        border: 0\n      }\n    }))))), __jsx(\"div\", {\n      style: {\n        width: '100%',\n        paddingLeft: 40,\n        paddingRight: 40,\n        paddingTop: 20\n      }\n    }, __jsx(\"h3\", {\n      style: {\n        color: \"white\"\n      }\n    }, \"Catch the latest:\"), __jsx(Row, {\n      style: {\n        width: '100%'\n      }\n    }, this.state.videos.map(vid => __jsx(Col, {\n      style: {\n        padding: 0,\n        textAlign: 'center'\n      }\n    }, __jsx(VideoThumbnail, {\n      videoId: vid.id.videoId,\n      title: vid.snippet.title,\n      thumbnail: vid.snippet.thumbnails.medium.url,\n      changeVideo: this.changeVideo\n    }))))), __jsx(\"style\", null, `\n        .column {\n          float: left;\n          height: 100%;\n        }\n\n      `));\n  }\n\n}\n/*\n<TwitchPlayer\n              channel=\"shift\"\n              id=\"twitch-player\"\n              theme=\"dark\"\n              onVideoPause={() => console.log(':(')}\n              width='100%'\n              height='700px'\n            />\n\n*/","map":null,"metadata":{},"sourceType":"module"}