{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Layout from '../components/PageLayout';\nimport { CardGroup, Card, Image, Button, Carousel, Container, Row, Col } from 'react-bootstrap';\nimport ScrollAnimation from 'react-animate-on-scroll';\nimport React from 'react';\nimport ReactPlayer from 'react-player';\nimport axios from 'axios';\nimport VideoThumbnail from '../components/VideoThumbnail';\nexport default class Index extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"topVideos\", 'https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&playlistId=PLDzuZShnnVbZ78eM3wnnXq1C3mnU2PMZf&key=AIzaSyB_Viw1L-bRdhRKizRpIyEvud4RWU2zsWs');\n\n    _defineProperty(this, \"handleEnded\", () => {\n      var nextVideo = \"https://www.youtube.com/watch?v=\" + this.state.videos[0].snippet.resourceId.videoId;\n      var i;\n\n      for (i = 0; i < this.state.videos.length - 1; i++) {\n        if (this.state.url == \"https://www.youtube.com/watch?v=\" + this.state.videos[i].snippet.resourceId.videoId) nextVideo = \"https://www.youtube.com/watch?v=\" + this.state.videos[i + 1].snippet.resourceId.videoId;\n      }\n\n      this.setState({\n        url: nextVideo,\n        playing: true\n      });\n    });\n\n    _defineProperty(this, \"handleSubmit\", async () => {\n      const response = await axios.get(this.topVideos);\n      this.setState({\n        videos: response.data.items\n      });\n    });\n\n    _defineProperty(this, \"changeVideo\", newUrl => {\n      this.setState({\n        url: newUrl,\n        playing: true\n      });\n    });\n\n    this.state = {\n      url: \"https://www.youtube.com/watch?v=djkC8vLJ6Vw\",\n      playing: true,\n      videos: []\n    };\n    this.changeVideo = this.changeVideo.bind(this);\n  }\n\n  componentDidMount() {\n    this.handleSubmit();\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(\"title\", null, \"The History of BfBB\"), __jsx(\"h1\", {\n      style: {\n        color: \"white\",\n        textAlign: \"center\"\n      }\n    }, \"How Speedrunning Revived BfBB\"), __jsx(ScrollAnimation, {\n      animateIn: \"bounceInLeft\",\n      animateOnce: \"true\",\n      offset: \"50\"\n    }, __jsx(\"div\", {\n      style: {\n        width: '100%',\n        paddingLeft: '21%',\n        paddingRight: '21%',\n        height: '33vw'\n      }\n    }, __jsx(ReactPlayer, {\n      className: \"react-player\",\n      url: this.state.url,\n      width: \"100%\",\n      height: \"100%\",\n      controls: \"true\",\n      playing: this.state.playing,\n      onEnded: this.handleEnded\n    }), \"          \")), __jsx(\"div\", {\n      style: {\n        width: '100%',\n        paddingLeft: 40,\n        paddingRight: 40,\n        paddingTop: 20\n      }\n    }, __jsx(Row, {\n      style: {\n        width: '100%'\n      }\n    }, this.state.videos.map(vid => __jsx(Col, {\n      style: {\n        padding: 0,\n        textAlign: 'center'\n      }\n    }, __jsx(VideoThumbnail, {\n      videoId: vid.snippet.resourceId.videoId,\n      title: vid.snippet.title,\n      thumbnail: vid.snippet.thumbnails.medium.url,\n      changeVideo: this.changeVideo\n    }))))));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}