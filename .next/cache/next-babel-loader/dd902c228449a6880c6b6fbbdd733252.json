{"ast":null,"code":"var _jsxFileName = \"/home/stephen/Desktop/BFBB_Client/frontend-nextjs/pages/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport axios from 'axios';\nimport BattleShipBoard from '../components/BattleShipBoard.js';\nimport { Button, InputGroup, FormControl, Container, Col, Row } from 'react-bootstrap';\nexport default class Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      board: {\n        tasks: []\n      },\n      room: null,\n      player_id: \"\",\n      rid_input: \"\",\n      display_name_input: \"\"\n    };\n  }\n\n  componentDidMount() {\n    //Give the player an id\n    this.setState({\n      player_id: [...Array(16)].map(i => (~~(Math.random() * 36)).toString(36)).join('')\n    });\n  }\n\n  createRoomAndJoin() {\n    let data = {\n      pid: this.state.player_id,\n      dn: this.state.display_name_input\n    };\n    let options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    };\n    fetch('http://localhost:3001/mainThread/createroom', options).then(res => res.json()).then(data => {\n      this.setState({\n        room: data\n      }); //Get new room data\n\n      const interval = setInterval(() => {\n        this.refreshRoom();\n      }, 1000);\n    });\n  }\n\n  joinRoom(rid) {\n    let data = {\n      pid: this.state.player_id,\n      rid: rid,\n      dn: this.state.display_name_input\n    };\n    let options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    };\n    fetch('http://localhost:3001/mainThread/joinroom', options).then(res => res.json()).then(data => {\n      this.setState({\n        room: data\n      }); //Get new room data\n\n      const interval = setInterval(() => {\n        this.refreshRoom();\n      }, 1000);\n    });\n  } //Refreshes your room periodically\n\n\n  refreshRoom() {\n    if (this.state.room == null) return; //whered the room go?\n\n    console.log(\"Getting new room data...\");\n    fetch('http://localhost:3001/mainThread/getroom/' + this.state.room.id).then(res => res.json()).then(data => {\n      this.setState({\n        room: data\n      });\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, this.state.room == null && __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, \"Welcome to BfBB Battleship!\"), __jsx(InputGroup, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, __jsx(InputGroup.Prepend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, __jsx(InputGroup.Text, {\n      id: \"basic-addon1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, \"Display name\")), __jsx(FormControl, {\n      onChange: e => this.setState({\n        display_name_input: e.target.value\n      }),\n      defaultValue: this.state.display_name_input,\n      placeholder: \"ie: John\",\n      \"aria-label\": \"ie: John\",\n      \"aria-describedby\": \"basic-addon1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    })), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }), __jsx(Button, {\n      variant: \"outline-primary\",\n      style: {\n        width: \"100%\"\n      },\n      onClick: () => this.createRoomAndJoin(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, \"Create Room\"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 22\n      }\n    }), __jsx(InputGroup, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, __jsx(FormControl, {\n      onChange: e => this.setState({\n        rid_input: e.target.value\n      }),\n      defaultValue: this.state.rid_input,\n      placeholder: \"Room ID\",\n      \"aria-label\": \"Recipient's username\",\n      \"aria-describedby\": \"basic-addon2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    }), __jsx(InputGroup.Append, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    }, __jsx(Button, {\n      variant: \"outline-primary\",\n      onClick: () => this.joinRoom(this.state.rid_input),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, \"Join Room\")))), this.state.room != null && __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }, \"RoomID: \", this.state.room.id, __jsx(Row, {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, __jsx(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }, __jsx(BattleShipBoard, {\n      player: this.state.room.player1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    })), __jsx(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }, this.state.room.player2.id == null && __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 19\n      }\n    }, \"Invite an opponent with the following code\"), this.state.room.player2.id != null && __jsx(BattleShipBoard, {\n      player: this.state.room.player2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 19\n      }\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/home/stephen/Desktop/BFBB_Client/frontend-nextjs/pages/index.js"],"names":["React","axios","BattleShipBoard","Button","InputGroup","FormControl","Container","Col","Row","Index","Component","constructor","props","state","board","tasks","room","player_id","rid_input","display_name_input","componentDidMount","setState","Array","map","i","Math","random","toString","join","createRoomAndJoin","data","pid","dn","options","method","headers","body","JSON","stringify","fetch","then","res","json","interval","setInterval","refreshRoom","joinRoom","rid","console","log","id","render","e","target","value","width","player1","player2"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport BattleShipBoard from '../components/BattleShipBoard.js'\nimport { Button, InputGroup, FormControl, Container, Col, Row } from 'react-bootstrap'\n\nexport default class Index extends React.Component {\n\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      board: { tasks: [] },\n      room: null,\n      player_id: \"\",\n      rid_input: \"\",\n      display_name_input: \"\",\n    }\n  }\n\n  componentDidMount() {\n    //Give the player an id\n    this.setState({ player_id: [...Array(16)].map(i => (~~(Math.random() * 36)).toString(36)).join('') });\n\n  }\n\n  createRoomAndJoin() {\n\n    let data = { pid: this.state.player_id, dn:this.state.display_name_input }\n\n    let options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    }\n\n\n    fetch('http://localhost:3001/mainThread/createroom', options)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ room: data })\n        //Get new room data\n        const interval = setInterval(() => {\n          this.refreshRoom();\n        }, 1000);\n      });\n  }\n\n  joinRoom(rid) {\n    let data = { pid: this.state.player_id, rid: rid, dn:this.state.display_name_input }\n\n    let options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    }\n\n\n    fetch('http://localhost:3001/mainThread/joinroom', options)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ room: data })\n        //Get new room data\n        const interval = setInterval(() => {\n          this.refreshRoom();\n        }, 1000);\n      });\n  }\n\n  //Refreshes your room periodically\n  refreshRoom() {\n    if (this.state.room == null) return; //whered the room go?\n    console.log(\"Getting new room data...\")\n\n    fetch('http://localhost:3001/mainThread/getroom/' + this.state.room.id)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ room: data })\n      });\n  }\n\n\n  render() {\n    return (\n      <div>\n\n        {this.state.room == null &&\n          <Container>\n            <h1>\n              Welcome to BfBB Battleship!\n            </h1>\n            <InputGroup className=\"mb-3\">\n              <InputGroup.Prepend>\n                <InputGroup.Text id=\"basic-addon1\">Display name</InputGroup.Text>\n              </InputGroup.Prepend>\n              <FormControl onChange={e => this.setState({ display_name_input: e.target.value })} defaultValue={this.state.display_name_input}\n                placeholder=\"ie: John\"\n                aria-label=\"ie: John\"\n                aria-describedby=\"basic-addon1\"\n              />\n            </InputGroup>\n            <br></br>\n            <Button variant=\"outline-primary\" style={{ width: \"100%\" }} onClick={() => this.createRoomAndJoin()}>Create Room</Button>\n            <br></br><br></br>\n            <InputGroup className=\"mb-3\">\n\n              <FormControl onChange={e => this.setState({ rid_input: e.target.value })} defaultValue={this.state.rid_input}\n                placeholder=\"Room ID\"\n                aria-label=\"Recipient's username\"\n                aria-describedby=\"basic-addon2\"\n              />\n              <InputGroup.Append>\n                <Button variant=\"outline-primary\" onClick={() => this.joinRoom(this.state.rid_input)}>Join Room</Button>\n              </InputGroup.Append>\n            </InputGroup>\n          </Container>}\n        {this.state.room != null &&\n          <div>\n            RoomID: {this.state.room.id}\n            <Row style={{width:'100%'}}>\n              <Col>\n                <BattleShipBoard player={this.state.room.player1}></BattleShipBoard>\n              </Col>\n              <Col>\n                {this.state.room.player2.id==null && \n                  <h1>Invite an opponent with the following code</h1>\n                }\n                {this.state.room.player2.id!=null && \n                  <BattleShipBoard player={this.state.room.player2}></BattleShipBoard>\n                }\n                \n              </Col>\n\n            </Row>\n\n\n\n          </div>}\n\n\n\n\n      </div>\n\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}