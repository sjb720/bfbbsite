{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/stephen/Desktop/BFBB_Client/frontend-nextjs/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport axios from 'axios';\nimport BattleShipGrid from '../components/BattleShipGrid.js';\nimport { Button, InputGroup, FormControl, Container } from 'react-bootstrap';\n\nvar Index = /*#__PURE__*/function (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  var _super = _createSuper(Index);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      board: {\n        tasks: []\n      },\n      room: null,\n      player_id: \"\",\n      rid_input: \"\",\n      display_name_input: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //Give the player an id\n      this.setState({\n        player_id: _toConsumableArray(Array(16)).map(function (i) {\n          return (~~(Math.random() * 36)).toString(36);\n        }).join('')\n      });\n    }\n  }, {\n    key: \"createRoomAndJoin\",\n    value: function createRoomAndJoin() {\n      var _this2 = this;\n\n      var data = {\n        pid: this.state.player_id\n      };\n      var options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      };\n      fetch('http://localhost:3001/mainThread/createroom', options).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        _this2.setState({\n          room: data\n        }); //Get new room data\n\n\n        var interval = setInterval(function () {\n          _this2.refreshRoom();\n        }, 1000);\n      });\n    }\n  }, {\n    key: \"joinRoom\",\n    value: function joinRoom(rid) {\n      var _this3 = this;\n\n      var data = {\n        pid: this.state.player_id,\n        rid: rid\n      };\n      var options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      };\n      fetch('http://localhost:3001/mainThread/joinroom', options).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        _this3.setState({\n          room: data\n        }); //Get new room data\n\n\n        var interval = setInterval(function () {\n          _this3.refreshRoom();\n        }, 1000);\n      });\n    } //Refreshes your room periodically\n\n  }, {\n    key: \"refreshRoom\",\n    value: function refreshRoom() {\n      var _this4 = this;\n\n      if (this.state.room == null) return; //whered the room go?\n\n      console.log(\"Getting new room data...\");\n      fetch('http://localhost:3001/mainThread/getroom' + this.state.room.id).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        _this4.setState({\n          room: data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 7\n        }\n      }, this.state.room == null && __jsx(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      }, \"Welcome to BfBB Battleship!\"), __jsx(InputGroup, {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }\n      }, __jsx(InputGroup.Prepend, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }\n      }, __jsx(InputGroup.Text, {\n        id: \"basic-addon1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }\n      }, \"Display name\")), __jsx(FormControl, {\n        placeholder: \"ie: John\",\n        \"aria-label\": \"ie: John\",\n        \"aria-describedby\": \"basic-addon1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }\n      })), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }\n      }), __jsx(Button, {\n        variant: \"outline-primary\",\n        style: {\n          width: \"100%\"\n        },\n        onClick: function onClick() {\n          return _this5.createRoomAndJoin();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }\n      }, \"Create Room\"), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }\n      }), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 22\n        }\n      }), __jsx(InputGroup, {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }\n      }, __jsx(FormControl, {\n        onChange: function onChange(e) {\n          return _this5.setState({\n            rid_input: e.target.value\n          });\n        },\n        defaultValue: this.state.rid_input,\n        placeholder: \"Room ID\",\n        \"aria-label\": \"Recipient's username\",\n        \"aria-describedby\": \"basic-addon2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }\n      }), __jsx(InputGroup.Append, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }\n      }, __jsx(Button, {\n        variant: \"outline-primary\",\n        onClick: function onClick() {\n          return _this5.joinRoom(_this5.state.rid_input);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }, \"Join Room\")))), this.state.room != null && __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }\n      }, \"RoomID: \", this.state.room.id, __jsx(\"div\", {\n        style: {\n          display: \"grid\",\n          gridTemplateColumns: \"1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr\",\n          paddingBottom: \"100%\",\n          width: 800,\n          justifyContent: 'space-between'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }\n      }, this.state.room.player1.board.tasks.map(function (task) {\n        return __jsx(BattleShipGrid, {\n          name: task.name,\n          type: task.type,\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }\n        });\n      })), __jsx(\"div\", {\n        style: {\n          display: \"grid\",\n          gridTemplateColumns: \"1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr\",\n          paddingBottom: \"100%\",\n          width: 800,\n          justifyContent: 'space-between'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }\n      }, this.state.room.player2.board.tasks.map(function (task) {\n        return __jsx(BattleShipGrid, {\n          name: task.name,\n          type: task.type,\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }\n        });\n      }))));\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n\nexport { Index as default };","map":{"version":3,"sources":["/home/stephen/Desktop/BFBB_Client/frontend-nextjs/pages/index.js"],"names":["React","axios","BattleShipGrid","Button","InputGroup","FormControl","Container","Index","props","state","board","tasks","room","player_id","rid_input","display_name_input","setState","Array","map","i","Math","random","toString","join","data","pid","options","method","headers","body","JSON","stringify","fetch","then","res","json","interval","setInterval","refreshRoom","rid","console","log","id","width","createRoomAndJoin","e","target","value","joinRoom","display","gridTemplateColumns","paddingBottom","justifyContent","player1","task","name","type","player2","Component"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,WAA7B,EAAyCC,SAAzC,QAA0D,iBAA1D;;IAEqBC,K;;;;;AAGnB,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OADI;AAEXC,MAAAA,IAAI,EAAE,IAFK;AAGXC,MAAAA,SAAS,EAAE,EAHA;AAIXC,MAAAA,SAAS,EAAE,EAJA;AAKXC,MAAAA,kBAAkB,EAAE;AALT,KAAb;AAFiB;AASlB;;;;wCAEmB;AAClB;AACA,WAAKC,QAAL,CAAc;AAAEH,QAAAA,SAAS,EAAE,mBAAII,KAAK,CAAC,EAAD,CAAT,EAAeC,GAAf,CAAmB,UAAAC,CAAC;AAAA,iBAAI,CAAC,CAAC,EAAEC,IAAI,CAACC,MAAL,KAAgB,EAAlB,CAAF,EAAyBC,QAAzB,CAAkC,EAAlC,CAAJ;AAAA,SAApB,EAA+DC,IAA/D,CAAoE,EAApE;AAAb,OAAd;AAED;;;wCAEmB;AAAA;;AAElB,UAAIC,IAAI,GAAG;AAACC,QAAAA,GAAG,EAAC,KAAKhB,KAAL,CAAWI;AAAhB,OAAX;AAEA,UAAIa,OAAO,GAAE;AACXC,QAAAA,MAAM,EAAE,MADG;AAEXC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFE;AAKXC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf;AALK,OAAb;AASAQ,MAAAA,KAAK,CAAC,6CAAD,EAA+CN,OAA/C,CAAL,CACGO,IADH,CACQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADX,EAEGF,IAFH,CAEQ,UAAAT,IAAI,EAAI;AACZ,QAAA,MAAI,CAACR,QAAL,CAAc;AAAEJ,UAAAA,IAAI,EAAEY;AAAR,SAAd,EADY,CAEZ;;;AACA,YAAMY,QAAQ,GAAGC,WAAW,CAAC,YAAM;AACjC,UAAA,MAAI,CAACC,WAAL;AACD,SAF2B,EAEzB,IAFyB,CAA5B;AAGD,OARH;AASD;;;6BAEQC,G,EAAI;AAAA;;AACX,UAAIf,IAAI,GAAG;AAACC,QAAAA,GAAG,EAAC,KAAKhB,KAAL,CAAWI,SAAhB;AAA0B0B,QAAAA,GAAG,EAACA;AAA9B,OAAX;AAEA,UAAIb,OAAO,GAAE;AACXC,QAAAA,MAAM,EAAE,MADG;AAEXC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFE;AAKXC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf;AALK,OAAb;AASAQ,MAAAA,KAAK,CAAC,2CAAD,EAA6CN,OAA7C,CAAL,CACGO,IADH,CACQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADX,EAEGF,IAFH,CAEQ,UAAAT,IAAI,EAAI;AACZ,QAAA,MAAI,CAACR,QAAL,CAAc;AAAEJ,UAAAA,IAAI,EAAEY;AAAR,SAAd,EADY,CAEZ;;;AACA,YAAMY,QAAQ,GAAGC,WAAW,CAAC,YAAM;AACjC,UAAA,MAAI,CAACC,WAAL;AACD,SAF2B,EAEzB,IAFyB,CAA5B;AAGD,OARH;AASD,K,CAED;;;;kCACa;AAAA;;AACX,UAAG,KAAK7B,KAAL,CAAWG,IAAX,IAAiB,IAApB,EAA0B,OADf,CACuB;;AAClC4B,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AAEAT,MAAAA,KAAK,CAAC,6CAA2C,KAAKvB,KAAL,CAAWG,IAAX,CAAgB8B,EAA5D,CAAL,CACGT,IADH,CACQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADX,EAEGF,IAFH,CAEQ,UAAAT,IAAI,EAAI;AACZ,QAAA,MAAI,CAACR,QAAL,CAAc;AAAEJ,UAAAA,IAAI,EAAEY;AAAR,SAAd;AACD,OAJH;AAKD;;;6BAGQ;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEG,KAAKf,KAAL,CAAWG,IAAX,IAAmB,IAAnB,IACC,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,EAIE,MAAC,UAAD;AAAY,QAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,UAAD,CAAY,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,UAAD,CAAY,IAAZ;AAAiB,QAAA,EAAE,EAAC,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADF,EAIE,MAAC,WAAD;AACE,QAAA,WAAW,EAAC,UADd;AAEE,sBAAW,UAFb;AAGE,4BAAiB,cAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CAJF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdF,EAeE,MAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,iBAAhB;AAAkC,QAAA,KAAK,EAAE;AAAC+B,UAAAA,KAAK,EAAC;AAAP,SAAzC;AAAyD,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACC,iBAAL,EAAN;AAAA,SAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAfF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBF,EAgBW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBX,EAiBE,MAAC,UAAD;AAAY,QAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,MAAC,WAAD;AAAa,QAAA,QAAQ,EAAE,kBAAAC,CAAC;AAAA,iBAAI,MAAI,CAAC7B,QAAL,CAAc;AAACF,YAAAA,SAAS,EAAE+B,CAAC,CAACC,MAAF,CAASC;AAArB,WAAd,CAAJ;AAAA,SAAxB;AAAwE,QAAA,YAAY,EAAE,KAAKtC,KAAL,CAAWK,SAAjG;AACE,QAAA,WAAW,EAAC,SADd;AAEE,sBAAW,sBAFb;AAGE,4BAAiB,cAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAOE,MAAC,UAAD,CAAY,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,iBAAhB;AAAkC,QAAA,OAAO,EAAE;AAAA,iBAAI,MAAI,CAACkC,QAAL,CAAc,MAAI,CAACvC,KAAL,CAAWK,SAAzB,CAAJ;AAAA,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CAPF,CAjBF,CAHJ,EAgCG,KAAKL,KAAL,CAAWG,IAAX,IAAmB,IAAnB,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACW,KAAKH,KAAL,CAAWG,IAAX,CAAgB8B,EAD3B,EAEE;AAAK,QAAA,KAAK,EAAE;AAAEO,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,mBAAmB,EAAE,6CAAxC;AAAuFC,UAAAA,aAAa,EAAE,MAAtG;AAA8GR,UAAAA,KAAK,EAAE,GAArH;AAA0HS,UAAAA,cAAc,EAAE;AAA1I,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAK3C,KAAL,CAAWG,IAAX,CAAgByC,OAAhB,CAAwB3C,KAAxB,CAA8BC,KAA9B,CAAoCO,GAApC,CAAwC,UAAAoC,IAAI;AAAA,eAC3C,MAAC,cAAD;AAAgB,UAAA,IAAI,EAAEA,IAAI,CAACC,IAA3B;AAAiC,UAAA,IAAI,EAAED,IAAI,CAACE,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD2C;AAAA,OAA5C,CADH,CAFF,EAQE;AAAK,QAAA,KAAK,EAAE;AAAEP,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,mBAAmB,EAAE,6CAAxC;AAAuFC,UAAAA,aAAa,EAAE,MAAtG;AAA8GR,UAAAA,KAAK,EAAE,GAArH;AAA0HS,UAAAA,cAAc,EAAE;AAA1I,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAK3C,KAAL,CAAWG,IAAX,CAAgB6C,OAAhB,CAAwB/C,KAAxB,CAA8BC,KAA9B,CAAoCO,GAApC,CAAwC,UAAAoC,IAAI;AAAA,eAC3C,MAAC,cAAD;AAAgB,UAAA,IAAI,EAAEA,IAAI,CAACC,IAA3B;AAAiC,UAAA,IAAI,EAAED,IAAI,CAACE,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD2C;AAAA,OAA5C,CADH,CARF,CAjCJ,CADF;AAuDD;;;;EAxIgCxD,KAAK,CAAC0D,S;;SAApBnD,K","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport BattleShipGrid from '../components/BattleShipGrid.js'\nimport { Button, InputGroup, FormControl,Container } from 'react-bootstrap'\n\nexport default class Index extends React.Component {\n\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      board: { tasks: [] },\n      room: null,\n      player_id: \"\",\n      rid_input: \"\",\n      display_name_input: \"\",\n    }\n  }\n\n  componentDidMount() {\n    //Give the player an id\n    this.setState({ player_id: [...Array(16)].map(i => (~~(Math.random() * 36)).toString(36)).join('') });\n\n  }\n\n  createRoomAndJoin() {\n\n    let data = {pid:this.state.player_id}\n\n    let options= {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n      }\n\n\n    fetch('http://localhost:3001/mainThread/createroom',options)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ room: data })\n        //Get new room data\n        const interval = setInterval(() => {\n          this.refreshRoom();\n        }, 1000);\n      });\n  }\n\n  joinRoom(rid){\n    let data = {pid:this.state.player_id,rid:rid}\n\n    let options= {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n      }\n\n\n    fetch('http://localhost:3001/mainThread/joinroom',options)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ room: data })\n        //Get new room data\n        const interval = setInterval(() => {\n          this.refreshRoom();\n        }, 1000);\n      });\n  }\n\n  //Refreshes your room periodically\n  refreshRoom(){\n    if(this.state.room==null) return; //whered the room go?\n    console.log(\"Getting new room data...\")\n\n    fetch('http://localhost:3001/mainThread/getroom'+this.state.room.id)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ room: data })\n      });\n  }\n\n\n  render() {\n    return (\n      <div>\n\n        {this.state.room == null &&\n          <Container>\n            <h1>\n              Welcome to BfBB Battleship!\n            </h1>\n            <InputGroup className=\"mb-3\">\n              <InputGroup.Prepend>\n                <InputGroup.Text id=\"basic-addon1\">Display name</InputGroup.Text>\n              </InputGroup.Prepend>\n              <FormControl \n                placeholder=\"ie: John\"\n                aria-label=\"ie: John\"\n                aria-describedby=\"basic-addon1\"\n              />\n            </InputGroup>\n            <br></br>\n            <Button variant=\"outline-primary\" style={{width:\"100%\"}} onClick={() => this.createRoomAndJoin()}>Create Room</Button>\n            <br></br><br></br>\n            <InputGroup className=\"mb-3\">\n            \n              <FormControl onChange={e => this.setState({rid_input: e.target.value})} defaultValue={this.state.rid_input}\n                placeholder=\"Room ID\"\n                aria-label=\"Recipient's username\"\n                aria-describedby=\"basic-addon2\"\n              />\n              <InputGroup.Append>\n                <Button variant=\"outline-primary\" onClick={()=>this.joinRoom(this.state.rid_input)}>Join Room</Button>\n              </InputGroup.Append>\n            </InputGroup>\n          </Container>}\n        {this.state.room != null &&\n          <div>\n            RoomID: {this.state.room.id}\n            <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr\", paddingBottom: \"100%\", width: 800, justifyContent: 'space-between' }}>\n              {this.state.room.player1.board.tasks.map(task =>\n                <BattleShipGrid name={task.name} type={task.type} />\n              )}\n            </div>\n\n            <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr\", paddingBottom: \"100%\", width: 800, justifyContent: 'space-between' }}>\n              {this.state.room.player2.board.tasks.map(task =>\n                <BattleShipGrid name={task.name} type={task.type} />\n              )}\n            </div>\n          </div>}\n\n\n\n\n      </div>\n\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}