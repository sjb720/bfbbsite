{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/home/stephen/Desktop/BFBB_Client/frontend-nextjs/components/BlitzGrid.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Tooltip, OverlayTrigger } from 'react-bootstrap';\nvar BACKEND_IP = \"http://localhost:3001\";\n\nvar renderTooltip = function renderTooltip(props) {\n  return __jsx(Tooltip, _extends({\n    id: \"button-tooltip-2\"\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 3\n    }\n  }), props.collected == true && __jsx(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, \"Collected by \", props.collector), props.name);\n};\n\nvar BlitzGrid = /*#__PURE__*/function (_React$Component) {\n  _inherits(BlitzGrid, _React$Component);\n\n  var _super = _createSuper(BlitzGrid);\n\n  function BlitzGrid(props) {\n    var _this2;\n\n    _classCallCheck(this, BlitzGrid);\n\n    _this2 = _super.call(this, props);\n    _this2.state = {\n      collected: false\n    };\n    return _this2;\n  }\n\n  _createClass(BlitzGrid, [{\n    key: \"onClick\",\n    value: function onClick() {\n      var _this3 = this;\n\n      var data = {\n        pid: this.props.pid,\n        rid: this.props.rid,\n        collectable_name: this.props.name\n      };\n      var options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      };\n      fetch('${BACKEND_IP}/blitz/collect', options).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        _this3.setState({\n          room: data\n        });\n\n        if (data.success) _this3.setState({\n          collected: true\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }\n      }, __jsx(OverlayTrigger, {\n        placement: \"top\",\n        overlay: renderTooltip(this.props),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      }, !this.props.collected && __jsx(\"div\", {\n        \"class\": \"butt\",\n        onClick: function onClick() {\n          return _this4.onClick();\n        },\n        style: {\n          backgroundImage: 'url(\"' + this.props.type + '/' + this.props.name + '.png' + '\")'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }\n      }), this.props.collected && __jsx(\"div\", {\n        \"class\": \"butt\",\n        onClick: function onClick() {\n          return _this4.onClick();\n        },\n        style: {\n          backgroundColor: \"red\",\n          backgroundImage: 'url(\"' + this.props.type + '/' + this.props.name + '.png' + '\")'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }\n      }))), __jsx(\"style\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }, \"\\n          .butt {\\n            \\n            padding-top:100%;\\n            cursor:pointer;\\n            width:100%\\n            -webkit-background-size: cover;\\n            -moz-background-size: cover;\\n            -o-background-size: cover;\\n            background-size: cover;\\n            background-blend-mode: multiply;\\n         }\\n         \\n         .butt:hover {\\n            background-color: grey;\\n            color:white;\\n         }\\n\\n\\n\\n          \"));\n    }\n  }]);\n\n  return BlitzGrid;\n}(React.Component);\n\nexport { BlitzGrid as default };","map":{"version":3,"sources":["/home/stephen/Desktop/BFBB_Client/frontend-nextjs/components/BlitzGrid.js"],"names":["Tooltip","OverlayTrigger","BACKEND_IP","renderTooltip","props","collected","color","collector","name","BlitzGrid","state","data","pid","rid","collectable_name","options","method","headers","body","JSON","stringify","fetch","then","res","json","setState","room","success","onClick","backgroundImage","type","backgroundColor","React","Component"],"mappings":"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","sourcesContent":["import { Tooltip, OverlayTrigger } from 'react-bootstrap';\n\nconst BACKEND_IP = \"http://localhost:3001\";\n\nconst renderTooltip = (props) => (\n  <Tooltip id=\"button-tooltip-2\" {...props}>\n    {props.collected==true &&\n      <div style={{color:\"red\"}}>Collected by {props.collector}</div>\n    }\n    {props.name}\n  </Tooltip>\n);\n\nexport default class BlitzGrid extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      collected: false,\n    }\n  }\n\n  onClick() {\n\n    let data = { pid: this.props.pid, rid: this.props.rid, collectable_name: this.props.name }\n\n    let options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    }\n\n\n    fetch('${BACKEND_IP}/blitz/collect', options)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ room: data })\n        if (data.success)\n          this.setState({collected:true});\n      });\n\n  }\n\n  render() {\n    return (\n      <div>\n        <OverlayTrigger\n          placement=\"top\"\n          \n          overlay={renderTooltip(this.props)}>\n          <div>\n            {!this.props.collected &&\n              <div class=\"butt\" onClick={() => this.onClick()} style={{ backgroundImage: ('url(\"' + this.props.type + '/' + this.props.name + '.png' + '\")') }} />\n            }\n\n            {this.props.collected &&\n              <div class=\"butt\" onClick={() => this.onClick()} style={{ backgroundColor: \"red\", backgroundImage: ('url(\"' + this.props.type + '/' + this.props.name + '.png' + '\")') }} />\n            }\n          </div>\n\n\n\n        </OverlayTrigger>\n        <style>{`\n          .butt {\n            \n            padding-top:100%;\n            cursor:pointer;\n            width:100%\n            -webkit-background-size: cover;\n            -moz-background-size: cover;\n            -o-background-size: cover;\n            background-size: cover;\n            background-blend-mode: multiply;\n         }\n         \n         .butt:hover {\n            background-color: grey;\n            color:white;\n         }\n\n\n\n          `}</style>\n      </div>\n    )\n  }\n\n}"]},"metadata":{},"sourceType":"module"}