{"ast":null,"code":"var _jsxFileName = \"/home/stephen/Desktop/Taras web app/frontend-nextjs/components/Map.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport ReactMapGL from 'react-map-gl';\n\nclass Map extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      viewport: {\n        width: '100vw',\n        height: '100vh',\n        latitude: 38.9868,\n        longitude: -77.0325,\n        zoom: 13\n      },\n      geojson: {}\n    });\n  }\n\n  componentDidMount() {\n    map.on('load', () => {\n      this.pullNewData(0);\n    });\n  }\n\n  pullNewData(chunk) {\n    console.log(\"pulling more data\");\n    const map = this.reactMap.getMap();\n    let url = 'http://localhost:3001/taras/coordinates/geojson?chunk=' + chunk;\n    fetch(url).then(res => res.json()).then(data => this.displayDataOnMap(data.data, chunk));\n  }\n\n  displayDataOnMap(geojson, chunk) {\n    const map = this.reactMap.getMap(); // add initial chunk of data\n\n    if (chunk == 0) {\n      this.state.geojson = geojson;\n      map.addSource('crash-data', this.state.geojson);\n      map.addLayer({\n        'id': 'crash-heat',\n        'type': 'heatmap',\n        'source': 'crash-data'\n      });\n      map.addLayer({\n        'id': 'points',\n        'type': 'circle',\n        'source': 'crash-data',\n        'layout': {}\n      });\n    } else {\n      Array.prototype.push.apply(this.state.geojson.data.features, geojson.data.features);\n      map.getSource('crash-data').setData(this.state.geojson);\n    }\n\n    this.pullNewData(chunk + 1);\n  }\n\n  render() {\n    return __jsx(ReactMapGL, _extends({\n      ref: reactMap => this.reactMap = reactMap,\n      mapStyle: \"mapbox://styles/mapbox/streets-v9\",\n      mapboxApiAccessToken: \"pk.eyJ1IjoieW9tYW40NyIsImEiOiJjampxM2g3YjUyMzFyM3ZvMXNjZ2R3d2ZtIn0.r0zXd8hAqa1haG3lkjlDwA\",\n      onViewportChange: viewport => this.setState({\n        viewport\n      })\n    }, this.state.viewport, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/home/stephen/Desktop/Taras web app/frontend-nextjs/components/Map.js"],"names":["Component","ReactMapGL","Map","viewport","width","height","latitude","longitude","zoom","geojson","componentDidMount","map","on","pullNewData","chunk","console","log","reactMap","getMap","url","fetch","then","res","json","data","displayDataOnMap","state","addSource","addLayer","Array","prototype","push","apply","features","getSource","setData","render","setState"],"mappings":";;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;;AAAA,mCAElB;AACNG,MAAAA,QAAQ,EAAE;AACRC,QAAAA,KAAK,EAAE,OADC;AAERC,QAAAA,MAAM,EAAE,OAFA;AAGRC,QAAAA,QAAQ,EAAE,OAHF;AAIRC,QAAAA,SAAS,EAAE,CAAC,OAJJ;AAKRC,QAAAA,IAAI,EAAE;AALE,OADJ;AAQNC,MAAAA,OAAO,EAAE;AARH,KAFkB;AAAA;;AAa1BC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,GAAG,CAACC,EAAJ,CAAO,MAAP,EAAe,MAAM;AACnB,WAAKC,WAAL,CAAiB,CAAjB;AACH,KAFC;AAID;;AAEDA,EAAAA,WAAW,CAACC,KAAD,EAAO;AAEhBC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAEA,UAAML,GAAG,GAAG,KAAKM,QAAL,CAAcC,MAAd,EAAZ;AAEA,QAAIC,GAAG,GAAG,2DAA2DL,KAArE;AAEEM,IAAAA,KAAK,CAACD,GAAD,CAAL,CACCE,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,IAAI,IAAI,KAAKC,gBAAL,CAAsBD,IAAI,CAACA,IAA3B,EAAgCV,KAAhC,CAFd;AAIH;;AAEDW,EAAAA,gBAAgB,CAAChB,OAAD,EAASK,KAAT,EAAe;AAE7B,UAAMH,GAAG,GAAG,KAAKM,QAAL,CAAcC,MAAd,EAAZ,CAF6B,CAI7B;;AACA,QAAGJ,KAAK,IAAI,CAAZ,EAAc;AAEZ,WAAKY,KAAL,CAAWjB,OAAX,GAAqBA,OAArB;AAEAE,MAAAA,GAAG,CAACgB,SAAJ,CAAc,YAAd,EAA2B,KAAKD,KAAL,CAAWjB,OAAtC;AAEAE,MAAAA,GAAG,CAACiB,QAAJ,CACE;AACA,cAAM,YADN;AAEA,gBAAQ,SAFR;AAGA,kBAAU;AAHV,OADF;AAOAjB,MAAAA,GAAG,CAACiB,QAAJ,CAAa;AACT,cAAM,QADG;AAET,gBAAQ,QAFC;AAGT,kBAAU,YAHD;AAIT,kBAAU;AAJD,OAAb;AAKD,KAlBD,MAkBO;AAELC,MAAAA,KAAK,CAACC,SAAN,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,KAAKN,KAAL,CAAWjB,OAAX,CAAmBe,IAAnB,CAAwBS,QAAnD,EAA6DxB,OAAO,CAACe,IAAR,CAAaS,QAA1E;AAEAtB,MAAAA,GAAG,CAACuB,SAAJ,CAAc,YAAd,EAA4BC,OAA5B,CAAoC,KAAKT,KAAL,CAAWjB,OAA/C;AAGD;;AAED,SAAKI,WAAL,CAAiBC,KAAK,GAAC,CAAvB;AAED;;AAEDsB,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,UAAD;AACE,MAAA,GAAG,EAAGnB,QAAD,IAAc,KAAKA,QAAL,GAAgBA,QADrC;AAEE,MAAA,QAAQ,EAAC,mCAFX;AAGE,MAAA,oBAAoB,EAAC,2FAHvB;AAIE,MAAA,gBAAgB,EAAGd,QAAD,IAAc,KAAKkC,QAAL,CAAc;AAAElC,QAAAA;AAAF,OAAd;AAJlC,OAKM,KAAKuB,KAAL,CAAWvB,QALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AASD;;AAhFyB;;AAmF5B,eAAeD,GAAf","sourcesContent":["import { Component } from 'react';\nimport ReactMapGL from 'react-map-gl';\n\nclass Map extends Component {\n\n  state = {\n    viewport: {\n      width: '100vw',\n      height: '100vh',\n      latitude: 38.9868,\n      longitude: -77.0325,\n      zoom: 13,\n    },\n    geojson: {}\n  };\n\n  componentDidMount() {\n    map.on('load', () => {\n      this.pullNewData(0);\n  })\n    \n  }\n\n  pullNewData(chunk){\n\n    console.log(\"pulling more data\");\n\n    const map = this.reactMap.getMap(); \n\n    let url = 'http://localhost:3001/taras/coordinates/geojson?chunk=' + chunk;\n\n      fetch(url)\n      .then(res => res.json())\n      .then(data => this.displayDataOnMap(data.data,chunk));\n\n  }\n\n  displayDataOnMap(geojson,chunk){\n\n    const map = this.reactMap.getMap(); \n\n    // add initial chunk of data\n    if(chunk == 0){\n\n      this.state.geojson = geojson;\n\n      map.addSource('crash-data',this.state.geojson)\n\n      map.addLayer(\n        {\n        'id': 'crash-heat',\n        'type': 'heatmap',\n        'source': 'crash-data',\n        });\n\n      map.addLayer({\n          'id': 'points',\n          'type': 'circle',\n          'source': 'crash-data',\n          'layout': {}});\n    } else {\n\n      Array.prototype.push.apply(this.state.geojson.data.features, geojson.data.features);\n\n      map.getSource('crash-data').setData(this.state.geojson)\n\n      \n    }\n\n    this.pullNewData(chunk+1);\n\n  }\n\n  render() {\n    return (\n      <ReactMapGL\n        ref={(reactMap) => this.reactMap = reactMap}\n        mapStyle=\"mapbox://styles/mapbox/streets-v9\"\n        mapboxApiAccessToken=\"pk.eyJ1IjoieW9tYW40NyIsImEiOiJjampxM2g3YjUyMzFyM3ZvMXNjZ2R3d2ZtIn0.r0zXd8hAqa1haG3lkjlDwA\"\n        onViewportChange={(viewport) => this.setState({ viewport })}\n        {...this.state.viewport}\n      />\n    );\n  }\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}