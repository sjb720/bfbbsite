{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/home/stephen/Desktop/BFBB_Client/frontend-nextjs/components/BlitzGrid.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Tooltip, OverlayTrigger } from 'react-bootstrap';\n\nvar renderTooltip = function renderTooltip(props) {\n  return __jsx(Tooltip, _extends({\n    id: \"button-tooltip\"\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 3\n    }\n  }), props.name);\n};\n\nvar BlitzGrid = /*#__PURE__*/function (_React$Component) {\n  _inherits(BlitzGrid, _React$Component);\n\n  var _super = _createSuper(BlitzGrid);\n\n  function BlitzGrid(props) {\n    var _this2;\n\n    _classCallCheck(this, BlitzGrid);\n\n    _this2 = _super.call(this, props);\n    _this2.state = {};\n    return _this2;\n  }\n\n  _createClass(BlitzGrid, [{\n    key: \"onClick\",\n    value: function onClick() {\n      console.log(this.props.name);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 7\n        }\n      }, __jsx(OverlayTrigger, {\n        placement: \"right\",\n        delay: {\n          show: 100,\n          hide: 400\n        },\n        overlay: renderTooltip(props),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        \"class\": \"butt\",\n        onClick: function onClick() {\n          return _this3.onClick();\n        },\n        style: {\n          backgroundImage: 'url(\"' + props.type + '/' + props.name + '.png' + '\")'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }\n      })), __jsx(\"style\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, \"\\n          .butt {\\n            border: 1px outset white;\\n            padding-top:100%;\\n            cursor:pointer;\\n            width:100%\\n            -webkit-background-size: cover;\\n            -moz-background-size: cover;\\n            -o-background-size: cover;\\n            background-size: cover;\\n            background-blend-mode: multiply;\\n         }\\n         \\n         .butt:hover {\\n            background-color: red;\\n            color:white;\\n         }\\n\\n          \"));\n    }\n  }]);\n\n  return BlitzGrid;\n}(React.Component);\n\nexport { BlitzGrid as default };","map":{"version":3,"sources":["/home/stephen/Desktop/BFBB_Client/frontend-nextjs/components/BlitzGrid.js"],"names":["Tooltip","OverlayTrigger","renderTooltip","props","name","BlitzGrid","state","console","log","show","hide","onClick","backgroundImage","type","React","Component"],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAASA,OAAT,EAAkBC,cAAlB,QAAwC,iBAAxC;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD;AAAA,SACpB,MAAC,OAAD;AAAS,IAAA,EAAE,EAAC;AAAZ,KAAiCA,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGA,KAAK,CAACC,IADT,CADoB;AAAA,CAAtB;;IAMqBC,S;;;;;AAEnB,qBAAYF,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+BAAMA,KAAN;AACA,WAAKG,KAAL,GAAa,EAAb;AAFiB;AAIlB;;;;8BAEQ;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWC,IAAvB;AACD;;;6BAEQ;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,cAAD;AACE,QAAA,SAAS,EAAC,OADZ;AAEE,QAAA,KAAK,EAAE;AAAEK,UAAAA,IAAI,EAAE,GAAR;AAAaC,UAAAA,IAAI,EAAE;AAAnB,SAFT;AAGE,QAAA,OAAO,EAAER,aAAa,CAACC,KAAD,CAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE;AAAK,iBAAM,MAAX;AAAkB,QAAA,OAAO,EAAE;AAAA,iBAAI,MAAI,CAACQ,OAAL,EAAJ;AAAA,SAA3B;AAA+C,QAAA,KAAK,EAAE;AAAEC,UAAAA,eAAe,EAAG,UAAUT,KAAK,CAACU,IAAhB,GAAuB,GAAvB,GAA6BV,KAAK,CAACC,IAAnC,GAA0C,MAA1C,GAAmD;AAAvE,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mfAVF,CADF;AAgCD;;;;EA7CoCU,KAAK,CAACC,S;;SAAxBV,S","sourcesContent":["import { Tooltip, OverlayTrigger } from 'react-bootstrap';\n\nconst renderTooltip = (props) => (\n  <Tooltip id=\"button-tooltip\" {...props}>\n    {props.name}\n  </Tooltip>\n);\n\nexport default class BlitzGrid extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n    }\n  }\n\n  onClick(){\n    console.log(this.props.name)\n  }\n\n  render() {\n    return (\n      <div>\n        <OverlayTrigger\n          placement=\"right\"\n          delay={{ show: 100, hide: 400 }}\n          overlay={renderTooltip(props)}>\n\n          <div class=\"butt\" onClick={()=>this.onClick()} style={{ backgroundImage: ('url(\"' + props.type + '/' + props.name + '.png' + '\")') }}>\n          </div>\n\n        </OverlayTrigger>\n        <style>{`\n          .butt {\n            border: 1px outset white;\n            padding-top:100%;\n            cursor:pointer;\n            width:100%\n            -webkit-background-size: cover;\n            -moz-background-size: cover;\n            -o-background-size: cover;\n            background-size: cover;\n            background-blend-mode: multiply;\n         }\n         \n         .butt:hover {\n            background-color: red;\n            color:white;\n         }\n\n          `}</style>\n      </div>\n    )\n  }\n\n}"]},"metadata":{},"sourceType":"module"}