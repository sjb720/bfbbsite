{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/stephen/Desktop/BFBB_Client/frontend-nextjs/pages/spectate/blitz/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { useRouter } from 'next/router';\nimport fetch from 'node-fetch';\nimport { DropdownButton, Dropdown, Button, Image } from 'react-bootstrap';\nimport data from '../../../../bfbb-backend/routes/data.js';\nimport BlitzBoard from '../../../components/BlitzBoard.js'; //const BACKEND_IP = \"https://bfbbhub.herokuapp.com\";\n\nvar BACKEND_IP = \"http://172.16.127.245:3001\";\n\nvar Index = /*#__PURE__*/function (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  var _super = _createSuper(Index);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      room: null,\n      errorLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(BACKEND_IP + '/blitz/getroom/' + this.props.query.id).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        if (data.success == true) _this2.setState({\n          room: data.room\n        });else _this2.setState({\n          errorLoading: true\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.room == null) return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }\n      }, this.state.errorLoading == false ? __jsx(\"div\", {\n        style: {\n          color: \"#aabfff\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 43\n        }\n      }, \"Loading room \", this.props.query.id, \"...\") : __jsx(\"div\", {\n        style: {\n          textAlign: \"center\",\n          position: \"relative\",\n          top: \"25vh\",\n          color: \"#5a7bfd\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }\n      }, __jsx(Image, {\n        src: \"/error.png\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 90\n        }\n      }), __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 122\n        }\n      }, \"This room does not exist.\")));\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }\n      }, __jsx(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      }, \"BfBB Blitz: Spectating\"), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      }), __jsx(BlitzBoard, {\n        pid: \"lol\",\n        room: this.state.room,\n        collect_function: function collect_function(e) {\n          console.log(\"nope\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var query = _ref.query;\n      return {\n        query: query\n      };\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n\nexport { Index as default };","map":{"version":3,"sources":["/home/stephen/Desktop/BFBB_Client/frontend-nextjs/pages/spectate/blitz/[id].js"],"names":["useRouter","fetch","DropdownButton","Dropdown","Button","Image","data","BlitzBoard","BACKEND_IP","Index","props","state","room","errorLoading","query","id","then","res","json","success","setState","color","textAlign","position","top","e","console","log","React","Component"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SAASC,cAAT,EAAyBC,QAAzB,EAAmCC,MAAnC,EAA0CC,KAA1C,QAAuD,iBAAvD;AACA,OAAOC,IAAP,MAAiB,yCAAjB;AACA,OAAOC,UAAP,MAAuB,mCAAvB,C,CAEA;;AACA,IAAMC,UAAU,GAAG,4BAAnB;;IAEqBC,K;;;;;AAEnB,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAC,IADM;AAEXC,MAAAA,YAAY,EAAC;AAFF,KAAb;AAFiB;AAOlB;;;;wCAMmB;AAAA;;AAGlBZ,MAAAA,KAAK,CAACO,UAAU,GAAC,iBAAX,GAA+B,KAAKE,KAAL,CAAWI,KAAX,CAAiBC,EAAjD,CAAL,CACGC,IADH,CACQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADX,EAEGF,IAFH,CAEQ,UAAAV,IAAI,EAAI;AACZ,YAAGA,IAAI,CAACa,OAAL,IAAc,IAAjB,EACE,MAAI,CAACC,QAAL,CAAc;AAACR,UAAAA,IAAI,EAACN,IAAI,CAACM;AAAX,SAAd,EADF,KAGE,MAAI,CAACQ,QAAL,CAAc;AAACP,UAAAA,YAAY,EAAC;AAAd,SAAd;AACH,OAPH;AASD;;;6BAGQ;AACP,UAAI,KAAKF,KAAL,CAAWC,IAAX,IAAmB,IAAvB,EACE,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKD,KAAL,CAAWE,YAAX,IAAyB,KAAzB,GAAiC;AAAK,QAAA,KAAK,EAAE;AAAEQ,UAAAA,KAAK,EAAE;AAAT,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAgD,KAAKX,KAAL,CAAWI,KAAX,CAAiBC,EAAjE,QAAjC,GAED;AAAK,QAAA,KAAK,EAAE;AAACO,UAAAA,SAAS,EAAC,QAAX;AAAoBC,UAAAA,QAAQ,EAAC,UAA7B;AAAwCC,UAAAA,GAAG,EAAC,MAA5C;AAAmDH,UAAAA,KAAK,EAAC;AAAzD,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiF,MAAC,KAAD;AAAO,QAAA,GAAG,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAjF,EAAiH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAjH,CAHF,CADA;AAOF,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGM,MAAC,UAAD;AAAY,QAAA,GAAG,EAAC,KAAhB;AAAsB,QAAA,IAAI,EAAE,KAAKV,KAAL,CAAWC,IAAvC;AAA6C,QAAA,gBAAgB,EAAE,0BAACa,CAAD,EAAK;AAACC,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAAoB,SAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHN,CADF;AAQD;;;0CApCiC;AAAA,UAATb,KAAS,QAATA,KAAS;AAChC,aAAO;AAAEA,QAAAA,KAAK,EAALA;AAAF,OAAP;AACD;;;;EAbgCc,KAAK,CAACC,S;;SAApBpB,K","sourcesContent":["import { useRouter } from 'next/router'\nimport fetch from 'node-fetch'\nimport { DropdownButton, Dropdown, Button,Image } from 'react-bootstrap'\nimport data from '../../../../bfbb-backend/routes/data.js';\nimport BlitzBoard from '../../../components/BlitzBoard.js'\n\n//const BACKEND_IP = \"https://bfbbhub.herokuapp.com\";\nconst BACKEND_IP = \"http://172.16.127.245:3001\";\n\nexport default class Index extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      room:null,\n      errorLoading:false,\n    }\n\n  }\n\n  static getInitialProps({ query }) {\n    return { query }\n  }\n\n  componentDidMount() {\n\n    \n    fetch(BACKEND_IP+'/blitz/getroom/' + this.props.query.id)\n      .then(res => res.json())\n      .then(data => {\n        if(data.success==true)\n          this.setState({room:data.room})\n        else\n          this.setState({errorLoading:true})\n      });\n\n  }\n\n\n  render() {\n    if (this.state.room == null)\n      return (\n      <div>\n        {this.state.errorLoading==false ? <div style={{ color: \"#aabfff\" }}>Loading room {this.props.query.id}...</div> : \n        \n        <div style={{textAlign:\"center\",position:\"relative\",top:\"25vh\",color:\"#5a7bfd\"}}><Image src=\"/error.png\"></Image><h1>This room does not exist.</h1></div>}\n      </div>)\n\n    return (\n      <div>\n        <title>BfBB Blitz: Spectating</title>\n        <br></br>\n            <BlitzBoard pid=\"lol\" room={this.state.room} collect_function={(e)=>{console.log(\"nope\")}}></BlitzBoard>\n\n          </div>\n    )\n  }\n\n}"]},"metadata":{},"sourceType":"module"}