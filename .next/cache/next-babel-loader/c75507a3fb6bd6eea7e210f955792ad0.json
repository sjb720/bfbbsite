{"ast":null,"code":"var _jsxFileName = \"/home/stephen/Desktop/BFBB_Client/bfbb-site/components/AddStrat.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport fetch from 'node-fetch';\nimport { DropdownButton, Dropdown, Button, Container, Image, Badge, Card, Accordion, FormControl } from 'react-bootstrap';\nimport BACKEND_URL from './backendurl.js';\nexport default class AddStrat extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      areas: [],\n      area: \"\",\n      name: \"\",\n      description: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getAreas();\n  }\n\n  getAreas() {\n    {\n      fetch(BACKEND_URL + 'bfbb-site/areas').then(res => res.json()).then(data => {\n        if (data.success == true) {\n          this.setState({\n            areas: data.info,\n            area: data.info[0].internal_name\n          });\n        }\n      });\n    }\n  }\n\n  addStrat() {\n    let data = {\n      username: window.sessionStorage.getItem(\"username\"),\n      token: window.sessionStorage.getItem(\"token\"),\n      name: this.state.name,\n      area: this.state.area,\n      description: this.state.description\n    };\n    let options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    };\n    fetch(BACKEND_URL + 'bfbb-site/strats/post', options).then(res => res.json()).then(data => {\n      if (data.success) {\n        this.props.getDataMethod();\n        this.setState({\n          name: \"\",\n          description: \"\"\n        });\n      } else {\n        console.log(data.error);\n      }\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      style: {\n        backgroundColor: \"#000000\",\n        padding: 20,\n        textAlign: \"left\",\n        borderRadius: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, \"Add a strat\"), __jsx(Dropdown, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, __jsx(Dropdown.Toggle, {\n      variant: \"dark\",\n      id: \"dropdown-basic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, this.state.area), __jsx(Dropdown.Menu, {\n      style: {\n        position: \"relative\",\n        zIndex: 10000\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, this.state.areas.map(area => __jsx(Dropdown.Item, {\n      onClick: () => this.setState({\n        area: area.name\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }, area.internal_name)))), __jsx(FormControl, {\n      onChange: e => this.setState({\n        name: e.target.value\n      }),\n      value: this.state.name,\n      placeholder: \"Name\",\n      \"aria-label\": \"Name\",\n      \"aria-describedby\": \"basic-addon1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }), __jsx(FormControl, {\n      as: \"textarea\",\n      onChange: e => this.setState({\n        description: e.target.value\n      }),\n      value: this.state.description,\n      placeholder: \"Description\",\n      \"aria-label\": \"Name\",\n      \"aria-describedby\": \"basic-addon1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }), __jsx(Button, {\n      variant: \"success\",\n      block: true,\n      onClick: () => this.addStrat(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, \"Add strat\"));\n  }\n\n}","map":{"version":3,"sources":["/home/stephen/Desktop/BFBB_Client/bfbb-site/components/AddStrat.js"],"names":["useRouter","fetch","DropdownButton","Dropdown","Button","Container","Image","Badge","Card","Accordion","FormControl","BACKEND_URL","AddStrat","React","Component","constructor","props","state","areas","area","name","description","componentDidMount","getAreas","then","res","json","data","success","setState","info","internal_name","addStrat","username","window","sessionStorage","getItem","token","options","method","headers","body","JSON","stringify","getDataMethod","console","log","error","render","backgroundColor","padding","textAlign","borderRadius","position","zIndex","map","e","target","value"],"mappings":"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","sourcesContent":["import { useRouter } from 'next/router'\nimport fetch from 'node-fetch'\nimport { DropdownButton, Dropdown, Button, Container, Image, Badge, Card, Accordion, FormControl } from 'react-bootstrap'\nimport BACKEND_URL from './backendurl.js'\n\nexport default class AddStrat extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            areas: [],\n            area: \"\",\n            name: \"\",\n            description: \"\",\n        }\n    }\n\n    componentDidMount() {\n        this.getAreas();\n    }\n\n    getAreas() {\n        {\n\n            fetch(BACKEND_URL + 'bfbb-site/areas')\n                .then(res => res.json())\n\n                .then(data => {\n                    if (data.success == true) {\n                        this.setState({ areas: data.info, area: data.info[0].internal_name })\n                    }\n                })\n\n\n        }\n    }\n\n    addStrat() {\n        let data = { \n            username:window.sessionStorage.getItem(\"username\"),\n            token:window.sessionStorage.getItem(\"token\"),\n            name:this.state.name,\n            area:this.state.area,\n            description:this.state.description,\n        }\n\n        let options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        }\n\n\n        fetch(BACKEND_URL + 'bfbb-site/strats/post', options)\n            .then(res => res.json())\n            .then(data => {\n                if (data.success) {\n                    this.props.getDataMethod()\n                    this.setState({\n                        name: \"\",\n                        description:\"\",\n                    })\n                } else {\n                    console.log(data.error)\n                }\n            });\n    }\n\n\n    render() {\n        return (\n        <div style={{backgroundColor:\"#000000\",padding:20, textAlign:\"left\", borderRadius:20}}>\n            <h2>Add a strat</h2>\n            <Dropdown >\n                <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\">\n                    {this.state.area}\n                </Dropdown.Toggle>\n                <Dropdown.Menu style={{ position: \"relative\", zIndex: 10000 }}>\n                    {this.state.areas.map(area =>\n                        <Dropdown.Item onClick={() => this.setState({ area: area.name })}>{area.internal_name}</Dropdown.Item>\n                    )}\n                </Dropdown.Menu>\n            </Dropdown>\n\n            <FormControl\n                onChange={e => this.setState({ name: e.target.value })}\n                value={this.state.name}\n                placeholder=\"Name\"\n                aria-label=\"Name\"\n                aria-describedby=\"basic-addon1\"\n            />\n            <FormControl\n                as=\"textarea\"\n                onChange={e => this.setState({ description: e.target.value})}\n                value={this.state.description}\n                placeholder=\"Description\"\n                aria-label=\"Name\"\n                aria-describedby=\"basic-addon1\"\n            />\n            <br></br>\n            <Button variant=\"success\" block onClick={()=>this.addStrat()}>\n                Add strat\n            </Button>\n        </div>);\n    }\n}"]},"metadata":{},"sourceType":"module"}