{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/stephen/Desktop/BFBB_Client/frontend-nextjs/pages/blitz.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport axios from 'axios';\nimport BlitzBoard from '../components/BlitzBoard.js';\nimport { Button, InputGroup, FormControl, Container, Col, Row, Alert, Accordion, Card } from 'react-bootstrap';\nvar BACKEND_IP = \"http://172.16.127.245:3001\";\nvar POLLING_RATE_MILLI_SECONDS = 1000;\n\nvar Index = /*#__PURE__*/function (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  var _super = _createSuper(Index);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      board: {\n        tasks: []\n      },\n      room: null,\n      player_id: \"\",\n      rid_input: \"\",\n      display_name_input: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //Give the player an id\n      this.setState({\n        player_id: _toConsumableArray(Array(16)).map(function (i) {\n          return (~~(Math.random() * 36)).toString(36);\n        }).join('')\n      });\n    }\n  }, {\n    key: \"createRoomAndJoin\",\n    value: function createRoomAndJoin() {\n      var _this2 = this;\n\n      var data = {\n        pid: this.state.player_id,\n        dn: this.state.display_name_input\n      };\n      var options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      };\n      fetch(BACKEND_IP + '/blitz/createroom', options).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        _this2.setState({\n          room: data\n        }); //Get new room data\n\n\n        var interval = setInterval(function () {\n          _this2.refreshRoom();\n        }, POLLING_RATE_MILLI_SECONDS);\n      });\n    }\n  }, {\n    key: \"joinRoom\",\n    value: function joinRoom(rid) {\n      var _this3 = this;\n\n      var data = {\n        pid: this.state.player_id,\n        rid: rid,\n        dn: this.state.display_name_input\n      };\n      var options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      };\n      fetch(BACKEND_IP + '/blitz/joinroom', options).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        _this3.setState({\n          room: data\n        }); //Get new room data\n\n\n        var interval = setInterval(function () {\n          _this3.refreshRoom();\n        }, POLLING_RATE_MILLI_SECONDS);\n      });\n    } //Refreshes your room periodically\n\n  }, {\n    key: \"refreshRoom\",\n    value: function refreshRoom() {\n      var _this4 = this;\n\n      if (this.state.room == null) return; //whered the room go?\n\n      console.log(\"Getting new room data...\");\n      fetch(BACKEND_IP + '/blitz/getroom/' + this.state.room.id).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        _this4.setState({\n          room: data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 7\n        }\n      }, this.state.room == null && __jsx(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }\n      }, \"Welcome to BfBB Blitz!\"), __jsx(InputGroup, {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }\n      }, __jsx(InputGroup.Prepend, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }\n      }, __jsx(InputGroup.Text, {\n        id: \"basic-addon1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      }, \"Display name\")), __jsx(FormControl, {\n        onChange: function onChange(e) {\n          return _this5.setState({\n            display_name_input: e.target.value\n          });\n        },\n        defaultValue: this.state.display_name_input,\n        placeholder: \"1 - 10 characters\",\n        \"aria-label\": \"1 - 10 characters\",\n        \"aria-describedby\": \"basic-addon1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }\n      })), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }\n      }), __jsx(Button, {\n        disabled: this.state.display_name_input.length < 1,\n        variant: \"outline-primary\",\n        style: {\n          width: \"100%\",\n          marginBottom: 5\n        },\n        onClick: function onClick() {\n          return _this5.createRoomAndJoin();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }\n      }, \"Create Room\"), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }\n      }), __jsx(InputGroup, {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }\n      }, __jsx(FormControl, {\n        onChange: function onChange(e) {\n          return _this5.setState({\n            rid_input: e.target.value\n          });\n        },\n        defaultValue: this.state.rid_input,\n        placeholder: \"Room ID\",\n        \"aria-label\": \"Recipient's username\",\n        \"aria-describedby\": \"basic-addon2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }\n      }), __jsx(InputGroup.Append, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }\n      }, __jsx(Button, {\n        disabled: this.state.display_name_input.length < 1,\n        variant: \"outline-primary\",\n        onClick: function onClick() {\n          return _this5.joinRoom(_this5.state.rid_input);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }\n      }, \"Join Room\"))), __jsx(Accordion, {\n        defaultActiveKey: \"0\",\n        style: {\n          color: \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }\n      }, __jsx(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }\n      }, __jsx(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }\n      }, __jsx(Accordion.Toggle, {\n        as: Button,\n        variant: \"link\",\n        eventKey: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 19\n        }\n      }, \"How to play\")), __jsx(Accordion.Collapse, {\n        eventKey: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }\n      }, __jsx(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 19\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }\n      }, \"Blitz is an intense speed game where up to 8 players compete to be the first to collect as many objects as possible.\"), __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }\n      }, \"Rules\"), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }\n      }, \"The game begins when all players are ready. Everyone starts from the main menu one input away from creating a new game. Once ready, every player starts at the same time. When a player collects something, they simply click on the image to collect it. The picture can be clicked on anytime after the frame the player touched the objects\")))), __jsx(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }\n      }, __jsx(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }\n      }, __jsx(Accordion.Toggle, {\n        as: Button,\n        variant: \"link\",\n        eventKey: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 19\n        }\n      }, \"Allowed in game cheats\")), __jsx(Accordion.Collapse, {\n        eventKey: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }\n      }, __jsx(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 19\n        }\n      }, \"The following IGC are allowed to be entered as many times or at any point during the game:\", __jsx(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }\n      }, __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 23\n        }\n      }, \"10 Gold Spatulas\"), __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 23\n        }\n      }, \"1,000 Shiny Objects\"), __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 23\n        }\n      }, \"Bubble Bowl Power\"), __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 23\n        }\n      }, \"Cruise Bubble Power\"))))))), this.state.room != null && __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }\n      }, __jsx(Alert, {\n        variant: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }\n      }, \"Room code: \", this.state.room.id), __jsx(BlitzBoard, {\n        pid: this.state.player_id,\n        room: this.state.room,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n\nexport { Index as default };","map":{"version":3,"sources":["/home/stephen/Desktop/BFBB_Client/frontend-nextjs/pages/blitz.js"],"names":["React","axios","BlitzBoard","Button","InputGroup","FormControl","Container","Col","Row","Alert","Accordion","Card","BACKEND_IP","POLLING_RATE_MILLI_SECONDS","Index","props","state","board","tasks","room","player_id","rid_input","display_name_input","setState","Array","map","i","Math","random","toString","join","data","pid","dn","options","method","headers","body","JSON","stringify","fetch","then","res","json","interval","setInterval","refreshRoom","rid","console","log","id","e","target","value","length","width","marginBottom","createRoomAndJoin","joinRoom","color","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport BlitzBoard from '../components/BlitzBoard.js'\nimport { Button, InputGroup, FormControl, Container, Col, Row, Alert, Accordion, Card } from 'react-bootstrap'\n\nconst BACKEND_IP = \"http://172.16.127.245:3001\";\nconst POLLING_RATE_MILLI_SECONDS = 1000;\n\nexport default class Index extends React.Component {\n\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      board: { tasks: [] },\n      room: null,\n      player_id: \"\",\n      rid_input: \"\",\n      display_name_input: \"\",\n    }\n  }\n\n  componentDidMount() {\n    //Give the player an id\n    this.setState({ player_id: [...Array(16)].map(i => (~~(Math.random() * 36)).toString(36)).join('') });\n\n  }\n\n  createRoomAndJoin() {\n\n    let data = { pid: this.state.player_id, dn: this.state.display_name_input }\n\n    let options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    }\n\n\n    fetch(BACKEND_IP + '/blitz/createroom', options)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ room: data })\n        //Get new room data\n        const interval = setInterval(() => {\n          this.refreshRoom();\n        }, POLLING_RATE_MILLI_SECONDS);\n      });\n  }\n\n  joinRoom(rid) {\n    let data = { pid: this.state.player_id, rid: rid, dn: this.state.display_name_input }\n\n    let options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    }\n\n\n    fetch(BACKEND_IP + '/blitz/joinroom', options)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ room: data })\n        //Get new room data\n        const interval = setInterval(() => {\n          this.refreshRoom();\n        }, POLLING_RATE_MILLI_SECONDS);\n      });\n  }\n\n  //Refreshes your room periodically\n  refreshRoom() {\n    if (this.state.room == null) return; //whered the room go?\n    console.log(\"Getting new room data...\")\n\n    fetch(BACKEND_IP + '/blitz/getroom/' + this.state.room.id)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ room: data })\n      });\n  }\n\n\n  render() {\n    return (\n      <div>\n\n        {this.state.room == null &&\n          <Container>\n            <h1>\n              Welcome to BfBB Blitz!\n            </h1>\n            <InputGroup className=\"mb-3\">\n              <InputGroup.Prepend>\n                <InputGroup.Text id=\"basic-addon1\">Display name</InputGroup.Text>\n              </InputGroup.Prepend>\n              <FormControl onChange={e => this.setState({ display_name_input: e.target.value })} defaultValue={this.state.display_name_input}\n                placeholder=\"1 - 10 characters\"\n                aria-label=\"1 - 10 characters\"\n                aria-describedby=\"basic-addon1\"\n              />\n            </InputGroup>\n            <br></br>\n            <Button disabled={this.state.display_name_input.length < 1} variant=\"outline-primary\" style={{ width: \"100%\", marginBottom: 5 }} onClick={() => this.createRoomAndJoin()}>Create Room</Button>\n            <br></br>\n            <InputGroup className=\"mb-3\">\n\n              <FormControl onChange={e => this.setState({ rid_input: e.target.value })} defaultValue={this.state.rid_input}\n                placeholder=\"Room ID\"\n                aria-label=\"Recipient's username\"\n                aria-describedby=\"basic-addon2\"\n              />\n              <InputGroup.Append>\n                <Button disabled={this.state.display_name_input.length < 1} variant=\"outline-primary\" onClick={() => this.joinRoom(this.state.rid_input)}>Join Room</Button>\n              </InputGroup.Append>\n            </InputGroup>\n\n            <Accordion defaultActiveKey=\"0\" style={{color:\"black\"}}>\n              <Card>\n                <Card.Header>\n                  <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\n                    How to play\n                  </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"1\">\n                  <Card.Body>\n                    <p>\n                      Blitz is an intense speed game where up to 8 players compete to be the first to collect as many objects as possible.\n                    </p>\n                    <h2>\n                      Rules\n                    </h2>\n                    <p>\n                      The game begins when all players are ready. Everyone starts from the main menu one input away from creating a new game. Once\n                      ready, every player starts at the same time. When a player collects something, they simply click on the image to collect it.\n                      The picture can be clicked on anytime after the frame the player touched the objects\n                    </p>\n                    \n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n              <Card>\n                <Card.Header>\n                  <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\">\n                    Allowed in game cheats\n                  </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"2\">\n                  <Card.Body>\n                    The following IGC are allowed to be entered as many times or at any point during the game:\n                    <ul>\n                      <li>10 Gold Spatulas</li>\n                      <li>1,000 Shiny Objects</li>\n                      <li>Bubble Bowl Power</li>\n                      <li>Cruise Bubble Power</li>\n                    </ul>\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n            </Accordion>\n\n          </Container>}\n        {this.state.room != null &&\n          <div>\n            <Alert variant=\"primary\">\n              Room code: {this.state.room.id}\n            </Alert>\n            <BlitzBoard pid={this.state.player_id} room={this.state.room}></BlitzBoard>\n\n          </div>}\n\n\n\n\n      </div>\n\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}