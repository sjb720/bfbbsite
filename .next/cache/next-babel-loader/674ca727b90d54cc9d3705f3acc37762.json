{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/stephen/Desktop/BFBB_Client/frontend-nextjs/pages/blitz.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport axios from 'axios';\nimport BlitzBoard from '../components/BlitzBoard.js';\nimport { Button, InputGroup, FormControl, Container, Col, Row, Alert, Accordion, Card, Form } from 'react-bootstrap';\nvar BACKEND_IP = \"https://bfbbhub.herokuapp.com\"; //const BACKEND_IP = \"http://172.16.127.23:3001\";\n\nvar POLLING_RATE_MILLI_SECONDS = 1000;\n\nvar Index = /*#__PURE__*/function (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  var _super = _createSuper(Index);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"collect\", function (collectable_name) {\n      var data = {\n        pid: _this.state.player_id,\n        rid: _this.state.room.id,\n        collectable_name: collectable_name,\n        secret: _this.state.secret\n      };\n      var options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      };\n      fetch(BACKEND_IP + '/blitz/collect', options).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        if (data.success) {\n          _this.setState({\n            room: data.room\n          });\n        }\n\n        console.log(data);\n      });\n    });\n\n    _this.state = {\n      board: {\n        tasks: []\n      },\n      room: null,\n      player_id: \"\",\n      rid_input: \"\",\n      room_password_input: \"\",\n      display_name_input: \"\",\n      secret: \"\",\n      padding_sides: 6\n    };\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //Give the player an id\n      this.setState({\n        player_id: _toConsumableArray(Array(16)).map(function (i) {\n          return (~~(Math.random() * 36)).toString(36);\n        }).join('')\n      });\n    }\n  }, {\n    key: \"createRoomAndJoin\",\n    value: function createRoomAndJoin() {\n      var _this2 = this;\n\n      var data = {\n        pid: this.state.player_id,\n        dn: this.state.display_name_input,\n        room_password: this.state.room_password_input\n      };\n      var options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      };\n      fetch(BACKEND_IP + '/blitz/createroom', options).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        _this2.setState({\n          room: data.room\n        });\n\n        _this2.setState({\n          secret: data.secret\n        }); //Get new room data\n\n\n        var interval = setInterval(function () {\n          _this2.refreshRoom();\n        }, POLLING_RATE_MILLI_SECONDS);\n      });\n    }\n  }, {\n    key: \"joinRoom\",\n    value: function joinRoom(rid) {\n      var _this3 = this;\n\n      var data = {\n        pid: this.state.player_id,\n        rid: rid,\n        dn: this.state.display_name_input,\n        room_password: this.state.room_password_input\n      };\n      var options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      };\n      fetch(BACKEND_IP + '/blitz/joinroom', options).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        _this3.setState({\n          room: data.room\n        });\n\n        _this3.setState({\n          secret: data.secret\n        }); //Get new room data\n\n\n        var interval = setInterval(function () {\n          _this3.refreshRoom();\n        }, POLLING_RATE_MILLI_SECONDS);\n      });\n    } //Refreshes your room periodically\n\n  }, {\n    key: \"refreshRoom\",\n    value: function refreshRoom() {\n      var _this4 = this;\n\n      if (this.state.room == null) return; //whered the room go?\n\n      console.log(\"Getting new room data...\");\n      fetch(BACKEND_IP + '/blitz/getroom/' + this.state.room.id).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        _this4.setState({\n          room: data.room\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 7\n        }\n      }, this.state.room == null && __jsx(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }\n      }, __jsx(\"style\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }\n      }, \"\\n              body{\\n                background-image: url(\\\"bg-ocean.jpg\\\");\\n\\n              }\\n              \"), __jsx(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }\n      }, \"BfBB Blitz\"), __jsx(\"h1\", {\n        style: {\n          textAlign: \"center\",\n          paddingTop: 100,\n          paddingBottom: 100\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }\n      }, \"Welcome to BfBB Blitz!\"), __jsx(InputGroup, {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }\n      }, __jsx(InputGroup.Prepend, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }\n      }, __jsx(InputGroup.Text, {\n        id: \"basic-addon1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }\n      }, \"Display name\")), __jsx(FormControl, {\n        onChange: function onChange(e) {\n          return _this5.setState({\n            display_name_input: e.target.value\n          });\n        },\n        defaultValue: this.state.display_name_input,\n        placeholder: \"1 - 10 characters\",\n        \"aria-label\": \"1 - 10 characters\",\n        \"aria-describedby\": \"basic-addon1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }\n      })), __jsx(InputGroup, {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }\n      }, __jsx(InputGroup.Prepend, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }\n      }, __jsx(InputGroup.Text, {\n        id: \"basic-addon1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }\n      }, \"Room Password\")), __jsx(FormControl, {\n        onChange: function onChange(e) {\n          return _this5.setState({\n            room_password_input: e.target.value\n          });\n        },\n        defaultValue: this.state.room_password_input,\n        placeholder: \"The password you'll be giving your friends or your friend gave you. Don't let your viewers guess it.\",\n        \"aria-label\": \"The password you'll be giving your friends or your friend gave you. Don't let your viewers guess it.\",\n        \"aria-describedby\": \"basic-addon1\",\n        type: \"password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }\n      })), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }\n      }), __jsx(Button, {\n        disabled: this.state.display_name_input.length < 1 || this.state.room_password_input.length < 1,\n        block: true,\n        variant: this.state.display_name_input.length < 1 || this.state.room_password_input.length < 1 ? \"outline-primary\" : \"primary\",\n        onClick: function onClick() {\n          return _this5.createRoomAndJoin();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }\n      }, \"Create Room\"), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }\n      }), __jsx(InputGroup, {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }\n      }, __jsx(FormControl, {\n        onChange: function onChange(e) {\n          return _this5.setState({\n            rid_input: e.target.value\n          });\n        },\n        defaultValue: this.state.rid_input,\n        placeholder: \"Room ID\",\n        \"aria-label\": \"Recipient's username\",\n        \"aria-describedby\": \"basic-addon2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }\n      }), __jsx(InputGroup.Append, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }\n      }, __jsx(Button, {\n        disabled: this.state.display_name_input.length < 1 || this.state.room_password_input.length < 1,\n        variant: this.state.display_name_input.length < 1 || this.state.room_password_input.length < 1 ? \"outline-primary\" : \"primary\",\n        onClick: function onClick() {\n          return _this5.joinRoom(_this5.state.rid_input);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }\n      }, \"Join Room\"))), __jsx(Accordion, {\n        defaultActiveKey: \"0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }\n      }, __jsx(Card, {\n        className: \"bg-primary text-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 15\n        }\n      }, __jsx(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 17\n        }\n      }, __jsx(Accordion.Toggle, {\n        as: Button,\n        variant: \"link\",\n        eventKey: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 19\n        }\n      }, \"How to play\")), __jsx(Accordion.Collapse, {\n        eventKey: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 17\n        }\n      }, __jsx(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 19\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }\n      }, \"Blitz is an intense speed game where up to 8 players compete to be the first to collect as many objects as possible.\"), __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }\n      }, \"Rules\"), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }\n      }, \"The game begins when all players are ready. Everyone starts from the main menu one input away from creating a new game. Once ready, every player starts at the same time. When a player collects something, they simply click on the image to collect it. The picture can be clicked on anytime after the frame the player touched the objects. This means players that collect the object first don't neccesarily earn the points.\"), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }\n      }, \"Each object is worth a different amount of points.:\"), __jsx(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }\n      }, __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 23\n        }\n      }, \"Spatulas: 3 points\"), __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 23\n        }\n      }, \"Socks: 2 points\")), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }\n      }, \"The winner is determined after every object has been collected on the board. The winner is the player with the highest score. Players reserve the right to forfeit if they have no chance of winning.\"), __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }\n      }, \"Strategy\"), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }\n      }, \"Maybe SpongeBob's closet isn't worth your time if you don't think you can be the first to get in. Know your limits and weigh if it's worth taking your opponents head on.\"), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }\n      }, \"Know your opponents and what spatulas they might go for. If your player is simply following the 100 percent route, try skipping ahead and beating them to the parts of the route they will eventually arrive at.\"), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }\n      }, \"Learn the board. The Socks and Spatulas are in level order.\"), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }\n      }, \"Competing head on for collectables is high risk high reward. If you get to it before your opponent, you have wasted their time. In a game with 8 players, it might be good to snipe the leaders collectables to prevent them from gaining an even bigger lead.\"), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }\n      }, \"Mix it up. People will learn your favorite collectables and try to sabotage you through such.\")))), __jsx(Card, {\n        className: \"bg-primary text-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 15\n        }\n      }, __jsx(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 17\n        }\n      }, __jsx(Accordion.Toggle, {\n        as: Button,\n        variant: \"link\",\n        eventKey: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 19\n        }\n      }, \"Rulesets\")), __jsx(Accordion.Collapse, {\n        eventKey: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 17\n        }\n      }, __jsx(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 19\n        }\n      }, __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }\n      }, \"Normal\"), \"No in game cheats allowed.\", __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }\n      }, \"Sandbox\"), \"The following in game cheats are allowed to be entered as many times or at any point during the game:\", __jsx(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }\n      }, __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 23\n        }\n      }, \"10 Gold Spatulas\"), __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 23\n        }\n      }, \"Bubble Bowl Power\"), __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 23\n        }\n      }, \"Cruise Bubble Power\"))))))), this.state.room != null && __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }\n      }, __jsx(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }\n      }, \"BfBB Blitz: Room \", this.state.room.id, \" [\", this.state.room.players.length, \"/8]\"), __jsx(Alert, {\n        variant: \"dark\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }\n      }, \"Room \", __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 14\n        }\n      }, this.state.room.id), \" \", __jsx(\"span\", {\n        style: {\n          \"float\": \"right\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 42\n        }\n      }, \"Spectate at \", __jsx(Alert.Link, {\n        href: 'https://bobhub.net/spectate/blitz/' + this.state.room.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 84\n        }\n      }, \"https://bobhub.net/spectate/blitz/\", this.state.room.id))), __jsx(Form, {\n        style: {\n          paddingLeft: 20,\n          paddingRight: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }\n      }, __jsx(Form.Group, {\n        controlId: \"formBasicRange\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 15\n        }\n      }, \"Adjust aspect ratio: \", __jsx(Form.Control, {\n        min: 2,\n        max: 6,\n        value: this.state.padding_sides,\n        type: \"range\",\n        onChange: function onChange(e) {\n          return _this5.setState({\n            padding_sides: e.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 38\n        }\n      }))), __jsx(BlitzBoard, {\n        pid: this.state.player_id,\n        room: this.state.room,\n        collect_function: this.collect,\n        padding: this.state.padding_sides,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n\nexport { Index as default };","map":{"version":3,"sources":["/home/stephen/Desktop/BFBB_Client/frontend-nextjs/pages/blitz.js"],"names":["React","axios","BlitzBoard","Button","InputGroup","FormControl","Container","Col","Row","Alert","Accordion","Card","Form","BACKEND_IP","POLLING_RATE_MILLI_SECONDS","Index","props","collectable_name","data","pid","state","player_id","rid","room","id","secret","options","method","headers","body","JSON","stringify","fetch","then","res","json","success","setState","console","log","board","tasks","rid_input","room_password_input","display_name_input","padding_sides","Array","map","i","Math","random","toString","join","dn","room_password","interval","setInterval","refreshRoom","textAlign","paddingTop","paddingBottom","e","target","value","length","createRoomAndJoin","joinRoom","players","paddingLeft","paddingRight","collect","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport BlitzBoard from '../components/BlitzBoard.js'\nimport { Button, InputGroup, FormControl, Container, Col, Row, Alert, Accordion, Card, Form } from 'react-bootstrap'\n\nconst BACKEND_IP = \"https://bfbbhub.herokuapp.com\";\n//const BACKEND_IP = \"http://172.16.127.23:3001\";\n\nconst POLLING_RATE_MILLI_SECONDS = 1000;\n\nexport default class Index extends React.Component {\n\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      board: { tasks: [] },\n      room: null,\n      player_id: \"\",\n      rid_input: \"\",\n      room_password_input: \"\",\n      display_name_input: \"\",\n      secret: \"\",\n      padding_sides: 6,\n    }\n  }\n\n  collect = (collectable_name) => {\n\n    let data = { pid: this.state.player_id, rid: this.state.room.id, collectable_name: collectable_name, secret: this.state.secret }\n\n    let options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    }\n\n\n    fetch(BACKEND_IP + '/blitz/collect', options)\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          this.setState({ room: data.room });\n        }\n        console.log(data)\n      });\n  }\n\n  componentDidMount() {\n    //Give the player an id\n    this.setState({ player_id: [...Array(16)].map(i => (~~(Math.random() * 36)).toString(36)).join('') });\n\n  }\n\n  createRoomAndJoin() {\n\n    let data = { pid: this.state.player_id, dn: this.state.display_name_input, room_password: this.state.room_password_input }\n\n    let options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    }\n\n\n    fetch(BACKEND_IP + '/blitz/createroom', options)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ room: data.room })\n        this.setState({ secret: data.secret })\n        //Get new room data\n        const interval = setInterval(() => {\n          this.refreshRoom();\n        }, POLLING_RATE_MILLI_SECONDS);\n      });\n  }\n\n  joinRoom(rid) {\n    let data = { pid: this.state.player_id, rid: rid, dn: this.state.display_name_input, room_password: this.state.room_password_input }\n\n    let options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    }\n\n\n    fetch(BACKEND_IP + '/blitz/joinroom', options)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ room: data.room })\n        this.setState({ secret: data.secret })\n        //Get new room data\n        const interval = setInterval(() => {\n          this.refreshRoom();\n        }, POLLING_RATE_MILLI_SECONDS);\n      });\n  }\n\n  //Refreshes your room periodically\n  refreshRoom() {\n    if (this.state.room == null) return; //whered the room go?\n    console.log(\"Getting new room data...\")\n\n    fetch(BACKEND_IP + '/blitz/getroom/' + this.state.room.id)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ room: data.room })\n      });\n  }\n\n\n  render() {\n    return (\n      <div>\n\n        {this.state.room == null &&\n          <Container>\n            <style>{`\n              body{\n                background-image: url(\"bg-ocean.jpg\");\n\n              }\n              `}</style>\n            <title>BfBB Blitz</title>\n            <h1 style={{ textAlign: \"center\", paddingTop: 100, paddingBottom: 100 }}>\n              Welcome to BfBB Blitz!\n            </h1>\n            <InputGroup className=\"mb-3\">\n              <InputGroup.Prepend>\n                <InputGroup.Text id=\"basic-addon1\">Display name</InputGroup.Text>\n              </InputGroup.Prepend>\n              <FormControl onChange={e => this.setState({ display_name_input: e.target.value })} defaultValue={this.state.display_name_input}\n                placeholder=\"1 - 10 characters\"\n                aria-label=\"1 - 10 characters\"\n                aria-describedby=\"basic-addon1\"\n\n              />\n            </InputGroup>\n            <InputGroup className=\"mb-3\">\n              <InputGroup.Prepend>\n                <InputGroup.Text id=\"basic-addon1\">Room Password</InputGroup.Text>\n              </InputGroup.Prepend>\n              <FormControl onChange={e => this.setState({ room_password_input: e.target.value })} defaultValue={this.state.room_password_input}\n                placeholder=\"The password you'll be giving your friends or your friend gave you. Don't let your viewers guess it.\"\n                aria-label=\"The password you'll be giving your friends or your friend gave you. Don't let your viewers guess it.\"\n                aria-describedby=\"basic-addon1\"\n                type=\"password\"\n              />\n            </InputGroup>\n            <br></br>\n\n            <Button disabled={this.state.display_name_input.length < 1 || this.state.room_password_input.length < 1} block variant={this.state.display_name_input.length < 1 || this.state.room_password_input.length < 1 ? \"outline-primary\":\"primary\"} onClick={() => this.createRoomAndJoin()}>Create Room</Button>\n            <br></br>\n            <InputGroup className=\"mb-3\">\n\n              <FormControl onChange={e => this.setState({ rid_input: e.target.value })} defaultValue={this.state.rid_input}\n                placeholder=\"Room ID\"\n                aria-label=\"Recipient's username\"\n                aria-describedby=\"basic-addon2\"\n              />\n              <InputGroup.Append>\n                <Button disabled={this.state.display_name_input.length < 1 || this.state.room_password_input.length < 1} variant={this.state.display_name_input.length < 1 || this.state.room_password_input.length < 1 ? \"outline-primary\":\"primary\"} onClick={() => this.joinRoom(this.state.rid_input)}>Join Room</Button>\n              </InputGroup.Append>\n            </InputGroup>\n\n            <Accordion defaultActiveKey=\"0\">\n              <Card className=\"bg-primary text-white\">\n                <Card.Header>\n                  <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\n                    How to play\n                  </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"1\">\n                  <Card.Body>\n                    <p>\n                      Blitz is an intense speed game where up to 8 players compete to be the first to collect as many objects as possible.\n                    </p>\n                    <h2>\n                      Rules\n                    </h2>\n                    <p>\n                      The game begins when all players are ready. Everyone starts from the main menu one input away from creating a new game. Once\n                      ready, every player starts at the same time. When a player collects something, they simply click on the image to collect it.\n                      The picture can be clicked on anytime after the frame the player touched the objects. This means players that collect the object\n                      first don't neccesarily earn the points.\n                    </p>\n                    <p>\n                      Each object is worth a different amount of points.:\n                    </p>\n                    <ul>\n                      <li>Spatulas: 3 points</li>\n                      <li>Socks: 2 points</li>\n                    </ul>\n                    <p>\n                      The winner is determined after every object has been collected on the board. The winner is the player with the highest score. Players\n                      reserve the right to forfeit if they have no chance of winning.\n                    </p>\n                    <h2>\n                      Strategy\n                    </h2>\n                    <p>\n                      Maybe SpongeBob's closet isn't worth your time if you don't think you can be the first to get in. Know your limits and weigh if it's worth\n                      taking your opponents head on.\n                    </p>\n                    <p>\n                      Know your opponents and what spatulas they might go for. If your player is simply following the 100 percent route, try skipping ahead\n                      and beating them to the parts of the route they will eventually arrive at.\n                    </p>\n                    <p>\n                      Learn the board. The Socks and Spatulas are in level order.\n                    </p>\n                    <p>\n                      Competing head on for collectables is high risk high reward. If you get to it before your opponent, you have wasted their time. In\n                      a game with 8 players, it might be good to snipe the leaders collectables to prevent them from gaining an even bigger lead.\n                    </p>\n                    <p>\n                      Mix it up. People will learn your favorite collectables and try to sabotage you through such.\n                    </p>\n\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n              <Card className=\"bg-primary text-white\">\n                <Card.Header>\n                  <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\">\n                    Rulesets\n                  </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"2\">\n                  <Card.Body>\n                    <h2>Normal</h2>\n                      No in game cheats allowed.\n                    <h2>Sandbox</h2>\n                    The following in game cheats are allowed to be entered as many times or at any point during the game:\n                    <ul>\n                      <li>10 Gold Spatulas</li>\n                      <li>Bubble Bowl Power</li>\n                      <li>Cruise Bubble Power</li>\n                    </ul>\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n            </Accordion>\n\n          </Container>}\n        {this.state.room != null &&\n          <div>\n            <title>BfBB Blitz: Room {this.state.room.id} [{this.state.room.players.length}/8]</title>\n            <Alert variant=\"dark\">\n        Room <b>{this.state.room.id}</b> <span style={{float:\"right\"}}>Spectate at <Alert.Link href={'https://bobhub.net/spectate/blitz/'+this.state.room.id}>https://bobhub.net/spectate/blitz/{this.state.room.id}</Alert.Link></span>\n            </Alert>\n            <Form style={{paddingLeft:20, paddingRight:20}}>\n              <Form.Group controlId=\"formBasicRange\">\n                Adjust aspect ratio: <Form.Control min={2} max={6} value={this.state.padding_sides} type=\"range\" onChange={(e) => this.setState({ padding_sides: e.target.value })} />\n              </Form.Group>\n            </Form>\n            <BlitzBoard pid={this.state.player_id} room={this.state.room} collect_function={this.collect} padding={this.state.padding_sides}></BlitzBoard>\n\n          </div>}\n\n\n\n\n      </div>\n\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}