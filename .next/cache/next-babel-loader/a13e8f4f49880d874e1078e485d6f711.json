{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/stephen/Desktop/BFBB_Client/bfbb-site/components/AddStrat.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { useRouter } from 'next/router';\nimport fetch from 'node-fetch';\nimport { DropdownButton, Dropdown, Button, Container, Image, Badge, Card, Accordion, FormControl } from 'react-bootstrap';\nimport BACKEND_URL from './backendurl.js';\n\nvar AddStrat = /*#__PURE__*/function (_React$Component) {\n  _inherits(AddStrat, _React$Component);\n\n  var _super = _createSuper(AddStrat);\n\n  function AddStrat(props) {\n    var _this;\n\n    _classCallCheck(this, AddStrat);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      areas: [],\n      area: \"\",\n      name: \"\",\n      description: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(AddStrat, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getAreas();\n    }\n  }, {\n    key: \"getAreas\",\n    value: function getAreas() {\n      var _this2 = this;\n\n      {\n        fetch(BACKEND_URL + 'bfbb-site/areas').then(function (res) {\n          return res.json();\n        }).then(function (data) {\n          if (data.success == true) {\n            _this2.setState({\n              areas: data.info,\n              area: data.info[0].internal_name\n            });\n          }\n        });\n      }\n    }\n  }, {\n    key: \"addArea\",\n    value: function addArea() {\n      var _this3 = this;\n\n      var data = {\n        username: window.sessionStorage.getItem(\"username\"),\n        token: window.sessionStorage.getItem(\"token\"),\n        name: this.state.name,\n        level: this.state.level,\n        internal_name: this.state.internal_name,\n        sock_count: this.state.sock_count,\n        spatula_count: this.state.spatula_count\n      };\n      var options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      };\n      fetch(BACKEND_URL + 'bfbb-site/areas/post', options).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        if (data.success) {\n          _this3.props.getDataMethod();\n\n          _this3.setState({\n            name: \"\",\n            internal_name: \"\",\n            sock_count: 0,\n            spatula_count: 0\n          });\n        } else {\n          console.log(data.error);\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return __jsx(\"div\", {\n        style: {\n          backgroundColor: \"#000000\",\n          padding: 20,\n          textAlign: \"left\",\n          borderRadius: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }\n      }, __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }\n      }, \"Add a strat\"), __jsx(Dropdown, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      }, __jsx(Dropdown.Toggle, {\n        variant: \"dark\",\n        id: \"dropdown-basic\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }\n      }, this.state.area), __jsx(Dropdown.Menu, {\n        style: {\n          position: \"relative\",\n          zIndex: 10000\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }\n      }, this.state.areas.map(function (area) {\n        return __jsx(Dropdown.Item, {\n          onClick: function onClick() {\n            return _this4.setState({\n              area: area.name\n            });\n          },\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }\n        }, area.internal_name);\n      }))), __jsx(FormControl, {\n        onChange: function onChange(e) {\n          return _this4.setState({\n            name: e.target.value\n          });\n        },\n        value: this.state.name,\n        placeholder: \"Name\",\n        \"aria-label\": \"Name\",\n        \"aria-describedby\": \"basic-addon1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }\n      }), __jsx(FormControl, {\n        onChange: function onChange(e) {\n          return _this4.setState({\n            internal_name: e.target.value.toUpperCase()\n          });\n        },\n        value: this.state.internal_name,\n        placeholder: \"Internal Name (ie; HB01, HB02, JF01, etc)\",\n        \"aria-label\": \"Name\",\n        \"aria-describedby\": \"basic-addon1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }\n      }), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }\n      }), __jsx(Button, {\n        variant: \"success\",\n        block: true,\n        onClick: function onClick() {\n          return _this4.addStrat();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }\n      }, \"Add strat\"));\n    }\n  }]);\n\n  return AddStrat;\n}(React.Component);\n\nexport { AddStrat as default };","map":{"version":3,"sources":["/home/stephen/Desktop/BFBB_Client/bfbb-site/components/AddStrat.js"],"names":["useRouter","fetch","DropdownButton","Dropdown","Button","Container","Image","Badge","Card","Accordion","FormControl","BACKEND_URL","AddStrat","props","state","areas","area","name","description","getAreas","then","res","json","data","success","setState","info","internal_name","username","window","sessionStorage","getItem","token","level","sock_count","spatula_count","options","method","headers","body","JSON","stringify","getDataMethod","console","log","error","backgroundColor","padding","textAlign","borderRadius","position","zIndex","map","e","target","value","toUpperCase","addStrat","React","Component"],"mappings":"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","sourcesContent":["import { useRouter } from 'next/router'\nimport fetch from 'node-fetch'\nimport { DropdownButton, Dropdown, Button, Container, Image, Badge, Card, Accordion, FormControl } from 'react-bootstrap'\nimport BACKEND_URL from './backendurl.js'\n\nexport default class AddStrat extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            areas: [],\n            area: \"\",\n            name: \"\",\n            description: \"\",\n        }\n    }\n\n    componentDidMount() {\n        this.getAreas();\n    }\n\n    getAreas() {\n        {\n\n            fetch(BACKEND_URL + 'bfbb-site/areas')\n                .then(res => res.json())\n\n                .then(data => {\n                    if (data.success == true) {\n                        this.setState({ areas: data.info, area: data.info[0].internal_name })\n                    }\n                })\n\n\n        }\n    }\n\n    addArea() {\n        let data = { \n            username:window.sessionStorage.getItem(\"username\"),\n            token:window.sessionStorage.getItem(\"token\"),\n            name:this.state.name,\n            level:this.state.level,\n            internal_name:this.state.internal_name, \n            sock_count: this.state.sock_count,\n            spatula_count: this.state.spatula_count\n        }\n\n        let options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        }\n\n\n        fetch(BACKEND_URL + 'bfbb-site/areas/post', options)\n            .then(res => res.json())\n            .then(data => {\n                if (data.success) {\n                    this.props.getDataMethod()\n                    this.setState({\n                        name: \"\",\n                        internal_name:\"\",\n                        sock_count:0,\n                        spatula_count:0\n                    })\n                } else {\n                    console.log(data.error)\n                }\n            });\n    }\n\n\n    render() {\n        return (\n        <div style={{backgroundColor:\"#000000\",padding:20, textAlign:\"left\", borderRadius:20}}>\n            <h2>Add a strat</h2>\n            <Dropdown >\n                <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\">\n                    {this.state.area}\n                </Dropdown.Toggle>\n                <Dropdown.Menu style={{ position: \"relative\", zIndex: 10000 }}>\n                    {this.state.areas.map(area =>\n                        <Dropdown.Item onClick={() => this.setState({ area: area.name })}>{area.internal_name}</Dropdown.Item>\n                    )}\n                </Dropdown.Menu>\n            </Dropdown>\n\n            <FormControl\n                onChange={e => this.setState({ name: e.target.value })}\n                value={this.state.name}\n                placeholder=\"Name\"\n                aria-label=\"Name\"\n                aria-describedby=\"basic-addon1\"\n            />\n            <FormControl\n                onChange={e => this.setState({ internal_name: e.target.value.toUpperCase() })}\n                value={this.state.internal_name}\n                placeholder=\"Internal Name (ie; HB01, HB02, JF01, etc)\"\n                aria-label=\"Name\"\n                aria-describedby=\"basic-addon1\"\n            />\n            <br></br>\n            <Button variant=\"success\" block onClick={()=>this.addStrat()}>\n                Add strat\n            </Button>\n        </div>);\n    }\n}"]},"metadata":{},"sourceType":"module"}