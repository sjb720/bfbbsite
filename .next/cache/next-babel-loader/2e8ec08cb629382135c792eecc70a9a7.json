{"ast":null,"code":"var _jsxFileName = \"/home/stephen/Desktop/BFBB_Client/frontend-nextjs/pages/blitz.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport axios from 'axios';\nimport BlitzBoard from '../components/BlitzBoard.js';\nimport { Button, InputGroup, FormControl, Container, Col, Row, Alert, Accordion, Card } from 'react-bootstrap'; //const BACKEND_IP = \"https://bfbbhub.herokuapp.com\";\n\nconst BACKEND_IP = \"http://172.16.127.245:3001\";\nconst POLLING_RATE_MILLI_SECONDS = 1000;\nexport default class Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      board: {\n        tasks: []\n      },\n      room: null,\n      player_id: \"\",\n      rid_input: \"\",\n      display_name_input: \"\",\n      secret: \"\"\n    };\n  }\n\n  collect(collectable_name) {\n    console.log(collectable_name);\n  }\n\n  componentDidMount() {\n    //Give the player an id\n    this.setState({\n      player_id: [...Array(16)].map(i => (~~(Math.random() * 36)).toString(36)).join('')\n    });\n  }\n\n  createRoomAndJoin() {\n    let data = {\n      pid: this.state.player_id,\n      dn: this.state.display_name_input\n    };\n    let options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    };\n    fetch(BACKEND_IP + '/blitz/createroom', options).then(res => res.json()).then(data => {\n      this.setState({\n        room: data.room\n      });\n      this.setState({\n        secret: data.secret\n      }); //Get new room data\n\n      const interval = setInterval(() => {\n        this.refreshRoom();\n      }, POLLING_RATE_MILLI_SECONDS);\n    });\n  }\n\n  joinRoom(rid) {\n    let data = {\n      pid: this.state.player_id,\n      rid: rid,\n      dn: this.state.display_name_input\n    };\n    let options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    };\n    fetch(BACKEND_IP + '/blitz/joinroom', options).then(res => res.json()).then(data => {\n      this.setState({\n        room: data\n      }); //Get new room data\n\n      const interval = setInterval(() => {\n        this.refreshRoom();\n      }, POLLING_RATE_MILLI_SECONDS);\n    });\n  } //Refreshes your room periodically\n\n\n  refreshRoom() {\n    if (this.state.room == null) return; //whered the room go?\n\n    console.log(\"Getting new room data...\");\n    fetch(BACKEND_IP + '/blitz/getroom/' + this.state.room.id).then(res => res.json()).then(data => {\n      this.setState({\n        room: data\n      });\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }\n    }, this.state.room == null && __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, \"BfBB Blitz\"), __jsx(\"h1\", {\n      style: {\n        textAlign: \"center\",\n        paddingTop: 100,\n        paddingBottom: 100\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, \"Welcome to BfBB Blitz!\"), __jsx(InputGroup, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, __jsx(InputGroup.Prepend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, __jsx(InputGroup.Text, {\n      id: \"basic-addon1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, \"Display name\")), __jsx(FormControl, {\n      onChange: e => this.setState({\n        display_name_input: e.target.value\n      }),\n      defaultValue: this.state.display_name_input,\n      placeholder: \"1 - 10 characters\",\n      \"aria-label\": \"1 - 10 characters\",\n      \"aria-describedby\": \"basic-addon1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    })), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }), __jsx(Button, {\n      disabled: this.state.display_name_input.length < 1,\n      variant: \"outline-primary\",\n      style: {\n        width: \"100%\",\n        marginBottom: 5\n      },\n      onClick: () => this.createRoomAndJoin(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, \"Create Room\"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }), __jsx(InputGroup, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, __jsx(FormControl, {\n      onChange: e => this.setState({\n        rid_input: e.target.value\n      }),\n      defaultValue: this.state.rid_input,\n      placeholder: \"Room ID\",\n      \"aria-label\": \"Recipient's username\",\n      \"aria-describedby\": \"basic-addon2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }), __jsx(InputGroup.Append, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }, __jsx(Button, {\n      disabled: this.state.display_name_input.length < 1,\n      variant: \"outline-primary\",\n      onClick: () => this.joinRoom(this.state.rid_input),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, \"Join Room\"))), __jsx(Accordion, {\n      defaultActiveKey: \"0\",\n      style: {\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, __jsx(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    }, __jsx(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, __jsx(Accordion.Toggle, {\n      as: Button,\n      variant: \"link\",\n      eventKey: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 19\n      }\n    }, \"How to play\")), __jsx(Accordion.Collapse, {\n      eventKey: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }, __jsx(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 19\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }\n    }, \"Blitz is an intense speed game where up to 8 players compete to be the first to collect as many objects as possible.\"), __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }\n    }, \"Rules\"), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    }, \"The game begins when all players are ready. Everyone starts from the main menu one input away from creating a new game. Once ready, every player starts at the same time. When a player collects something, they simply click on the image to collect it. The picture can be clicked on anytime after the frame the player touched the objects. This means players that collect the object first don't neccesarily earn the points.\"), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }\n    }, \"Each object is worth a different amount of points.:\"), __jsx(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }\n    }, __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 23\n      }\n    }, \"Spatulas: 3 points\"), __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 23\n      }\n    }, \"Socks: 2 points\")), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    }, \"The winner is determined after every object has been collected on the board. The winner is the player with the highest score. Players reserve the right to forfeit if they have no chance of winning.\"), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }\n    }, \"Certain in game cheats are allowed, see the list for more info.\"), __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }\n    }, \"Strategy\"), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }, \"Maybe SpongeBob's closet isn't worth your time if you don't think you can be the first to get in. Know your limits and weigh if it's worth taking your opponents head on.\"), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }\n    }, \"Know your opponents and what spatulas they might go for. If your player is simply following the 100 percent route, try skipping ahead and beating them to the parts of the route they will eventually arrive at.\"), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }\n    }, \"Learn the board. The Socks and Spatulas are in level order.\"), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }\n    }, \"Competing head on for collectables is high risk high reward. If you get to it before your opponent, you have wasted their time. In a game with 8 players, it might be good to snipe the leaders collectables to prevent them from gaining an even bigger lead.\"), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }\n    }, \"Mix it up. People will learn your favorite collectables and try to sabotage you through such.\")))), __jsx(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 15\n      }\n    }, __jsx(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }, __jsx(Accordion.Toggle, {\n      as: Button,\n      variant: \"link\",\n      eventKey: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 19\n      }\n    }, \"Allowed in game cheats\")), __jsx(Accordion.Collapse, {\n      eventKey: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }\n    }, __jsx(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 19\n      }\n    }, \"The following IGC are allowed to be entered as many times or at any point during the game:\", __jsx(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 21\n      }\n    }, __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 23\n      }\n    }, \"10 Gold Spatulas\"), __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 23\n      }\n    }, \"1,000 Shiny Objects\"), __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 23\n      }\n    }, \"Bubble Bowl Power\"), __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 23\n      }\n    }, \"Cruise Bubble Power\"))))))), this.state.room != null && __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }\n    }, \"BfBB Blitz: Room \", this.state.room.id), __jsx(Alert, {\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }\n    }, this.state.room.players.length, \"/8 players. Invite more with: \", __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 77\n      }\n    }, this.state.room.id)), __jsx(BlitzBoard, {\n      pid: this.state.player_id,\n      room: this.state.room,\n      collect_function: this.collect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/home/stephen/Desktop/BFBB_Client/frontend-nextjs/pages/blitz.js"],"names":["React","axios","BlitzBoard","Button","InputGroup","FormControl","Container","Col","Row","Alert","Accordion","Card","BACKEND_IP","POLLING_RATE_MILLI_SECONDS","Index","Component","constructor","props","state","board","tasks","room","player_id","rid_input","display_name_input","secret","collect","collectable_name","console","log","componentDidMount","setState","Array","map","i","Math","random","toString","join","createRoomAndJoin","data","pid","dn","options","method","headers","body","JSON","stringify","fetch","then","res","json","interval","setInterval","refreshRoom","joinRoom","rid","id","render","textAlign","paddingTop","paddingBottom","e","target","value","length","width","marginBottom","color","players"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport BlitzBoard from '../components/BlitzBoard.js'\nimport { Button, InputGroup, FormControl, Container, Col, Row, Alert, Accordion, Card } from 'react-bootstrap'\n\n//const BACKEND_IP = \"https://bfbbhub.herokuapp.com\";\nconst BACKEND_IP = \"http://172.16.127.245:3001\";\n\nconst POLLING_RATE_MILLI_SECONDS = 1000;\n\nexport default class Index extends React.Component {\n\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      board: { tasks: [] },\n      room: null,\n      player_id: \"\",\n      rid_input: \"\",\n      display_name_input: \"\",\n      secret: \"\",\n    }\n  }\n\n  collect(collectable_name) {\n    console.log(collectable_name)\n  }\n\n  componentDidMount() {\n    //Give the player an id\n    this.setState({ player_id: [...Array(16)].map(i => (~~(Math.random() * 36)).toString(36)).join('') });\n\n  }\n\n  createRoomAndJoin() {\n\n    let data = { pid: this.state.player_id, dn: this.state.display_name_input }\n\n    let options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    }\n\n\n    fetch(BACKEND_IP + '/blitz/createroom', options)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ room: data.room })\n        this.setState({secret: data.secret})\n        //Get new room data\n        const interval = setInterval(() => {\n          this.refreshRoom();\n        }, POLLING_RATE_MILLI_SECONDS);\n      });\n  }\n\n  joinRoom(rid) {\n    let data = { pid: this.state.player_id, rid: rid, dn: this.state.display_name_input }\n\n    let options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    }\n\n\n    fetch(BACKEND_IP + '/blitz/joinroom', options)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ room: data })\n        //Get new room data\n        const interval = setInterval(() => {\n          this.refreshRoom();\n        }, POLLING_RATE_MILLI_SECONDS);\n      });\n  }\n\n  //Refreshes your room periodically\n  refreshRoom() {\n    if (this.state.room == null) return; //whered the room go?\n    console.log(\"Getting new room data...\")\n\n    fetch(BACKEND_IP + '/blitz/getroom/' + this.state.room.id)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ room: data })\n      });\n  }\n\n\n  render() {\n    return (\n      <div>\n\n        {this.state.room == null &&\n          <Container>\n            <title>BfBB Blitz</title>\n            <h1 style={{textAlign:\"center\", paddingTop:100,paddingBottom:100}}>\n              Welcome to BfBB Blitz!\n            </h1>\n            <InputGroup className=\"mb-3\">\n              <InputGroup.Prepend>\n                <InputGroup.Text id=\"basic-addon1\">Display name</InputGroup.Text>\n              </InputGroup.Prepend>\n              <FormControl onChange={e => this.setState({ display_name_input: e.target.value })} defaultValue={this.state.display_name_input}\n                placeholder=\"1 - 10 characters\"\n                aria-label=\"1 - 10 characters\"\n                aria-describedby=\"basic-addon1\"\n              />\n            </InputGroup>\n            <br></br>\n            <Button disabled={this.state.display_name_input.length < 1} variant=\"outline-primary\" style={{ width: \"100%\", marginBottom: 5 }} onClick={() => this.createRoomAndJoin()}>Create Room</Button>\n            <br></br>\n            <InputGroup className=\"mb-3\">\n\n              <FormControl onChange={e => this.setState({ rid_input: e.target.value })} defaultValue={this.state.rid_input}\n                placeholder=\"Room ID\"\n                aria-label=\"Recipient's username\"\n                aria-describedby=\"basic-addon2\"\n              />\n              <InputGroup.Append>\n                <Button disabled={this.state.display_name_input.length < 1} variant=\"outline-primary\" onClick={() => this.joinRoom(this.state.rid_input)}>Join Room</Button>\n              </InputGroup.Append>\n            </InputGroup>\n\n            <Accordion defaultActiveKey=\"0\" style={{color:\"black\"}}>\n              <Card>\n                <Card.Header>\n                  <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\n                    How to play\n                  </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"1\">\n                  <Card.Body>\n                    <p>\n                      Blitz is an intense speed game where up to 8 players compete to be the first to collect as many objects as possible.\n                    </p>\n                    <h2>\n                      Rules\n                    </h2>\n                    <p>\n                      The game begins when all players are ready. Everyone starts from the main menu one input away from creating a new game. Once\n                      ready, every player starts at the same time. When a player collects something, they simply click on the image to collect it.\n                      The picture can be clicked on anytime after the frame the player touched the objects. This means players that collect the object\n                      first don't neccesarily earn the points.\n                    </p>\n                    <p>\n                      Each object is worth a different amount of points.:\n                    </p>\n                    <ul>\n                      <li>Spatulas: 3 points</li>\n                      <li>Socks: 2 points</li>\n                    </ul>\n                    <p>\n                      The winner is determined after every object has been collected on the board. The winner is the player with the highest score. Players\n                      reserve the right to forfeit if they have no chance of winning.\n                    </p>\n                    <p>\n                      Certain in game cheats are allowed, see the list for more info.\n                    </p>\n                    <h2>\n                      Strategy\n                    </h2>\n                    <p>\n                      Maybe SpongeBob's closet isn't worth your time if you don't think you can be the first to get in. Know your limits and weigh if it's worth\n                      taking your opponents head on.\n                    </p>\n                    <p>\n                      Know your opponents and what spatulas they might go for. If your player is simply following the 100 percent route, try skipping ahead\n                      and beating them to the parts of the route they will eventually arrive at.\n                    </p>\n                    <p>\n                      Learn the board. The Socks and Spatulas are in level order.\n                    </p>\n                    <p>\n                      Competing head on for collectables is high risk high reward. If you get to it before your opponent, you have wasted their time. In\n                      a game with 8 players, it might be good to snipe the leaders collectables to prevent them from gaining an even bigger lead.\n                    </p>\n                    <p>\n                      Mix it up. People will learn your favorite collectables and try to sabotage you through such.\n                    </p>\n                    \n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n              <Card>\n                <Card.Header>\n                  <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\">\n                    Allowed in game cheats\n                  </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"2\">\n                  <Card.Body>\n                    The following IGC are allowed to be entered as many times or at any point during the game:\n                    <ul>\n                      <li>10 Gold Spatulas</li>\n                      <li>1,000 Shiny Objects</li>\n                      <li>Bubble Bowl Power</li>\n                      <li>Cruise Bubble Power</li>\n                    </ul>\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n            </Accordion>\n\n          </Container>}\n        {this.state.room != null &&\n          <div>\n            <title>BfBB Blitz: Room {this.state.room.id}</title>\n            <Alert variant=\"primary\">\n              {this.state.room.players.length}/8 players. Invite more with: <b>{this.state.room.id}</b>\n            </Alert>\n            <BlitzBoard pid={this.state.player_id} room={this.state.room} collect_function={this.collect}></BlitzBoard>\n\n          </div>}\n\n\n\n\n      </div>\n\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}