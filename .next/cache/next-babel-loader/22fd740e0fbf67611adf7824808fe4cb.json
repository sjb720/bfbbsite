{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/stephen/Desktop/Taras web app/frontend-nextjs/components/Map.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Component } from 'react';\nimport ReactMapGL from 'react-map-gl';\n\nvar Map = /*#__PURE__*/function (_Component) {\n  _inherits(Map, _Component);\n\n  var _super = _createSuper(Map);\n\n  function Map() {\n    var _this;\n\n    _classCallCheck(this, Map);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      viewport: {\n        width: '100vw',\n        height: '100vh',\n        latitude: 38.9868,\n        longitude: -77.0325,\n        zoom: 13\n      },\n      geojson: {}\n    });\n\n    return _this;\n  }\n\n  _createClass(Map, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var map = this.reactMap.getMap();\n      map.on('load', function () {\n        fetch('http://localhost:3001/taras/coordinates/geojson').then(function (res) {\n          return res.json();\n        }).then(function (data) {\n          return _this2.displayDataOnMap(data.data);\n        });\n      });\n    }\n  }, {\n    key: \"displayDataOnMap\",\n    value: function displayDataOnMap(geojson) {\n      var map = this.reactMap.getMap();\n      map.addSource('crash-data', geojson);\n      map.addLayer({\n        'id': 'points',\n        'type': 'circle',\n        'source': 'crash-data',\n        'layout': {}\n      });\n      map.addLayer({\n        'id': 'earthquakes-heat',\n        'type': 'heatmap',\n        'source': 'crash-data',\n        'maxzoom': 9,\n        'paint': {\n          // Increase the heatmap weight based on frequency and property magnitude\n          'heatmap-weight': ['interpolate', ['linear'], ['get', 'mag'], 0, 0, 6, 1],\n          // Increase the heatmap color weight weight by zoom level\n          // heatmap-intensity is a multiplier on top of heatmap-weight\n          'heatmap-intensity': ['interpolate', ['linear'], ['zoom'], 0, 1, 9, 3],\n          // Color ramp for heatmap.  Domain is 0 (low) to 1 (high).\n          // Begin color ramp at 0-stop with a 0-transparancy color\n          // to create a blur-like effect.\n          'heatmap-color': ['interpolate', ['linear'], ['heatmap-density'], 0, 'rgba(33,102,172,0)', 0.2, 'rgb(103,169,207)', 0.4, 'rgb(209,229,240)', 0.6, 'rgb(253,219,199)', 0.8, 'rgb(239,138,98)', 1, 'rgb(178,24,43)'],\n          // Adjust the heatmap radius by zoom level\n          'heatmap-radius': ['interpolate', ['linear'], ['zoom'], 0, 2, 9, 20],\n          // Transition from heatmap to circle layer by zoom level\n          'heatmap-opacity': ['interpolate', ['linear'], ['zoom'], 7, 1, 9, 0]\n        }\n      }, 'waterway-label');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return __jsx(ReactMapGL, _extends({\n        ref: function ref(reactMap) {\n          return _this3.reactMap = reactMap;\n        },\n        mapStyle: \"mapbox://styles/mapbox/streets-v9\",\n        mapboxApiAccessToken: \"pk.eyJ1IjoieW9tYW40NyIsImEiOiJjampxM2g3YjUyMzFyM3ZvMXNjZ2R3d2ZtIn0.r0zXd8hAqa1haG3lkjlDwA\",\n        onViewportChange: function onViewportChange(viewport) {\n          return _this3.setState({\n            viewport: viewport\n          });\n        }\n      }, this.state.viewport, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return Map;\n}(Component);\n\nexport default Map;","map":{"version":3,"sources":["/home/stephen/Desktop/Taras web app/frontend-nextjs/components/Map.js"],"names":["Component","ReactMapGL","Map","viewport","width","height","latitude","longitude","zoom","geojson","map","reactMap","getMap","on","fetch","then","res","json","data","displayDataOnMap","addSource","addLayer","setState","state"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport ReactMapGL from 'react-map-gl';\n\nclass Map extends Component {\n\n  state = {\n    viewport: {\n      width: '100vw',\n      height: '100vh',\n      latitude: 38.9868,\n      longitude: -77.0325,\n      zoom: 13,\n    },\n    geojson: {}\n  };\n\n  componentDidMount() {\n\n    const map = this.reactMap.getMap(); \n\n    map.on('load', () => {\n        fetch('http://localhost:3001/taras/coordinates/geojson')\n        .then(res => res.json())\n        .then(data => this.displayDataOnMap(data.data));\n    })\n\n    \n  }\n\n  displayDataOnMap(geojson){\n\n    const map = this.reactMap.getMap(); \n\n    map.addSource('crash-data',geojson)\n\n    map.addLayer({\n        'id': 'points',\n        'type': 'circle',\n        'source': 'crash-data',\n        'layout': {}});\n    \n        map.addLayer(\n          {\n          'id': 'earthquakes-heat',\n          'type': 'heatmap',\n          'source': 'crash-data',\n          'maxzoom': 9,\n          'paint': {\n          // Increase the heatmap weight based on frequency and property magnitude\n          'heatmap-weight': [\n          'interpolate',\n          ['linear'],\n          ['get', 'mag'],\n          0,\n          0,\n          6,\n          1\n          ],\n          // Increase the heatmap color weight weight by zoom level\n          // heatmap-intensity is a multiplier on top of heatmap-weight\n          'heatmap-intensity': [\n          'interpolate',\n          ['linear'],\n          ['zoom'],\n          0,\n          1,\n          9,\n          3\n          ],\n          // Color ramp for heatmap.  Domain is 0 (low) to 1 (high).\n          // Begin color ramp at 0-stop with a 0-transparancy color\n          // to create a blur-like effect.\n          'heatmap-color': [\n          'interpolate',\n          ['linear'],\n          ['heatmap-density'],\n          0,\n          'rgba(33,102,172,0)',\n          0.2,\n          'rgb(103,169,207)',\n          0.4,\n          'rgb(209,229,240)',\n          0.6,\n          'rgb(253,219,199)',\n          0.8,\n          'rgb(239,138,98)',\n          1,\n          'rgb(178,24,43)'\n          ],\n          // Adjust the heatmap radius by zoom level\n          'heatmap-radius': [\n          'interpolate',\n          ['linear'],\n          ['zoom'],\n          0,\n          2,\n          9,\n          20\n          ],\n          // Transition from heatmap to circle layer by zoom level\n          'heatmap-opacity': [\n          'interpolate',\n          ['linear'],\n          ['zoom'],\n          7,\n          1,\n          9,\n          0\n          ]\n          }\n          },\n          'waterway-label'\n          );\n          \n\n  }\n\n  render() {\n    return (\n      <ReactMapGL\n        ref={(reactMap) => this.reactMap = reactMap}\n        mapStyle=\"mapbox://styles/mapbox/streets-v9\"\n        mapboxApiAccessToken=\"pk.eyJ1IjoieW9tYW40NyIsImEiOiJjampxM2g3YjUyMzFyM3ZvMXNjZ2R3d2ZtIn0.r0zXd8hAqa1haG3lkjlDwA\"\n        onViewportChange={(viewport) => this.setState({ viewport })}\n        {...this.state.viewport}\n      />\n    );\n  }\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}