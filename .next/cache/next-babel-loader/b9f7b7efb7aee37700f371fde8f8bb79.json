{"ast":null,"code":"var _jsxFileName = \"/home/stephen/Desktop/BFBB_Client/frontend-nextjs/components/BlitzGrid.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { Tooltip, OverlayTrigger } from 'react-bootstrap';\nconst BACKEND_IP = \"http://localhost:3001\";\n\nconst renderTooltip = props => __jsx(Tooltip, _extends({\n  id: \"button-tooltip-2\"\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }\n}), props.collected == true && __jsx(\"div\", {\n  style: {\n    color: \"red\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 7\n  }\n}, \"Collected by \", props.collector), props.name);\n\nexport default class BlitzGrid extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collected: false\n    };\n  }\n\n  onClick() {\n    let data = {\n      pid: this.props.pid,\n      rid: this.props.rid,\n      collectable_name: this.props.name\n    };\n    let options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    };\n    fetch(BACKEND_IP + '/blitz/collect', options).then(res => res.json()).then(data => {\n      this.setState({\n        room: data\n      });\n      if (data.success) this.setState({\n        collected: true\n      });\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, __jsx(OverlayTrigger, {\n      placement: \"top\",\n      overlay: renderTooltip(this.props),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, !this.props.collected && __jsx(\"div\", {\n      class: \"butt\",\n      onClick: () => this.onClick(),\n      style: {\n        backgroundImage: 'url(\"' + this.props.type + '/' + this.props.name + '.png' + '\")'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }), this.props.collected && __jsx(\"div\", {\n      class: \"butt\",\n      onClick: () => this.onClick(),\n      style: {\n        backgroundColor: \"red\",\n        backgroundImage: 'url(\"' + this.props.type + '/' + this.props.name + '.png' + '\")'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }))), __jsx(\"style\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, `\n          .butt {\n            \n            padding-top:100%;\n            cursor:pointer;\n            width:100%\n            -webkit-background-size: cover;\n            -moz-background-size: cover;\n            -o-background-size: cover;\n            background-size: cover;\n            background-blend-mode: multiply;\n         }\n         \n         .butt:hover {\n            background-color: grey;\n            color:white;\n         }\n\n\n\n          `));\n  }\n\n}","map":{"version":3,"sources":["/home/stephen/Desktop/BFBB_Client/frontend-nextjs/components/BlitzGrid.js"],"names":["Tooltip","OverlayTrigger","BACKEND_IP","renderTooltip","props","collected","color","collector","name","BlitzGrid","React","Component","constructor","state","onClick","data","pid","rid","collectable_name","options","method","headers","body","JSON","stringify","fetch","then","res","json","setState","room","success","render","backgroundImage","type","backgroundColor"],"mappings":"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","sourcesContent":["import { Tooltip, OverlayTrigger } from 'react-bootstrap';\n\nconst BACKEND_IP = \"http://localhost:3001\";\n\nconst renderTooltip = (props) => (\n  <Tooltip id=\"button-tooltip-2\" {...props}>\n    {props.collected==true &&\n      <div style={{color:\"red\"}}>Collected by {props.collector}</div>\n    }\n    {props.name}\n  </Tooltip>\n);\n\nexport default class BlitzGrid extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      collected: false,\n    }\n  }\n\n  onClick() {\n\n    let data = { pid: this.props.pid, rid: this.props.rid, collectable_name: this.props.name }\n\n    let options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    }\n\n\n    fetch(BACKEND_IP+'/blitz/collect', options)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ room: data })\n        if (data.success)\n          this.setState({collected:true});\n      });\n\n  }\n\n  render() {\n    return (\n      <div>\n        <OverlayTrigger\n          placement=\"top\"\n          \n          overlay={renderTooltip(this.props)}>\n          <div>\n            {!this.props.collected &&\n              <div class=\"butt\" onClick={() => this.onClick()} style={{ backgroundImage: ('url(\"' + this.props.type + '/' + this.props.name + '.png' + '\")') }} />\n            }\n\n            {this.props.collected &&\n              <div class=\"butt\" onClick={() => this.onClick()} style={{ backgroundColor: \"red\", backgroundImage: ('url(\"' + this.props.type + '/' + this.props.name + '.png' + '\")') }} />\n            }\n          </div>\n\n\n\n        </OverlayTrigger>\n        <style>{`\n          .butt {\n            \n            padding-top:100%;\n            cursor:pointer;\n            width:100%\n            -webkit-background-size: cover;\n            -moz-background-size: cover;\n            -o-background-size: cover;\n            background-size: cover;\n            background-blend-mode: multiply;\n         }\n         \n         .butt:hover {\n            background-color: grey;\n            color:white;\n         }\n\n\n\n          `}</style>\n      </div>\n    )\n  }\n\n}"]},"metadata":{},"sourceType":"module"}