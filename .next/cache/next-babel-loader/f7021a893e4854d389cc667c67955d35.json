{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Button } from 'react-bootstrap';\nimport React from 'react';\n\nvar VideoThumbnail = /*#__PURE__*/function (_React$Component) {\n  _inherits(VideoThumbnail, _React$Component);\n\n  var _super = _createSuper(VideoThumbnail);\n\n  function VideoThumbnail(props) {\n    _classCallCheck(this, VideoThumbnail);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(VideoThumbnail, [{\n    key: \"selectVideo\",\n    value: function selectVideo() {\n      this.props.changeVideo(\"https://www.youtube.com/watch?v=\" + this.props.videoId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var thumbnail = this.props.thumbnail;\n      return __jsx(\"input\", {\n        type: \"button\",\n        onClick: function onClick() {\n          return _this.selectVideo();\n        },\n        style: {\n          background: \"url('\" + thumbnail + \"') center no-repeat\",\n          height: 180,\n          width: 320,\n          border: 0,\n          display: \"inline-block\"\n        }\n      });\n    }\n  }]);\n\n  return VideoThumbnail;\n}(React.Component);\n\nexport default VideoThumbnail; //{this.props.title} {this.props.videoId}","map":null,"metadata":{},"sourceType":"module"}