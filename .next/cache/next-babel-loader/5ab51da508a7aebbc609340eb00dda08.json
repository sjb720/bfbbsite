{"ast":null,"code":"var _jsxFileName = \"/home/stephen/Desktop/BFBB_Client/frontend-nextjs/pages/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport axios from 'axios';\nimport BattleShipGrid from '../components/BattleShipGrid.js';\nimport { Button, InputGroup, FormControl, Container } from 'react-bootstrap';\nexport default class Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      board: {\n        tasks: []\n      },\n      room: null,\n      player_id: \"\",\n      rid_input: \"\",\n      display_name_input: \"\"\n    };\n  }\n\n  componentDidMount() {\n    //Give the player an id\n    this.setState({\n      player_id: [...Array(16)].map(i => (~~(Math.random() * 36)).toString(36)).join('')\n    });\n  }\n\n  createRoomAndJoin() {\n    let data = {\n      pid: this.state.player_id\n    };\n    let options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    };\n    fetch('http://localhost:3001/mainThread/createroom', options).then(res => res.json()).then(data => {\n      this.setState({\n        room: data\n      });\n    });\n  }\n\n  joinRoom(rid) {\n    let data = {\n      pid: this.state.player_id,\n      rid: rid\n    };\n    let options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    };\n    fetch('http://localhost:3001/mainThread/joinroom', options).then(res => res.json()).then(data => {\n      this.setState({\n        room: data\n      });\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, this.state.room == null && __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, \"Welcome to BfBB Battleship!\"), __jsx(InputGroup, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, __jsx(InputGroup.Prepend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, __jsx(InputGroup.Text, {\n      id: \"basic-addon1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, \"Display name\")), __jsx(FormControl, {\n      placeholder: \"ie: John\",\n      \"aria-label\": \"ie: John\",\n      \"aria-describedby\": \"basic-addon1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    })), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }), __jsx(Button, {\n      variant: \"outline-primary\",\n      style: {\n        width: \"100%\"\n      },\n      onClick: () => this.createRoomAndJoin(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, \"Create Room\"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 22\n      }\n    }), __jsx(InputGroup, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, __jsx(FormControl, {\n      onChange: e => this.setState({\n        rid_input: e.target.value\n      }),\n      defaultValue: this.state.rid_input,\n      placeholder: \"Room ID\",\n      \"aria-label\": \"Recipient's username\",\n      \"aria-describedby\": \"basic-addon2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }), __jsx(InputGroup.Append, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }, __jsx(Button, {\n      variant: \"outline-primary\",\n      onClick: () => this.joinRoom(this.state.rid),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, \"Join Room\")))), this.state.room != null && __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, \"RoomID: \", this.state.room.id, __jsx(\"div\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: \"1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr\",\n        paddingBottom: \"100%\",\n        width: 800,\n        justifyContent: 'space-between'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, this.state.room.player1.board.tasks.map(task => __jsx(BattleShipGrid, {\n      name: task.name,\n      type: task.type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/home/stephen/Desktop/BFBB_Client/frontend-nextjs/pages/index.js"],"names":["React","axios","BattleShipGrid","Button","InputGroup","FormControl","Container","Index","Component","constructor","props","state","board","tasks","room","player_id","rid_input","display_name_input","componentDidMount","setState","Array","map","i","Math","random","toString","join","createRoomAndJoin","data","pid","options","method","headers","body","JSON","stringify","fetch","then","res","json","joinRoom","rid","render","width","e","target","value","id","display","gridTemplateColumns","paddingBottom","justifyContent","player1","task","name","type"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport BattleShipGrid from '../components/BattleShipGrid.js'\nimport { Button, InputGroup, FormControl,Container } from 'react-bootstrap'\n\nexport default class Index extends React.Component {\n\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      board: { tasks: [] },\n      room: null,\n      player_id: \"\",\n      rid_input: \"\",\n      display_name_input: \"\",\n    }\n  }\n\n  componentDidMount() {\n    //Give the player an id\n    this.setState({ player_id: [...Array(16)].map(i => (~~(Math.random() * 36)).toString(36)).join('') });\n\n  }\n\n  createRoomAndJoin() {\n\n    let data = {pid:this.state.player_id}\n\n    let options= {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n      }\n\n\n    fetch('http://localhost:3001/mainThread/createroom',options)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ room: data })\n      });\n  }\n\n  joinRoom(rid){\n    let data = {pid:this.state.player_id,rid:rid}\n\n    let options= {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n      }\n\n\n    fetch('http://localhost:3001/mainThread/joinroom',options)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ room: data })\n      });\n  }\n\n\n  render() {\n    return (\n      <div>\n\n        {this.state.room == null &&\n          <Container>\n            <h1>\n              Welcome to BfBB Battleship!\n            </h1>\n            <InputGroup className=\"mb-3\">\n              <InputGroup.Prepend>\n                <InputGroup.Text id=\"basic-addon1\">Display name</InputGroup.Text>\n              </InputGroup.Prepend>\n              <FormControl \n                placeholder=\"ie: John\"\n                aria-label=\"ie: John\"\n                aria-describedby=\"basic-addon1\"\n              />\n            </InputGroup>\n            <br></br>\n            <Button variant=\"outline-primary\" style={{width:\"100%\"}} onClick={() => this.createRoomAndJoin()}>Create Room</Button>\n            <br></br><br></br>\n            <InputGroup className=\"mb-3\">\n            \n              <FormControl onChange={e => this.setState({rid_input: e.target.value})} defaultValue={this.state.rid_input}\n                placeholder=\"Room ID\"\n                aria-label=\"Recipient's username\"\n                aria-describedby=\"basic-addon2\"\n              />\n              <InputGroup.Append>\n                <Button variant=\"outline-primary\" onClick={()=>this.joinRoom(this.state.rid)}>Join Room</Button>\n              </InputGroup.Append>\n            </InputGroup>\n          </Container>}\n        {this.state.room != null &&\n          <div>\n            RoomID: {this.state.room.id}\n            <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr\", paddingBottom: \"100%\", width: 800, justifyContent: 'space-between' }}>\n              {this.state.room.player1.board.tasks.map(task =>\n                <BattleShipGrid name={task.name} type={task.type} />\n              )}\n            </div>\n          </div>}\n\n\n\n\n      </div>\n\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}