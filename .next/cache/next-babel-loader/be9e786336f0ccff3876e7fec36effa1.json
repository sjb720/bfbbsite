{"ast":null,"code":"var _jsxFileName = \"/home/stephen/Desktop/BFBB_Client/frontend-nextjs/components/BlitzBoard.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Row, Col, Accordion, Card, Button } from 'react-bootstrap';\nimport BlitzGrid from '../components/BlitzGrid.js';\n\nconst BlitzBoard = props => __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }\n}, __jsx(Row, {\n  style: {\n    paddingLeft: 30,\n    paddingBottom: 10,\n    width: \"100%\",\n    textAlign: \"center\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }\n}, props.room.players.sort((a, b) => a.score - b.score).reverse().map(player => __jsx(Col, {\n  score: player.score,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 17\n  }\n}, __jsx(\"div\", {\n  style: {\n    borderRadius: 20,\n    backgroundColor: player.color + \"aa\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 21\n  }\n}, __jsx(\"div\", {\n  style: {\n    fontSize: 48,\n    lineHeight: 0.75,\n    paddingBottom: 15,\n    paddingTop: 12\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 25\n  }\n}, player.display_name, \": \", __jsx(\"b\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 129\n  }\n}, player.score)))))), __jsx(Row, {\n  style: {\n    paddingLeft: 30,\n    paddingBottom: 10,\n    width: \"100%\",\n    textAlign: \"center\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }\n}, __jsx(Col, {\n  xs: props.padding,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 13\n  }\n}, __jsx(Accordion, {\n  defaultActiveKey: \"0\",\n  style: {\n    color: \"black\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 17\n  }\n}, props.room.board.levels.map(level => __jsx(Card, {\n  bg: props.room.level_data[\"\" + level].collected == props.room.level_data[\"\" + level].count ? \"success\" : \"dark\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 25\n  }\n}, __jsx(Accordion.Toggle, {\n  as: Card.Header,\n  style: {\n    color: \"white\",\n    fontWeight: \"bold\"\n  },\n  eventKey: level,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 33\n  }\n}, level, \" \", props.room.level_data[\"\" + level].collected, \"/\", props.room.level_data[\"\" + level].count), __jsx(Accordion.Collapse, {\n  eventKey: level,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 29\n  }\n}, __jsx(Card.Body, {\n  style: {\n    padding: 0\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 33\n  }\n}, __jsx(\"div\", {\n  style: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat( auto-fill, minmax(6%, 1fr) )\",\n    width: \"100%\",\n    justifyContent: 'space-between'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 37\n  }\n}, props.room.board.tasks.map(task => {\n  if (task.level == level) return __jsx(BlitzGrid, {\n    rid: props.room.id,\n    pid: props.pid,\n    name: task.name,\n    type: task.type,\n    collected: task.collected,\n    collector: task.collector,\n    collect_function: props.collect_function,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 49\n    }\n  });\n})))))))), __jsx(Col, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 13\n  }\n}, __jsx(\"div\", {\n  style: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat( auto-fill, minmax(60px, 1fr) )\",\n    width: \"100%\",\n    justifyContent: 'space-between'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 17\n  }\n}, props.room.board.tasks.map(task => __jsx(BlitzGrid, {\n  rid: props.room.id,\n  pid: props.pid,\n  name: task.name,\n  type: task.type,\n  collected: task.collected,\n  collector: task.collector,\n  collect_function: props.collect_function,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 25\n  }\n}))))));\n\nexport default BlitzBoard;","map":{"version":3,"sources":["/home/stephen/Desktop/BFBB_Client/frontend-nextjs/components/BlitzBoard.js"],"names":["Row","Col","Accordion","Card","Button","BlitzGrid","BlitzBoard","props","paddingLeft","paddingBottom","width","textAlign","room","players","sort","a","b","score","reverse","map","player","borderRadius","backgroundColor","color","fontSize","lineHeight","paddingTop","display_name","padding","board","levels","level","level_data","collected","count","Header","fontWeight","display","gridTemplateColumns","justifyContent","tasks","task","id","pid","name","type","collector","collect_function"],"mappings":"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","sourcesContent":["import { Row, Col, Accordion, Card, Button } from 'react-bootstrap';\nimport BlitzGrid from '../components/BlitzGrid.js'\n\n\n\nconst BlitzBoard = (props) => (\n    <div>\n        <Row style={{ paddingLeft: 30, paddingBottom: 10, width: \"100%\", textAlign: \"center\" }}>\n            {props.room.players.sort((a, b) => a.score - b.score).reverse().map(player =>\n                <Col score={player.score}>\n                    <div style={{ borderRadius: 20, backgroundColor: player.color + \"aa\" }}>\n                        <div style={{ fontSize: 48, lineHeight: 0.75, paddingBottom: 15,paddingTop:12 }}>{player.display_name}: <b>{player.score}</b></div>\n\n                    </div>\n\n                </Col>\n            )}\n        </Row>\n        <Row style={{ paddingLeft: 30, paddingBottom: 10, width: \"100%\", textAlign: \"center\" }}>\n            <Col xs={props.padding}>\n                <Accordion defaultActiveKey=\"0\" style={{ color: \"black\" }}>\n                    {props.room.board.levels.map(level =>\n                        <Card bg={props.room.level_data[\"\"+level].collected==props.room.level_data[\"\"+level].count ? \"success\" : \"dark\"}>\n                                <Accordion.Toggle as={Card.Header} style={{color:\"white\",fontWeight:\"bold\"}}  eventKey={level}>\n                                    {level} {props.room.level_data[\"\"+level].collected}/{props.room.level_data[\"\"+level].count}\n                                </Accordion.Toggle>\n                            <Accordion.Collapse eventKey={level}>\n                                <Card.Body style={{padding:0}}>\n                                    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat( auto-fill, minmax(6%, 1fr) )\", width: \"100%\", justifyContent: 'space-between' }}>\n                                        {props.room.board.tasks.map(task => {\n                                            if (task.level == level) return (\n                                                <BlitzGrid rid={props.room.id} pid={props.pid} name={task.name} type={task.type} collected={task.collected} collector={task.collector} collect_function={props.collect_function} />)\n                                        }\n                                        )}\n                                    </div>\n                                </Card.Body>\n                            </Accordion.Collapse>\n                        </Card>\n                    )}\n\n                </Accordion>\n\n            </Col>\n            <Col>\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat( auto-fill, minmax(60px, 1fr) )\", width: \"100%\", justifyContent: 'space-between' }}>\n                    {props.room.board.tasks.map(task =>\n                        <BlitzGrid rid={props.room.id} pid={props.pid} name={task.name} type={task.type} collected={task.collected} collector={task.collector} collect_function={props.collect_function} />\n                    )}\n                </div>\n            </Col>\n        </Row>\n\n\n    </div>\n\n\n);\n\nexport default BlitzBoard;\n"]},"metadata":{},"sourceType":"module"}