{"ast":null,"code":"var _jsxFileName = \"/home/stephen/Desktop/BFBB_Client/bfbb-site/components/AddArea.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport fetch from 'node-fetch';\nimport { DropdownButton, Dropdown, Button, Container, Image, Badge, Card, Accordion, FormControl } from 'react-bootstrap';\nimport BACKEND_URL from './backendurl.js';\nimport ScrollAnimation from 'react-animate-on-scroll';\nexport default class AddArea extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      levels: [],\n      level: \"\",\n      name: \"\",\n      internal_name: \"\",\n      sock_count: null,\n      spatula_count: null\n    };\n  }\n\n  componentDidMount() {\n    this.getLevels();\n  }\n\n  getLevels() {\n    {\n      fetch(BACKEND_URL + 'bfbb-site/levels').then(res => res.json()).then(data => {\n        if (data.success == true) {\n          this.setState({\n            levels: data.info,\n            level: data.info[0].name\n          });\n        }\n      });\n    }\n  }\n\n  addArea() {\n    let data = {\n      username: window.sessionStorage.getItem(\"username\"),\n      token: window.sessionStorage.getItem(\"token\"),\n      name: this.state.name,\n      level: this.state.level,\n      internal_name: this.state.internal_name,\n      sock_count: this.state.sock_count,\n      spatula_count: this.state.spatula_count\n    };\n    let options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    };\n    fetch(BACKEND_URL + 'bfbb-site/areas/post', options).then(res => res.json()).then(data => {\n      if (data.success) {\n        location.reload();\n      } else {\n        console.log(data.error);\n      }\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      style: {\n        backgroundColor: \"#000000\",\n        padding: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, \"Add an area\", __jsx(Dropdown, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, __jsx(Dropdown.Toggle, {\n      variant: \"primary\",\n      id: \"dropdown-basic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, this.state.level), __jsx(Dropdown.Menu, {\n      style: {\n        position: \"relative\",\n        zIndex: 10000\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, this.state.levels.map(level => __jsx(Dropdown.Item, {\n      onClick: () => this.setState({\n        level: level.name\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }, level.name)))), __jsx(FormControl, {\n      onChange: e => this.setState({\n        name: e.target.value\n      }),\n      value: this.state.name,\n      placeholder: \"Name\",\n      \"aria-label\": \"Name\",\n      \"aria-describedby\": \"basic-addon1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }), __jsx(FormControl, {\n      onChange: e => this.setState({\n        internal_name: e.target.value.toUpperCase()\n      }),\n      value: this.state.internal_name,\n      placeholder: \"Internal Name (ie; HB01, HB02, JF01, etc)\",\n      \"aria-label\": \"Name\",\n      \"aria-describedby\": \"basic-addon1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }), __jsx(FormControl, {\n      onChange: e => this.setState({\n        sock_count: isNaN(parseInt(e.target.value)) ? 0 : parseInt(e.target.value)\n      }),\n      value: this.state.sock_count,\n      placeholder: \"Sock count\",\n      \"aria-label\": \"Sock count\",\n      \"aria-describedby\": \"basic-addon1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }), __jsx(FormControl, {\n      onChange: e => this.setState({\n        spatula_count: isNaN(parseInt(e.target.value)) ? 0 : parseInt(e.target.value)\n      }),\n      value: this.state.spatula_count,\n      placeholder: \"Spatula Count\",\n      \"aria-label\": \"Spatula Count\",\n      \"aria-describedby\": \"basic-addon1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }), __jsx(Button, {\n      onClick: () => this.addArea(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, \"Add area\"));\n  }\n\n}","map":{"version":3,"sources":["/home/stephen/Desktop/BFBB_Client/bfbb-site/components/AddArea.js"],"names":["useRouter","fetch","DropdownButton","Dropdown","Button","Container","Image","Badge","Card","Accordion","FormControl","BACKEND_URL","ScrollAnimation","AddArea","React","Component","constructor","props","state","levels","level","name","internal_name","sock_count","spatula_count","componentDidMount","getLevels","then","res","json","data","success","setState","info","addArea","username","window","sessionStorage","getItem","token","options","method","headers","body","JSON","stringify","location","reload","console","log","error","render","backgroundColor","padding","position","zIndex","map","e","target","value","toUpperCase","isNaN","parseInt"],"mappings":"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","sourcesContent":["import { useRouter } from 'next/router'\nimport fetch from 'node-fetch'\nimport { DropdownButton, Dropdown, Button, Container, Image, Badge, Card, Accordion, FormControl } from 'react-bootstrap'\nimport BACKEND_URL from './backendurl.js'\nimport ScrollAnimation from 'react-animate-on-scroll';\n\nexport default class AddArea extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            levels: [],\n            level: \"\",\n            name: \"\",\n            internal_name: \"\",\n            sock_count: null,\n            spatula_count: null\n        }\n    }\n\n    componentDidMount() {\n        this.getLevels();\n    }\n\n    getLevels() {\n        {\n\n            fetch(BACKEND_URL + 'bfbb-site/levels')\n                .then(res => res.json())\n\n                .then(data => {\n                    if (data.success == true) {\n                        this.setState({ levels: data.info, level: data.info[0].name })\n                    }\n                })\n\n\n        }\n    }\n\n    addArea() {\n        let data = { \n            username:window.sessionStorage.getItem(\"username\"),\n            token:window.sessionStorage.getItem(\"token\"),\n            name:this.state.name,\n            level:this.state.level,\n            internal_name:this.state.internal_name, \n            sock_count: this.state.sock_count,\n            spatula_count: this.state.spatula_count\n        }\n\n        let options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        }\n\n\n        fetch(BACKEND_URL + 'bfbb-site/areas/post', options)\n            .then(res => res.json())\n            .then(data => {\n                if (data.success) {\n                    location.reload();\n                } else {\n                    console.log(data.error)\n                }\n            });\n    }\n\n\n    render() {\n        return (\n        <div style={{backgroundColor:\"#000000\",padding:20}}>\n            Add an area\n            <Dropdown >\n                <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\">\n                    {this.state.level}\n                </Dropdown.Toggle>\n                <Dropdown.Menu style={{ position: \"relative\", zIndex: 10000 }}>\n                    {this.state.levels.map(level =>\n                        <Dropdown.Item onClick={() => this.setState({ level: level.name })}>{level.name}</Dropdown.Item>\n                    )}\n                </Dropdown.Menu>\n            </Dropdown>\n\n            <FormControl\n                onChange={e => this.setState({ name: e.target.value })}\n                value={this.state.name}\n                placeholder=\"Name\"\n                aria-label=\"Name\"\n                aria-describedby=\"basic-addon1\"\n            />\n            <FormControl\n                onChange={e => this.setState({ internal_name: e.target.value.toUpperCase() })}\n                value={this.state.internal_name}\n                placeholder=\"Internal Name (ie; HB01, HB02, JF01, etc)\"\n                aria-label=\"Name\"\n                aria-describedby=\"basic-addon1\"\n            />\n            <FormControl\n                onChange={e => this.setState({ sock_count: isNaN(parseInt(e.target.value)) ? 0 : parseInt(e.target.value) })}\n                value={this.state.sock_count}\n                placeholder=\"Sock count\"\n                aria-label=\"Sock count\"\n                aria-describedby=\"basic-addon1\"\n            />\n            <FormControl\n                onChange={e => this.setState({ spatula_count: isNaN(parseInt(e.target.value)) ? 0 : parseInt(e.target.value) })}\n                value={this.state.spatula_count}\n                placeholder=\"Spatula Count\"\n                aria-label=\"Spatula Count\"\n                aria-describedby=\"basic-addon1\"\n            />\n            <Button onClick={()=>this.addArea()}>\n                Add area\n            </Button>\n        </div>);\n    }\n}"]},"metadata":{},"sourceType":"module"}