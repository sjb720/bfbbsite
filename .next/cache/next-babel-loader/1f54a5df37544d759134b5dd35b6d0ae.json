{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Layout from '../components/PageLayout';\nimport { CardGroup, Card, Image, Button, Carousel, Container, Row, Col } from 'react-bootstrap';\nimport { TwitchEmbed, TwitchChat, TwitchClip, TwitchPlayer } from 'react-twitch-embed';\nimport { TwitterTimelineEmbed, TwitterShareButton, TwitterFollowButton, TwitterHashtagButton, TwitterMentionButton, TwitterTweetEmbed, TwitterMomentShare, TwitterDMButton, TwitterVideoEmbed, TwitterOnAirButton } from 'react-twitter-embed';\nimport ScrollAnimation from 'react-animate-on-scroll';\nimport React from 'react';\nimport ReactPlayer from 'react-player';\nimport axios from 'axios';\nimport youtube from '../components/Youtube';\nimport VideoThumbnail from '../components/VideoThumbnail';\n\nvar Index = /*#__PURE__*/function (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  var _super = _createSuper(Index);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"playlistSearch\", '');\n\n    _defineProperty(_assertThisInitialized(_this), \"topVideos\", 'https://www.googleapis.com/youtube/v3/search?part=snippet&type=video&order=date&channelId=UC9Y0uUKJ5y78QbhHbntAyFQ&key=AIzaSyB_Viw1L-bRdhRKizRpIyEvud4RWU2zsWs');\n\n    _defineProperty(_assertThisInitialized(_this), \"changeVideo\", function (newUrl) {\n      _this.setState({\n        url: newUrl,\n        playing: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(_this.topVideos);\n\n            case 2:\n              response = _context.sent;\n\n              _this.setState({\n                videos: response.data.items\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleEnded\", function () {\n      _this.load(\"https://twitch.tv/shift\");\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"load\", function (url) {\n      _this.setState({\n        url: url\n      });\n    });\n\n    _this.state = {\n      url: \"https://player.twitch.tv/shift\",\n      playing: true,\n      videos: []\n    };\n    _this.changeVideo = _this.changeVideo.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.handleSubmit();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, null, __jsx(\"title\", null, \"Shift: Live 8pm EST!\"), __jsx(\"div\", {\n        style: {\n          paddingRight: 15,\n          paddingLeft: 15\n        }\n      }, __jsx(\"div\", {\n        \"class\": \"row\",\n        style: {\n          height: 600\n        }\n      }, __jsx(\"div\", {\n        \"class\": \"column\",\n        style: {\n          width: \"15%\"\n        }\n      }, __jsx(ScrollAnimation, {\n        animateIn: \"fadeInLeft\",\n        animateOnce: \"true\",\n        offset: \"50\",\n        delay: \"500\"\n      }, __jsx(TwitterTimelineEmbed, {\n        sourceType: \"profile\",\n        screenName: \"shiftposting\",\n        theme: \"dark\",\n        options: {\n          height: 600\n        }\n      }))), __jsx(\"div\", {\n        \"class\": \"column\",\n        style: {\n          width: \"65%\"\n        }\n      }, __jsx(ScrollAnimation, {\n        animateIn: \"fadeInDown\",\n        animateOnce: \"true\",\n        offset: \"50\",\n        delay: \"1000\"\n      }, __jsx(\"div\", {\n        className: \"player-wrapper\"\n      }, __jsx(ReactPlayer, {\n        className: \"react-player\",\n        url: this.state.url,\n        width: \"100%\",\n        height: \"600px\",\n        controls: \"true\",\n        playing: this.state.playing,\n        onEnded: this.handleEnded\n      })))), __jsx(\"div\", {\n        \"class\": \"column\",\n        style: {\n          width: \"20%\"\n        }\n      }, __jsx(ScrollAnimation, {\n        animateIn: \"fadeInRight\",\n        animateOnce: \"true\",\n        offset: \"50\",\n        delay: \"500\"\n      }, __jsx(TwitchChat, {\n        channel: \"shift\",\n        width: \"100%\",\n        height: \"600px\",\n        theme: \"dark\",\n        parent: ['localhost'],\n        style: {\n          border: 0\n        }\n      }))))), __jsx(\"div\", {\n        style: {\n          width: '100%',\n          paddingLeft: 40,\n          paddingRight: 40,\n          paddingTop: 20\n        }\n      }, __jsx(\"h3\", {\n        style: {\n          color: \"white\"\n        }\n      }, \"Catch the latest:\"), __jsx(Row, {\n        style: {\n          width: '100%'\n        }\n      }, this.state.videos.map(function (vid) {\n        return __jsx(Col, {\n          style: {\n            padding: 0,\n            textAlign: 'center'\n          }\n        }, __jsx(VideoThumbnail, {\n          videoId: vid.id.videoId,\n          title: vid.snippet.title,\n          thumbnail: vid.snippet.thumbnails.medium.url,\n          changeVideo: _this2.changeVideo\n        }));\n      }))), __jsx(\"style\", null, \"\\n        .column {\\n          float: left;\\n          height: 100%;\\n        }\\n\\n      \"));\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n/*\n<TwitchPlayer\n              channel=\"shift\"\n              id=\"twitch-player\"\n              theme=\"dark\"\n              onVideoPause={() => console.log(':(')}\n              width='100%'\n              height='700px'\n            />\n\n*/\n\n\nexport { Index as default };","map":null,"metadata":{},"sourceType":"module"}