{"version":3,"file":"index.es.js","sources":["../src/constants.js","../src/utils.js","../src/components/TwitchEmbed.js","../src/components/TwitchChat.js","../src/components/TwitchClip.js","../src/components/TwitchPlayer.js"],"sourcesContent":["const TWITCH_EMBED_URL = 'https://embed.twitch.tv/embed/v1.js';\nconst TWITCH_CHAT_URL = 'https://www.twitch.tv/embed';\nconst TWITCH_CLIP_URL = 'https://clips.twitch.tv/embed';\nconst TWITCH_PLAYER_URL = 'https://player.twitch.tv/js/embed/v1.js';\n\nconst CHAT_DEFAULT_HEIGHT = 500;\nconst CHAT_DEFAULT_WIDTH = 350;\nconst MEDIA_DEFAULT_HEIGHT = 480;\nconst MEDIA_DEFAULT_WIDTH = 940;\n\nexport {\n  TWITCH_EMBED_URL,\n  TWITCH_CHAT_URL,\n  TWITCH_CLIP_URL,\n  TWITCH_PLAYER_URL,\n  CHAT_DEFAULT_HEIGHT,\n  CHAT_DEFAULT_WIDTH,\n  MEDIA_DEFAULT_HEIGHT,\n  MEDIA_DEFAULT_WIDTH\n};\n","const parseParentQuery = (parent) => {\n  return `&parent=${parent.join('&parent=')}`;\n};\n\nconst getUnknownProps = (props, propTypes) => {\n  return Object.keys(props).reduce((unknown, prop) => {\n    if (propTypes.hasOwnProperty(prop)) {\n      return unknown;\n    }\n\n    unknown[prop] = props[prop];\n    return unknown;\n  }, {});\n};\n\nexport {\n  parseParentQuery,\n  getUnknownProps\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { TWITCH_EMBED_URL, MEDIA_DEFAULT_WIDTH, MEDIA_DEFAULT_HEIGHT } from '../constants';\nimport { getUnknownProps } from '../utils';\n\nlet scriptElement = null;\n\nconst loadScript = () => {\n  scriptElement = document.createElement('script');\n  scriptElement.setAttribute('type', 'text/javascript');\n  scriptElement.setAttribute('src', TWITCH_EMBED_URL);\n  document.body.appendChild(scriptElement);\n};\n\nconst propTypes = {\n  id: PropTypes.string,\n  allowFullscreen: PropTypes.bool,\n  channel: PropTypes.string.isRequired,\n  fontSize: PropTypes.oneOf(['small', 'medium', 'large']),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  withChat: PropTypes.bool,\n  theme: PropTypes.oneOf(['light', 'dark']),\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onAuthenticate: PropTypes.func,\n  onVideoPlay: PropTypes.func,\n  onVideoPause: PropTypes.func,\n  onVideoReady: PropTypes.func,\n  autoplay: PropTypes.bool,\n  muted: PropTypes.bool,\n  parent: PropTypes.arrayOf(PropTypes.string)\n};\n\nconst defaultProps = {\n  id: 'twitch-embed',\n  allowFullscreen: true,\n  fontSize: 'small',\n  height: MEDIA_DEFAULT_HEIGHT,\n  withChat: true,\n  theme: 'light',\n  width: MEDIA_DEFAULT_WIDTH,\n  onAuthenticate: () => null,\n  onVideoPlay: () => null,\n  onVideoPause: () => null,\n  onVideoReady: () => null,\n  autoplay: true,\n  muted: false,\n  parent: []\n};\n\nclass TwitchEmbed extends Component {\n  componentDidMount() {\n    this._validateProps();\n\n    if (window.Twitch && window.Twitch.Embed) {\n      return this._createEmbed();\n    }\n\n    if (!scriptElement) {\n      loadScript();\n    }\n\n    scriptElement.addEventListener('load', () => {\n      this._createEmbed();\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    this._validateProps();\n\n    if (prevProps.withChat) {\n      this.embed = null;\n      this.player = null;\n      document.getElementById(prevProps.id).innerHTML = '';\n      return this._createEmbed();\n    }\n\n    const updatedPropsExceptChannel = Object.keys(prevProps).reduce((updated, prop) => {\n      if (prop === 'channel') {\n        return updated;\n      }\n\n      if (prevProps[prop] !== this.props[prop]) {\n        updated.push(prop);\n      }\n\n      return updated;\n    }, []);\n\n    if (updatedPropsExceptChannel.length > 0) {\n      this.embed = null;\n      this.player = null;\n      document.getElementById(prevProps.id).innerHTML = '';\n      return this._createEmbed();\n    }\n\n    if (prevProps.channel !== this.props.channel) {\n      this.player.setChannel(this.props.channel);\n    }\n  }\n\n  _createEmbed() {\n    this.embed = new window.Twitch.Embed(this.props.id, {\n      allowfullscreen: this.props.allowFullscreen,\n      channel: this.props.channel,\n      'font-size': this.props.fontSize,\n      height: '100%',\n      layout: this.props.withChat ? 'video-with-chat' : 'video',\n      theme: this.props.theme,\n      width: '100%',\n      parent: this.props.parent\n    });\n\n    this._addEventListeners();\n  }\n\n  _addEventListeners() {\n    this.embed.addEventListener(window.Twitch.Embed.AUTHENTICATE, this.props.onAuthenticate);\n    this.embed.addEventListener(window.Twitch.Embed.VIDEO_PLAY, this.props.onVideoPlay);\n    this.embed.addEventListener(window.Twitch.Embed.VIDEO_PAUSE, this.props.onVideoPause);\n    this.embed.addEventListener(window.Twitch.Embed.VIDEO_READY, () => {\n      const { autoplay, muted } = this.props;\n      this.player = this.embed.getPlayer();\n\n      if (muted) {\n        this.player.setVolume(0);\n      }\n\n      if (!autoplay) {\n        this.player.pause();\n      }\n\n      this.props.onVideoReady(this.player);\n    });\n  }\n\n  _validateProps() {\n    if (!this.props.channel) {\n      throw new Error('A channel prop must be supplied to TwitchEmbed!');\n    }\n  }\n\n  render() {\n    const unknownProps = getUnknownProps(this.props, propTypes);\n\n    return (\n      <div style={{ width: this.props.width, height: this.props.height }} id={this.props.id} {...unknownProps} />\n    );\n  }\n}\n\nTwitchEmbed.propTypes = propTypes;\nTwitchEmbed.defaultProps = defaultProps;\n\nexport default TwitchEmbed;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { CHAT_DEFAULT_HEIGHT, CHAT_DEFAULT_WIDTH, TWITCH_CHAT_URL } from '../constants';\nimport { getUnknownProps, parseParentQuery } from '../utils';\n\nconst propTypes = {\n  channel: PropTypes.string.isRequired,\n  id: PropTypes.string,\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  theme: PropTypes.oneOf(['light', 'dark']),\n  parent: PropTypes.arrayOf(PropTypes.string).isRequired,\n  migration: PropTypes.bool\n};\n\nconst defaultProps = {\n  id: 'twitch-chat-embed',\n  height: CHAT_DEFAULT_HEIGHT,\n  width: CHAT_DEFAULT_WIDTH,\n  theme: 'light',\n  migration: true\n};\n\nclass TwitchChat extends Component {\n  componentDidMount() {\n    this._validateProps();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    this._validateProps();\n  }\n\n  _validateProps() {\n    if (!this.props.channel) {\n      throw new Error('A channel prop must be supplied to TwitchChat!');\n    }\n\n    if (!this.props.parent || this.props.parent.length < 1) {\n      throw new Error('A parent prop must be supplied to TwitchChat containing the URLs that embed Twitch!');\n    }\n  }\n\n  _createEmbedURL() {\n    const { channel, theme, parent, migration } = this.props;\n\n    const themeQuery = theme === 'dark' ? '?darkpopout' : '';\n    const migrationFirstChar = theme !== 'dark' ? '?' : '&';\n    return `${TWITCH_CHAT_URL}/${channel}/chat${themeQuery}${migrationFirstChar}migration=${migration.toString()}${parseParentQuery(parent)}`;\n  }\n\n  render() {\n    const { height, id, width } = this.props;\n    const unknownProps = getUnknownProps(this.props, propTypes);\n\n    return (\n      <iframe\n        title={`Twitch Chat - ${id}`}\n        id={id}\n        src={this._createEmbedURL()}\n        height={height}\n        width={width}\n        {...unknownProps}\n      />\n    );\n  }\n}\n\nTwitchChat.propTypes = propTypes;\nTwitchChat.defaultProps = defaultProps;\n\nexport default TwitchChat;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { MEDIA_DEFAULT_HEIGHT, MEDIA_DEFAULT_WIDTH, TWITCH_CLIP_URL } from '../constants';\nimport { getUnknownProps, parseParentQuery } from '../utils';\n\nconst propTypes = {\n  clip: PropTypes.string.isRequired,\n  id: PropTypes.string,\n  autoplay: PropTypes.bool,\n  muted: PropTypes.bool,\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  allowFullscreen: PropTypes.bool,\n  parent: PropTypes.arrayOf(PropTypes.string).isRequired,\n  migration: PropTypes.bool\n};\n\nconst defaultProps = {\n  id: 'twitch-clip-embed',\n  autoplay: true,\n  muted: false,\n  height: MEDIA_DEFAULT_HEIGHT,\n  width: MEDIA_DEFAULT_WIDTH,\n  allowFullscreen: true,\n  migration: true\n};\n\nclass TwitchClip extends Component {\n  componentDidMount() {\n    this._validateProps();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    this._validateProps();\n  }\n\n  _validateProps() {\n    if (!this.props.clip) {\n      throw new Error('A clip prop must be supplied to TwitchClip!');\n    }\n\n    if (!this.props.parent || this.props.parent.length < 1) {\n      throw new Error('A parent prop must be supplied to TwitchClip containing the URLs that embed Twitch!');\n    }\n  }\n\n  _createEmbedURL() {\n    const { clip, autoplay, muted, parent, migration } = this.props;\n\n    return `${TWITCH_CLIP_URL}?clip=${clip}&autoplay=${autoplay}&muted=${muted}&migration=${migration.toString()}${parseParentQuery(parent)}`;\n  }\n\n  render() {\n    const { id, height, width, allowFullscreen } = this.props;\n    const unknownProps = getUnknownProps(this.props, propTypes);\n\n    return (\n      <iframe\n        title={`Twitch Clip Embed - ${id}`}\n        src={this._createEmbedURL()}\n        id={id}\n        height={height}\n        width={width}\n        allowFullScreen={allowFullscreen}\n        {...unknownProps}\n      />\n    );\n  }\n}\n\nTwitchClip.propTypes = propTypes;\nTwitchClip.defaultProps = defaultProps;\n\nexport default TwitchClip;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { TWITCH_PLAYER_URL, MEDIA_DEFAULT_WIDTH, MEDIA_DEFAULT_HEIGHT } from '../constants';\nimport { getUnknownProps } from '../utils';\n\nconst mediaProps = ['channel', 'collection', 'video'];\nlet scriptElement = null;\n\nconst loadScript = () => {\n  scriptElement = document.createElement('script');\n  scriptElement.setAttribute('type', 'text/javascript');\n  scriptElement.setAttribute('src', TWITCH_PLAYER_URL);\n  document.body.appendChild(scriptElement);\n};\n\nconst propTypes = {\n  id: PropTypes.string,\n  channel: PropTypes.string,\n  collection: PropTypes.string,\n  video: PropTypes.string,\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  playsInline: PropTypes.bool,\n  autoplay: PropTypes.bool,\n  muted: PropTypes.bool,\n  allowFullscreen: PropTypes.bool,\n  time: PropTypes.string,\n  hideControls: PropTypes.bool,\n  onEnded: PropTypes.func,\n  onPause: PropTypes.func,\n  onPlay: PropTypes.func,\n  onPlaybackBlocked: PropTypes.func,\n  onPlaying: PropTypes.func,\n  onOffline: PropTypes.func,\n  onOnline: PropTypes.func,\n  onReady: PropTypes.func,\n  parent: PropTypes.arrayOf(PropTypes.string)\n};\n\nconst defaultProps = {\n  id: 'twitch-player-embed',\n  channel: null,\n  collection: null,\n  video: null,\n  height: MEDIA_DEFAULT_HEIGHT,\n  width: MEDIA_DEFAULT_WIDTH,\n  playsInline: true,\n  autoplay: true,\n  muted: false,\n  allowFullscreen: true,\n  time: '0h0m0s',\n  hideControls: false,\n  onEnded: () => null,\n  onPause: () => null,\n  onPlay: () => null,\n  onPlaybackBlocked: () => null,\n  onPlaying: () => null,\n  onOffline: () => null,\n  onOnline: () => null,\n  onReady: () => null,\n  parent: []\n};\n\nclass TwitchPlayer extends Component {\n  componentDidMount() {\n    this._validateProps();\n\n    if (window.Twitch && window.Twitch.Player) {\n      return this._createPlayer();\n    }\n\n    if (!scriptElement) {\n      loadScript();\n    }\n\n    scriptElement.addEventListener('load', () => {\n      this._createPlayer();\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    this._validateProps();\n\n    const updatedPropsExceptMedia = Object.keys(prevProps).reduce((updated, prop) => {\n      if (mediaProps.includes(prop)) {\n        return updated;\n      }\n\n      if (prevProps[prop] !== this.props[prop]) {\n        updated.push(prop);\n      }\n      return updated;\n    }, []);\n\n    if (updatedPropsExceptMedia.length > 0) {\n      this.player = null;\n      document.getElementById(prevProps.id).innerHTML = '';\n      return this._createPlayer();\n    }\n\n    if (prevProps.channel !== this.props.channel && this.props.channel) {\n      return this.player.setChannel(this.props.channel);\n    }\n\n    if (prevProps.collection !== this.props.collection && this.props.collection) {\n      this.player.setCollection(this.props.collection);\n    }\n\n    if (prevProps.video !== this.props.video && this.props.video) {\n      this.player.setVideo(`v${this.props.video}`);\n    }\n  }\n\n  _createPlayer() {\n    const options = {\n      height: '100%',\n      width: '100%',\n      playsinline: this.props.playsInline,\n      allowfullscreen: this.props.allowFullscreen,\n      autoplay: this.props.autoplay,\n      muted: this.props.muted,\n      time: this.props.time,\n      controls: !this.props.hideControls,\n      parent: this.props.parent\n    };\n\n    if (this.props.channel) {\n      options.channel = this.props.channel;\n    }\n\n    if (this.props.video) {\n      options.video = this.props.video;\n    }\n\n    if (this.props.collection) {\n      options.collection = this.props.collection;\n    }\n\n    this.player = new window.Twitch.Player(this.props.id, options);\n    this._addEventListeners();\n  }\n\n  _addEventListeners() {\n    this.player.addEventListener(window.Twitch.Player.ENDED, this.props.onEnded);\n    this.player.addEventListener(window.Twitch.Player.PAUSE, this.props.onPause);\n    this.player.addEventListener(window.Twitch.Player.PLAY, this.props.onPlay);\n    this.player.addEventListener(window.Twitch.Player.PLAYBACK_BLOCKED, this.props.onPlaybackBlocked);\n    this.player.addEventListener(window.Twitch.Player.PLAYING, this.props.onPlaying);\n    this.player.addEventListener(window.Twitch.Player.OFFLINE, this.props.onOffline);\n    this.player.addEventListener(window.Twitch.Player.ONLINE, this.props.onOnline);\n    this.player.addEventListener(window.Twitch.Player.READY, () => {\n      this.props.onReady(this.player);\n    });\n  }\n\n  _validateProps() {\n    const { channel, collection, video } = this.props;\n\n    if (!channel && !collection && !video) {\n      throw new Error('A channel, collection or video prop must be supplied to TwitchPlayer!');\n    }\n  }\n\n  render() {\n    const unknownProps = getUnknownProps(this.props, propTypes);\n\n    return (\n      <div id={this.props.id} style={{ width: this.props.width, height: this.props.height }} {...unknownProps} />\n    );\n  }\n}\n\nTwitchPlayer.propTypes = propTypes;\nTwitchPlayer.defaultProps = defaultProps;\n\nexport default TwitchPlayer;\n"],"names":["TWITCH_EMBED_URL","TWITCH_CHAT_URL","TWITCH_CLIP_URL","TWITCH_PLAYER_URL","CHAT_DEFAULT_HEIGHT","CHAT_DEFAULT_WIDTH","MEDIA_DEFAULT_HEIGHT","MEDIA_DEFAULT_WIDTH","parseParentQuery","parent","join","getUnknownProps","props","propTypes","Object","keys","reduce","unknown","prop","hasOwnProperty","scriptElement","loadScript","document","createElement","setAttribute","body","appendChild","PropTypes","string","bool","isRequired","oneOf","oneOfType","number","func","arrayOf","defaultProps","TwitchEmbed","_validateProps","window","Twitch","Embed","_createEmbed","addEventListener","prevProps","prevState","snapshot","withChat","embed","player","getElementById","id","innerHTML","updatedPropsExceptChannel","updated","push","length","channel","setChannel","allowFullscreen","fontSize","theme","_addEventListeners","AUTHENTICATE","onAuthenticate","VIDEO_PLAY","onVideoPlay","VIDEO_PAUSE","onVideoPause","VIDEO_READY","autoplay","muted","getPlayer","setVolume","pause","onVideoReady","Error","unknownProps","width","height","Component","TwitchChat","migration","themeQuery","migrationFirstChar","toString","_createEmbedURL","TwitchClip","clip","mediaProps","TwitchPlayer","Player","_createPlayer","updatedPropsExceptMedia","includes","collection","setCollection","video","setVideo","options","playsInline","time","hideControls","ENDED","onEnded","PAUSE","onPause","PLAY","onPlay","PLAYBACK_BLOCKED","onPlaybackBlocked","PLAYING","onPlaying","OFFLINE","onOffline","ONLINE","onOnline","READY","onReady"],"mappings":"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"}